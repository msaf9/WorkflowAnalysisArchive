[{"filename": "lib/Conversion/TritonGPUToLLVM/ElementwiseOpToLLVM.cpp", "status": "modified", "additions": 35, "deletions": 16, "changes": 51, "file_content_changes": "@@ -101,21 +101,40 @@ const std::string Fp8E4M3B15_to_Fp16 =\n     \"shl.b32 $1, b1, 7;                     \\n\"\n     \"}                                      \\n\";\n \n-const std::string Fp16_to_Fp8E4M3B15 =\n-    \"{                                      \\n\"\n-    \".reg .b32 a<2>, b<2>;                  \\n\"\n-    \".reg .b32 max_val;                     \\n\"\n-    \"mov.b32 max_val, 0x3F803F80;           \\n\"\n-    \"and.b32 a0, $1, 0x7fff7fff;            \\n\"\n-    \"and.b32 a1, $2, 0x7fff7fff;            \\n\"\n-    \"min.f16x2 a0, a0, max_val;             \\n\"\n-    \"min.f16x2 a1, a1, max_val;             \\n\"\n-    \"mad.lo.u32 a0, a0, 2, 0x00800080;      \\n\"\n-    \"mad.lo.u32 a1, a1, 2, 0x00800080;      \\n\"\n-    \"lop3.b32 b0, $1, 0x80008000, a0, 0xea; \\n\"\n-    \"lop3.b32 b1, $2, 0x80008000, a1, 0xea; \\n\"\n-    \"prmt.b32 $0, b0, b1, 0x7531;           \\n\"\n-    \"}\";\n+const std::string Fp16_to_Fp8E4M3B15(bool has_minx2) {\n+  std::string ret;\n+  ret += \"{                                      \\n\"\n+         \".reg .pred p<4>;                       \\n\"\n+         \".reg .b32 a<2>, b<2>;                  \\n\"\n+         \".reg .b16 c<4>;                        \\n\"\n+         \".reg .b16 max_val_f16;                 \\n\"\n+         \".reg .b32 max_val_f16x2;               \\n\"\n+         \"mov.b16 max_val_f16,   0x3F80;         \\n\"\n+         \"mov.b32 max_val_f16x2, 0x3F803F80;     \\n\"\n+         \"and.b32 a0, $1, 0x7fff7fff;            \\n\"\n+         \"and.b32 a1, $2, 0x7fff7fff;            \\n\";\n+  if (has_minx2)\n+    ret += \"min.f16x2 a0, a0, max_val_f16x2;      \\n\"\n+           \"min.f16x2 a1, a1, max_val_f16x2;      \\n\";\n+  else\n+    ret += \"setp.lt.f16x2  p0|p1, a0, max_val_f16x2;   \\n\"\n+           \"setp.lt.f16x2  p2|p3, a1, max_val_f16x2;   \\n\"\n+           \"mov.b32 {c0, c1}, a0;                \\n\"\n+           \"mov.b32 {c2, c3}, a1;                \\n\"\n+           \"selp.b16  c0, c0, max_val_f16, p0;   \\n\"\n+           \"selp.b16  c1, c1, max_val_f16, p1;   \\n\"\n+           \"selp.b16  c2, c2, max_val_f16, p2;   \\n\"\n+           \"selp.b16  c3, c3, max_val_f16, p3;   \\n\"\n+           \"mov.b32 a0, {c0, c1};                \\n\"\n+           \"mov.b32 a1, {c2, c3};                \\n\";\n+  ret += \"mad.lo.u32 a0, a0, 2, 0x00800080;      \\n\"\n+         \"mad.lo.u32 a1, a1, 2, 0x00800080;      \\n\"\n+         \"lop3.b32 b0, $1, 0x80008000, a0, 0xea; \\n\"\n+         \"lop3.b32 b1, $2, 0x80008000, a1, 0xea; \\n\"\n+         \"prmt.b32 $0, b0, b1, 0x7531;           \\n\"\n+         \"}\";\n+  return ret;\n+}\n \n /* ----- FP8E4M3B15X4 ------ */\n // NOTE: NOT USED RIGHT NOW\n@@ -557,7 +576,7 @@ struct FpToFpOpConversion\n         {{F8E4M3TyID, F16TyID}, Fp8E4M3Nv_to_Fp16},\n         {{F8E5M2TyID, F16TyID}, Fp8E5M2_to_Fp16},\n         // F16 -> F8\n-        {{F16TyID, F8E4M3B15TyID}, Fp16_to_Fp8E4M3B15},\n+        {{F16TyID, F8E4M3B15TyID}, Fp16_to_Fp8E4M3B15(computeCapability >= 80)},\n         {{F16TyID, F8E4M3FNTyID}, Fp16_to_Fp8E4M3B15x4},\n         {{F16TyID, F8E4M3TyID}, Fp16_to_Fp8E4M3Nv},\n         {{F16TyID, F8E5M2TyID}, Fp16_to_Fp8E5M2},"}]