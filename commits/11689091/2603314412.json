[{"filename": "CMakeLists.txt", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "file_content_changes": "@@ -3,11 +3,6 @@ include(ExternalProject)\n \n set(CMAKE_CXX_STANDARD 17)\n \n-if(NOT TRITON_LLVM_BUILD_DIR)\n-    set(TRITON_LLVM_BUILD_DIR ${CMAKE_BINARY_DIR})\n-endif()\n-\n-\n project(triton)\n include(CTest)\n if(NOT WIN32)"}, {"filename": "python/setup.py", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "file_content_changes": "@@ -7,14 +7,27 @@\n import subprocess\n import sys\n import tarfile\n-import tempfile\n import urllib.request\n from distutils.version import LooseVersion\n \n from setuptools import Extension, setup\n from setuptools.command.build_ext import build_ext\n \n \n+# Taken from https://github.com/pytorch/pytorch/blob/master/tools/setup_helpers/env.py\n+def check_env_flag(name: str, default: str = \"\") -> bool:\n+    return os.getenv(name, default).upper() in [\"ON\", \"1\", \"YES\", \"TRUE\", \"Y\"]\n+\n+\n+def get_build_type():\n+    if check_env_flag(\"DEBUG\"):\n+        return \"Debug\"\n+    elif check_env_flag(\"REL_WITH_DEB_INFO\"):\n+        return \"RelWithDebInfo\"\n+    else:\n+        return \"Release\"\n+\n+\n def get_llvm():\n     # tries to find system LLVM\n     versions = ['-11.0', '-11', '-11-64']\n@@ -80,15 +93,10 @@ def run(self):\n \n     def build_extension(self, ext):\n         llvm_include_dir, llvm_library_dir = get_llvm()\n-        self.debug = True\n         extdir = os.path.abspath(os.path.dirname(self.get_ext_fullpath(ext.path)))\n         # create build directories\n-        build_suffix = 'debug' if self.debug else 'release'\n-        llvm_build_dir = os.path.join(tempfile.gettempdir(), \"llvm-\" + build_suffix)\n         if not os.path.exists(self.build_temp):\n             os.makedirs(self.build_temp)\n-        if not os.path.exists(llvm_build_dir):\n-            os.makedirs(llvm_build_dir)\n         # python directories\n         python_include_dirs = [distutils.sysconfig.get_python_inc()] + ['/usr/local/cuda/include']\n         cmake_args = [\n@@ -99,11 +107,10 @@ def build_extension(self, ext):\n             \"-DLLVM_LIBRARY_DIR=\" + llvm_library_dir,\n             # '-DPYTHON_EXECUTABLE=' + sys.executable,\n             # '-DCMAKE_VERBOSE_MAKEFILE:BOOL=ON',\n-            \"-DTRITON_LLVM_BUILD_DIR=\" + llvm_build_dir,\n             \"-DPYTHON_INCLUDE_DIRS=\" + \";\".join(python_include_dirs)\n         ]\n         # configuration\n-        cfg = \"Debug\" if self.debug else \"Release\"\n+        cfg = get_build_type()\n         build_args = [\"--config\", cfg]\n \n         if platform.system() == \"Windows\":"}]