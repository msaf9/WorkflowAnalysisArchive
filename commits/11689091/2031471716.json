[{"filename": "lib/driver/llvm.cc", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "file_content_changes": "@@ -70,18 +70,14 @@ namespace triton{\n namespace driver{\n \n void init_llvm() {\n-  static bool init = false;\n-  if(!init){\n-    LLVMInitializeNVPTXTargetInfo();\n-    LLVMInitializeNVPTXTarget();\n-    LLVMInitializeNVPTXTargetMC();\n-    LLVMInitializeNVPTXAsmPrinter();\n-    LLVMInitializeAMDGPUTargetInfo();\n-    LLVMInitializeAMDGPUTarget();\n-    LLVMInitializeAMDGPUTargetMC();\n-    LLVMInitializeAMDGPUAsmPrinter();\n-    init = true;\n-  }\n+  LLVMInitializeNVPTXTargetInfo();\n+  LLVMInitializeNVPTXTarget();\n+  LLVMInitializeNVPTXTargetMC();\n+  LLVMInitializeNVPTXAsmPrinter();\n+  LLVMInitializeAMDGPUTargetInfo();\n+  LLVMInitializeAMDGPUTarget();\n+  LLVMInitializeAMDGPUTargetMC();\n+  LLVMInitializeAMDGPUAsmPrinter();\n }\n \n \n@@ -169,8 +165,6 @@ std::string llir_to_ptx(llvm::Module* module, int cc, int version){\n   // verify and store llvm\n   llvm::legacy::PassManager pm;\n   pm.add(llvm::createVerifierPass());\n-  // pm.add(llvm::createDeadCodeEliminationPass());\n-  // pm.add(llvm::createEarlyCSEPass());\n   pm.run(*module);\n   // module->print(llvm::outs(), nullptr);\n "}]