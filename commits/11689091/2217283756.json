[{"filename": "python/test/unit/language/test_core.py", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "file_content_changes": "@@ -937,6 +937,24 @@ def _kernel(dst, src, CACHE: tl.constexpr):\n         assert 'ld.global.ca' in ptx\n         assert 'ld.global.cg' not in ptx\n \n+@pytest.mark.parametrize(\"N\", [8, 10, 11, 1024])\n+def test_vectorization(N):\n+    src = torch.empty(1024, device='cuda')\n+    dst = torch.empty(1024, device='cuda')\n+    @triton.jit\n+    def _kernel(dst, src, N, BLOCK_SIZE: tl.constexpr):\n+        offsets = tl.program_id(0)*BLOCK_SIZE + tl.arange(0, BLOCK_SIZE)\n+        x = tl.load(src + offsets, mask=offsets < N)\n+        tl.store(dst + offsets, x, mask=offsets < N)\n+    pgm = _kernel[(1,)](dst, src, N=N, BLOCK_SIZE=src.shape[0])\n+    ptx = pgm.asm[\"ptx\"]\n+    if N % 4 == 0:\n+        assert \"ld.global.v4.b32\" in ptx\n+    elif N % 2 == 0:\n+        assert \"ld.global.v2.b32\" in ptx\n+    else:\n+        assert \"ld.global.b32\" in ptx\n+    # triton.testing.assert_almost_equal(dst, src[:N])\n # ---------------\n # test store\n # ---------------"}]