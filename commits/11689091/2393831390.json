[{"filename": "lib/codegen/analysis/align.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "file_content_changes": "@@ -507,6 +507,9 @@ std::vector<unsigned> align::populate_starting_multiple_default(ir::value* v) {\n \n unsigned get_max_multiple(int val){\n   if(val == 0) return 1 << 31;\n+  if(val % 128 == 0) return 128;\n+  if(val % 64 == 0) return 64;\n+  if(val % 32 == 0) return 32;\n   if(val % 16 == 0) return 16;\n   if(val % 8 == 0) return 8;\n   if(val % 4 == 0) return 4;\n@@ -527,7 +530,7 @@ std::vector<unsigned> align::populate_starting_multiple(ir::value *v){\n   if(auto *x = dynamic_cast<ir::binary_operator*>(v))\n     return populate_starting_multiple_binop(x);\n   if(auto *x = dynamic_cast<ir::constant_int*>(v))\n-    return add_to_cache(x, {std::min<unsigned>(x->get_value(), 128)}, starting_multiple_);\n+    return add_to_cache(x, {get_max_multiple(x->get_value())}, starting_multiple_);\n   if(auto *x = dynamic_cast<ir::make_range*>(v))\n     return add_to_cache(x, {get_max_multiple(x->get_first()->get_value())}, starting_multiple_);\n   if(auto *x = dynamic_cast<ir::getelementptr_inst*>(v))"}]