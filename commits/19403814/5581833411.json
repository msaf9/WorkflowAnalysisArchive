[{"filename": "main/.buildinfo", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -1,4 +1,4 @@\n # Sphinx build info version 1\n # This file hashes the configuration used when building these files. When it is not found, a full rebuild will be done.\n-config: f644ede5f95af5bc38bed14800d218a8\n+config: 893ebbe5b8557914b1f8741af8e3c84e\n tags: 645f666f9bcd5a90fca523b33c5a78b7"}, {"filename": "main/.doctrees/environment.pickle", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/getting-started/installation.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/getting-started/tutorials/01-vector-add.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/getting-started/tutorials/02-fused-softmax.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/getting-started/tutorials/03-matrix-multiplication.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/getting-started/tutorials/04-low-memory-dropout.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/getting-started/tutorials/05-layer-norm.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/getting-started/tutorials/06-fused-attention.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/getting-started/tutorials/07-math-functions.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/getting-started/tutorials/08-experimental-block-pointer.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/getting-started/tutorials/index.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/getting-started/tutorials/sg_execution_times.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/index.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/programming-guide/chapter-1/introduction.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/programming-guide/chapter-2/related-work.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.Config.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.autotune.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.heuristics.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.jit.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.abs.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.arange.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.argmax.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.argmin.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.associative_scan.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.atomic_add.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.atomic_cas.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.atomic_max.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.atomic_min.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.atomic_xchg.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.broadcast.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.broadcast_to.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.cat.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.cos.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.cumprod.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.cumsum.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.debug_barrier.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.device_assert.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.device_print.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.dot.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.exp.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.expand_dims.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.fdiv.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.full.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.load.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.log.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.max.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.max_constancy.doctree", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.max_contiguous.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.maximum.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.min.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.minimum.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.multiple_of.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.num_programs.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.program_id.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.rand.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.randint.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.randint4x.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.randn.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.ravel.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.reduce.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.reshape.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.sigmoid.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.sin.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.softmax.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.sqrt.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.static_assert.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.static_print.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.static_range.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.store.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.sum.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.trans.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.umulhi.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.view.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.where.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.xor_sum.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.language.zeros.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.testing.Benchmark.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.testing.do_bench.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/generated/triton.testing.perf_report.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/triton.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/triton.language.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/.doctrees/python-api/triton.testing.doctree", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/_downloads/3176accb6c7288b0e45f41d94eebacb9/06-fused-attention.ipynb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "file_content_changes": "@@ -15,7 +15,7 @@\n       \"cell_type\": \"markdown\",\n       \"metadata\": {},\n       \"source\": [\n-        \"\\n# Fused Attention\\n\\nThis is a Triton implementation of the Flash Attention algorithm\\n(see: Dao et al., https://arxiv.org/pdf/2205.14135v2.pdf; Rabe and Staats https://arxiv.org/pdf/2112.05682v2.pdf)\\n\"\n+        \"\\n# Fused Attention\\n\\nThis is a Triton implementation of the Flash Attention v2 algorithm from Tri Dao (https://tridao.me/publications/flash2/flash2.pdf)\\n\\nExtra Credits:\\n- Original flash attention paper (https://arxiv.org/abs/2205.14135)\\n- Rabe and Staats (https://arxiv.org/pdf/2112.05682v2.pdf)\\n- Adam P. Goucher for simplified vector math\\n\"\n       ]\n     },\n     {\n@@ -26,7 +26,7 @@\n       },\n       \"outputs\": [],\n       \"source\": [\n-        \"import pytest\\nimport torch\\n\\nimport triton\\nimport triton.language as tl\\n\\n\\n@triton.jit\\ndef max_fn(x, y):\\n    return tl.math.max(x, y)\\n\\n\\n@triton.jit\\ndef _fwd_kernel(\\n    Q, K, V, sm_scale,\\n    L, M,\\n    Out,\\n    stride_qz, stride_qh, stride_qm, stride_qk,\\n    stride_kz, stride_kh, stride_kn, stride_kk,\\n    stride_vz, stride_vh, stride_vk, stride_vn,\\n    stride_oz, stride_oh, stride_om, stride_on,\\n    Z, H, N_CTX,\\n    BLOCK_M: tl.constexpr, BLOCK_DMODEL: tl.constexpr,\\n    BLOCK_N: tl.constexpr,\\n    MODE: tl.constexpr,\\n):\\n    start_m = tl.program_id(0)\\n    off_hz = tl.program_id(1)\\n    qvk_offset = off_hz * stride_qh\\n    Q_block_ptr = tl.make_block_ptr(\\n        base=Q + qvk_offset,\\n        shape=(N_CTX, BLOCK_DMODEL),\\n        strides=(stride_qm, stride_qk),\\n        offsets=(start_m * BLOCK_M, 0),\\n        block_shape=(BLOCK_M, BLOCK_DMODEL),\\n        order=(1, 0)\\n    )\\n    K_block_ptr = tl.make_block_ptr(\\n        base=K + qvk_offset,\\n        shape=(BLOCK_DMODEL, N_CTX),\\n        strides=(stride_kk, stride_kn),\\n        offsets=(0, 0),\\n        block_shape=(BLOCK_DMODEL, BLOCK_N),\\n        order=(0, 1)\\n    )\\n    V_block_ptr = tl.make_block_ptr(\\n        base=V + qvk_offset,\\n        shape=(N_CTX, BLOCK_DMODEL),\\n        strides=(stride_vk, stride_vn),\\n        offsets=(0, 0),\\n        block_shape=(BLOCK_N, BLOCK_DMODEL),\\n        order=(1, 0)\\n    )\\n    O_block_ptr = tl.make_block_ptr(\\n        base=Out + qvk_offset,\\n        shape=(N_CTX, BLOCK_DMODEL),\\n        strides=(stride_om, stride_on),\\n        offsets=(start_m * BLOCK_M, 0),\\n        block_shape=(BLOCK_M, BLOCK_DMODEL),\\n        order=(1, 0)\\n    )\\n    # initialize offsets\\n    offs_m = start_m * BLOCK_M + tl.arange(0, BLOCK_M)\\n    offs_n = tl.arange(0, BLOCK_N)\\n    # initialize pointer to m and l\\n    m_i = tl.zeros([BLOCK_M], dtype=tl.float32) - float(\\\"inf\\\")\\n    l_i = tl.zeros([BLOCK_M], dtype=tl.float32)\\n    acc = tl.zeros([BLOCK_M, BLOCK_DMODEL], dtype=tl.float32)\\n    # causal check on every loop iteration can be expensive\\n    # and peeling the last iteration of the loop does not work well with ptxas\\n    # so we have a mode to do the causal check in a separate kernel entirely\\n    if MODE == 0:  # entire non-causal attention\\n        lo, hi = 0, N_CTX\\n    if MODE == 1:  # entire causal attention\\n        lo, hi = 0, (start_m + 1) * BLOCK_M\\n    if MODE == 2:  # off band-diagonal\\n        lo, hi = 0, start_m * BLOCK_M\\n    if MODE == 3:  # on band-diagonal\\n        l_ptrs = L + off_hz * N_CTX + offs_m\\n        m_ptrs = M + off_hz * N_CTX + offs_m\\n        m_i = tl.load(m_ptrs)\\n        l_i = tl.load(l_ptrs)\\n        acc += tl.load(O_block_ptr).to(tl.float32)\\n        lo, hi = start_m * BLOCK_M, (start_m + 1) * BLOCK_M\\n    # credits to: Adam P. Goucher (https://github.com/apgoucher):\\n    # scale sm_scale by 1/log_2(e) and use\\n    # 2^x instead of exp in the loop because CSE and LICM\\n    # don't work as expected with `exp` in the loop\\n    qk_scale = sm_scale * 1.44269504\\n    # load q: it will stay in SRAM throughout\\n    q = tl.load(Q_block_ptr)\\n    q = (q * qk_scale).to(tl.float16)\\n    # advance block pointers to first iteration of the loop\\n    K_block_ptr = tl.advance(K_block_ptr, (0, lo))\\n    V_block_ptr = tl.advance(V_block_ptr, (lo, 0))\\n    # loop over k, v and update accumulator\\n    for start_n in range(lo, hi, BLOCK_N):\\n        start_n = tl.multiple_of(start_n, BLOCK_N)\\n        # -- compute qk ----\\n        k = tl.load(K_block_ptr)\\n        qk = tl.zeros([BLOCK_M, BLOCK_N], dtype=tl.float32)\\n        qk += tl.dot(q, k)\\n        if MODE == 1 or MODE == 3:\\n            qk = tl.where(offs_m[:, None] >= (start_n + offs_n[None, :]), qk, float(\\\"-inf\\\"))\\n        # -- compute m_ij, p, l_ij\\n        m_ij = tl.max(qk, 1)\\n        p = tl.math.exp2(qk - m_ij[:, None])\\n        l_ij = tl.sum(p, 1)\\n        # -- update m_i and l_i\\n        m_i_new = tl.maximum(m_i, m_ij)\\n        alpha = tl.math.exp2(m_i - m_i_new)\\n        beta = tl.math.exp2(m_ij - m_i_new)\\n        l_i *= alpha\\n        l_i_new = l_i + beta * l_ij\\n        # scale p\\n        p_scale = beta / l_i_new\\n        p = p * p_scale[:, None]\\n        # scale acc\\n        acc_scale = l_i / l_i_new\\n        acc = acc * acc_scale[:, None]\\n        # update acc\\n        v = tl.load(V_block_ptr)\\n        p = p.to(tl.float16)\\n        acc += tl.dot(p, v)\\n        # update m_i and l_i\\n        l_i = l_i_new\\n        m_i = m_i_new\\n        # update pointers\\n        K_block_ptr = tl.advance(K_block_ptr, (0, BLOCK_N))\\n        V_block_ptr = tl.advance(V_block_ptr, (BLOCK_N, 0))\\n    # write back l and m\\n    l_ptrs = L + off_hz * N_CTX + offs_m\\n    m_ptrs = M + off_hz * N_CTX + offs_m\\n    tl.store(l_ptrs, l_i)\\n    tl.store(m_ptrs, m_i)\\n    # write back O\\n    tl.store(O_block_ptr, acc.to(tl.float16))\\n\\n\\n@triton.jit\\ndef _bwd_preprocess(\\n    Out, DO, L,\\n    NewDO, Delta,\\n    BLOCK_M: tl.constexpr, D_HEAD: tl.constexpr,\\n):\\n    off_m = tl.program_id(0) * BLOCK_M + tl.arange(0, BLOCK_M)\\n    off_n = tl.arange(0, D_HEAD)\\n    # load\\n    o = tl.load(Out + off_m[:, None] * D_HEAD + off_n[None, :]).to(tl.float32)\\n    do = tl.load(DO + off_m[:, None] * D_HEAD + off_n[None, :]).to(tl.float32)\\n    denom = tl.load(L + off_m).to(tl.float32)\\n    # compute\\n    do = do / denom[:, None]\\n    delta = tl.sum(o * do, axis=1)\\n    # write-back\\n    tl.store(NewDO + off_m[:, None] * D_HEAD + off_n[None, :], do)\\n    tl.store(Delta + off_m, delta)\\n\\n\\n@triton.jit\\ndef _bwd_kernel(\\n    Q, K, V, sm_scale, Out, DO,\\n    DQ, DK, DV,\\n    L, M,\\n    D,\\n    stride_qz, stride_qh, stride_qm, stride_qk,\\n    stride_kz, stride_kh, stride_kn, stride_kk,\\n    stride_vz, stride_vh, stride_vk, stride_vn,\\n    Z, H, N_CTX,\\n    num_block,\\n    BLOCK_M: tl.constexpr, BLOCK_DMODEL: tl.constexpr,\\n    BLOCK_N: tl.constexpr,\\n    MODE: tl.constexpr,\\n):\\n    off_hz = tl.program_id(0)\\n    off_z = off_hz // H\\n    off_h = off_hz % H\\n    qk_scale = sm_scale * 1.44269504\\n    # offset pointers for batch/head\\n    Q += off_z * stride_qz + off_h * stride_qh\\n    K += off_z * stride_qz + off_h * stride_qh\\n    V += off_z * stride_qz + off_h * stride_qh\\n    DO += off_z * stride_qz + off_h * stride_qh\\n    DQ += off_z * stride_qz + off_h * stride_qh\\n    DK += off_z * stride_qz + off_h * stride_qh\\n    DV += off_z * stride_qz + off_h * stride_qh\\n    for start_n in range(0, num_block):\\n        if MODE == 0:\\n            lo = 0\\n        else:\\n            lo = start_n * BLOCK_M\\n        # initialize row/col offsets\\n        offs_qm = lo + tl.arange(0, BLOCK_M)\\n        offs_n = start_n * BLOCK_M + tl.arange(0, BLOCK_M)\\n        offs_m = tl.arange(0, BLOCK_N)\\n        offs_k = tl.arange(0, BLOCK_DMODEL)\\n        # initialize pointers to value-like data\\n        q_ptrs = Q + (offs_qm[:, None] * stride_qm + offs_k[None, :] * stride_qk)\\n        k_ptrs = K + (offs_n[:, None] * stride_kn + offs_k[None, :] * stride_kk)\\n        v_ptrs = V + (offs_n[:, None] * stride_qm + offs_k[None, :] * stride_qk)\\n        do_ptrs = DO + (offs_qm[:, None] * stride_qm + offs_k[None, :] * stride_qk)\\n        dq_ptrs = DQ + (offs_qm[:, None] * stride_qm + offs_k[None, :] * stride_qk)\\n        # pointer to row-wise quantities in value-like data\\n        D_ptrs = D + off_hz * N_CTX\\n        m_ptrs = M + off_hz * N_CTX\\n        # initialize dv amd dk\\n        dv = tl.zeros([BLOCK_M, BLOCK_DMODEL], dtype=tl.float32)\\n        dk = tl.zeros([BLOCK_M, BLOCK_DMODEL], dtype=tl.float32)\\n        # k and v stay in SRAM throughout\\n        k = tl.load(k_ptrs)\\n        v = tl.load(v_ptrs)\\n        # loop over rows\\n        for start_m in range(lo, num_block * BLOCK_M, BLOCK_M):\\n            offs_m_curr = start_m + offs_m\\n            # load q, k, v, do on-chip\\n            q = tl.load(q_ptrs)\\n            # recompute p = softmax(qk, dim=-1).T\\n            # NOTE: `do` is pre-divided by `l`; no normalization here\\n            # if MODE == 1:\\n            if MODE == 1:\\n                qk = tl.where(offs_m_curr[:, None] >= (offs_n[None, :]), float(0.), float(\\\"-inf\\\"))\\n            else:\\n                qk = tl.zeros([BLOCK_M, BLOCK_N], dtype=tl.float32)\\n            qk += tl.dot(q, tl.trans(k))\\n            qk *= qk_scale\\n            m = tl.load(m_ptrs + offs_m_curr)\\n            p = tl.math.exp2(qk - m[:, None])\\n            # compute dv\\n            do = tl.load(do_ptrs)\\n            dv += tl.dot(tl.trans(p.to(Q.dtype.element_ty)), do)\\n            # compute dp = dot(v, do)\\n            Di = tl.load(D_ptrs + offs_m_curr)\\n            dp = tl.zeros([BLOCK_M, BLOCK_N], dtype=tl.float32) - Di[:, None]\\n            dp += tl.dot(do, tl.trans(v))\\n            # compute ds = p * (dp - delta[:, None])\\n            ds = p * dp * sm_scale\\n            # compute dk = dot(ds.T, q)\\n            dk += tl.dot(tl.trans(ds.to(Q.dtype.element_ty)), q)\\n            # compute dq\\n            dq = tl.load(dq_ptrs)\\n            dq += tl.dot(ds.to(Q.dtype.element_ty), k)\\n            tl.store(dq_ptrs, dq)\\n            # increment pointers\\n            dq_ptrs += BLOCK_M * stride_qm\\n            q_ptrs += BLOCK_M * stride_qm\\n            do_ptrs += BLOCK_M * stride_qm\\n        # write-back\\n        dv_ptrs = DV + (offs_n[:, None] * stride_qm + offs_k[None, :] * stride_qk)\\n        dk_ptrs = DK + (offs_n[:, None] * stride_kn + offs_k[None, :] * stride_kk)\\n        tl.store(dv_ptrs, dv)\\n        tl.store(dk_ptrs, dk)\\n\\n\\nempty = torch.empty(128, device=\\\"cuda\\\")\\n\\n\\nclass _attention(torch.autograd.Function):\\n\\n    @staticmethod\\n    def forward(ctx, q, k, v, causal, sm_scale):\\n        BLOCK = 128\\n        # shape constraints\\n        Lq, Lk, Lv = q.shape[-1], k.shape[-1], v.shape[-1]\\n        assert Lq == Lk and Lk == Lv\\n        assert Lk in {16, 32, 64, 128}\\n        o = torch.empty_like(q)\\n        grid = (triton.cdiv(q.shape[2], 128), q.shape[0] * q.shape[1], 1)\\n        L = torch.empty((q.shape[0] * q.shape[1], q.shape[2]), device=q.device, dtype=torch.float32)\\n        m = torch.empty((q.shape[0] * q.shape[1], q.shape[2]), device=q.device, dtype=torch.float32)\\n\\n        num_warps = 4 if Lk <= 64 else 8\\n        if causal:\\n            modes = [1] if q.shape[2] <= 2048 else [2, 3]\\n        else:\\n            modes = [0]\\n        for mode in modes:\\n            _fwd_kernel[grid](\\n                q, k, v, sm_scale,\\n                L, m,\\n                o,\\n                q.stride(0), q.stride(1), q.stride(2), q.stride(3),\\n                k.stride(0), k.stride(1), k.stride(2), k.stride(3),\\n                v.stride(0), v.stride(1), v.stride(2), v.stride(3),\\n                o.stride(0), o.stride(1), o.stride(2), o.stride(3),\\n                q.shape[0], q.shape[1], q.shape[2],\\n                BLOCK_M=128, BLOCK_N=BLOCK, BLOCK_DMODEL=Lk,\\n                MODE=mode,\\n                num_warps=num_warps,\\n                num_stages=2)\\n\\n        ctx.save_for_backward(q, k, v, o, L, m)\\n        ctx.grid = grid\\n        ctx.sm_scale = sm_scale\\n        ctx.BLOCK_DMODEL = Lk\\n        ctx.causal = causal\\n        return o\\n\\n    @staticmethod\\n    def backward(ctx, do):\\n        BLOCK = 128\\n        q, k, v, o, l, m = ctx.saved_tensors\\n        do = do.contiguous()\\n        dq = torch.zeros_like(q, dtype=torch.float32)\\n        dk = torch.empty_like(k)\\n        dv = torch.empty_like(v)\\n        do_scaled = torch.empty_like(do)\\n        delta = torch.empty_like(l)\\n        if ctx.causal:\\n            mode = 1\\n        else:\\n            mode = 0\\n        _bwd_preprocess[(ctx.grid[0] * ctx.grid[1], )](\\n            o, do, l,\\n            do_scaled, delta,\\n            BLOCK_M=BLOCK, D_HEAD=ctx.BLOCK_DMODEL,\\n        )\\n        _bwd_kernel[(ctx.grid[1],)](\\n            q, k, v, ctx.sm_scale,\\n            o, do_scaled,\\n            dq, dk, dv,\\n            l, m,\\n            delta,\\n            q.stride(0), q.stride(1), q.stride(2), q.stride(3),\\n            k.stride(0), k.stride(1), k.stride(2), k.stride(3),\\n            v.stride(0), v.stride(1), v.stride(2), v.stride(3),\\n            q.shape[0], q.shape[1], q.shape[2],\\n            ctx.grid[0],\\n            BLOCK_M=BLOCK, BLOCK_N=BLOCK,\\n            BLOCK_DMODEL=ctx.BLOCK_DMODEL, num_warps=8,\\n            MODE=mode,\\n            num_stages=1,\\n        )\\n        return dq, dk, dv, None, None\\n\\n\\nattention = _attention.apply\\n\\n\\n@pytest.mark.parametrize('Z, H, N_CTX, D_HEAD', [(6, 9, 1024, 64)])\\n@pytest.mark.parametrize('causal', [False, True])\\ndef test_op(Z, H, N_CTX, D_HEAD, causal, dtype=torch.float16):\\n    torch.manual_seed(20)\\n    q = torch.empty((Z, H, N_CTX, D_HEAD), dtype=dtype, device=\\\"cuda\\\").normal_(mean=0., std=0.5).requires_grad_()\\n    k = torch.empty((Z, H, N_CTX, D_HEAD), dtype=dtype, device=\\\"cuda\\\").normal_(mean=0., std=0.5).requires_grad_()\\n    v = torch.empty((Z, H, N_CTX, D_HEAD), dtype=dtype, device=\\\"cuda\\\").normal_(mean=0., std=0.5).requires_grad_()\\n    sm_scale = 0.5\\n    dout = torch.randn_like(q)\\n    # reference implementation\\n    M = torch.tril(torch.ones((N_CTX, N_CTX), device=\\\"cuda\\\"))\\n    p = torch.matmul(q, k.transpose(2, 3)) * sm_scale\\n    if causal:\\n        p[:, :, M == 0] = float(\\\"-inf\\\")\\n    p = torch.softmax(p.float(), dim=-1).half()\\n    # p = torch.exp(p)\\n    ref_out = torch.matmul(p, v)\\n    ref_out.backward(dout)\\n    ref_dv, v.grad = v.grad.clone(), None\\n    ref_dk, k.grad = k.grad.clone(), None\\n    ref_dq, q.grad = q.grad.clone(), None\\n    # triton implementation\\n    tri_out = attention(q, k, v, causal, sm_scale).half()\\n    tri_out.backward(dout)\\n    tri_dv, v.grad = v.grad.clone(), None\\n    tri_dk, k.grad = k.grad.clone(), None\\n    tri_dq, q.grad = q.grad.clone(), None\\n    # compare\\n    assert torch.allclose(ref_out, tri_out, atol=1e-2, rtol=0)\\n    assert torch.allclose(ref_dv, tri_dv, atol=1e-2, rtol=0)\\n    assert torch.allclose(ref_dk, tri_dk, atol=1e-2, rtol=0)\\n    assert torch.allclose(ref_dq, tri_dq, atol=1e-2, rtol=0)\\n\\n\\ntry:\\n    from flash_attn.flash_attn_interface import flash_attn_func\\n    HAS_FLASH = True\\nexcept BaseException:\\n    HAS_FLASH = False\\n\\nBATCH, N_HEADS, N_CTX, D_HEAD = 4, 48, 4096, 64\\n# vary seq length for fixed head and batch=4\\nconfigs = [triton.testing.Benchmark(\\n    x_names=['N_CTX'],\\n    x_vals=[2**i for i in range(10, 15)],\\n    line_arg='provider',\\n    line_vals=['triton'] + (['flash'] if HAS_FLASH else []),\\n    line_names=['Triton'] + (['Flash'] if HAS_FLASH else []),\\n    styles=[('red', '-'), ('blue', '-')],\\n    ylabel='ms',\\n    plot_name=f'fused-attention-batch{BATCH}-head{N_HEADS}-d{D_HEAD}-{mode}',\\n    args={'H': N_HEADS, 'BATCH': BATCH, 'D_HEAD': D_HEAD, 'dtype': torch.float16, 'mode': mode, 'causal': causal}\\n) for mode in ['fwd', 'bwd'] for causal in [False, True]]\\n\\n\\n@triton.testing.perf_report(configs)\\ndef bench_flash_attention(BATCH, H, N_CTX, D_HEAD, causal, mode, provider, dtype=torch.float16, device=\\\"cuda\\\"):\\n    assert mode in ['fwd', 'bwd']\\n    warmup = 25\\n    rep = 100\\n    if provider == \\\"triton\\\":\\n        q = torch.randn((BATCH, H, N_CTX, D_HEAD), dtype=dtype, device=\\\"cuda\\\", requires_grad=True)\\n        k = torch.randn((BATCH, H, N_CTX, D_HEAD), dtype=dtype, device=\\\"cuda\\\", requires_grad=True)\\n        v = torch.randn((BATCH, H, N_CTX, D_HEAD), dtype=dtype, device=\\\"cuda\\\", requires_grad=True)\\n        sm_scale = 1.3\\n        fn = lambda: attention(q, k, v, causal, sm_scale)\\n        if mode == 'bwd':\\n            o = fn()\\n            do = torch.randn_like(o)\\n            fn = lambda: o.backward(do, retain_graph=True)\\n        ms = triton.testing.do_bench(fn, warmup=warmup, rep=rep)\\n    if provider == \\\"flash\\\":\\n        lengths = torch.full((BATCH,), fill_value=N_CTX, device=device)\\n        cu_seqlens = torch.zeros((BATCH + 1,), device=device, dtype=torch.int32)\\n        cu_seqlens[1:] = lengths.cumsum(0)\\n        qkv = torch.randn((BATCH * N_CTX, 3, H, D_HEAD), dtype=dtype, device=device, requires_grad=True)\\n        fn = lambda: flash_attn_func(qkv, cu_seqlens, 0., N_CTX, causal=causal)\\n        if mode == 'bwd':\\n            o = fn()\\n            do = torch.randn_like(o)\\n            fn = lambda: o.backward(do, retain_graph=True)\\n        ms = triton.testing.do_bench(fn, warmup=warmup, rep=rep)\\n    flops_per_matmul = 2. * BATCH * H * N_CTX * N_CTX * D_HEAD\\n    total_flops = 2 * flops_per_matmul\\n    if causal:\\n        total_flops *= 0.5\\n    if mode == 'bwd':\\n        total_flops *= 2.5  # 2.0(bwd) + 0.5(recompute)\\n    return total_flops / ms * 1e-9\\n\\n\\n# only works on post-Ampere GPUs right now\\nbench_flash_attention.run(save_path='.', print_data=True)\"\n+        \"import pytest\\nimport torch\\n\\nimport triton\\nimport triton.language as tl\\n\\n\\n@triton.jit\\ndef max_fn(x, y):\\n    return tl.math.max(x, y)\\n\\n\\n@triton.jit\\ndef _fwd_kernel(\\n    Q, K, V, sm_scale,\\n    L, M,\\n    Out,\\n    stride_qz, stride_qh, stride_qm, stride_qk,\\n    stride_kz, stride_kh, stride_kn, stride_kk,\\n    stride_vz, stride_vh, stride_vk, stride_vn,\\n    stride_oz, stride_oh, stride_om, stride_on,\\n    Z, H, N_CTX,\\n    BLOCK_M: tl.constexpr, BLOCK_DMODEL: tl.constexpr,\\n    BLOCK_N: tl.constexpr,\\n    MODE: tl.constexpr,\\n):\\n    start_m = tl.program_id(0)\\n    off_hz = tl.program_id(1)\\n    qvk_offset = off_hz * stride_qh\\n    Q_block_ptr = tl.make_block_ptr(\\n        base=Q + qvk_offset,\\n        shape=(N_CTX, BLOCK_DMODEL),\\n        strides=(stride_qm, stride_qk),\\n        offsets=(start_m * BLOCK_M, 0),\\n        block_shape=(BLOCK_M, BLOCK_DMODEL),\\n        order=(1, 0)\\n    )\\n    K_block_ptr = tl.make_block_ptr(\\n        base=K + qvk_offset,\\n        shape=(BLOCK_DMODEL, N_CTX),\\n        strides=(stride_kk, stride_kn),\\n        offsets=(0, 0),\\n        block_shape=(BLOCK_DMODEL, BLOCK_N),\\n        order=(0, 1)\\n    )\\n    V_block_ptr = tl.make_block_ptr(\\n        base=V + qvk_offset,\\n        shape=(N_CTX, BLOCK_DMODEL),\\n        strides=(stride_vk, stride_vn),\\n        offsets=(0, 0),\\n        block_shape=(BLOCK_N, BLOCK_DMODEL),\\n        order=(1, 0)\\n    )\\n    O_block_ptr = tl.make_block_ptr(\\n        base=Out + qvk_offset,\\n        shape=(N_CTX, BLOCK_DMODEL),\\n        strides=(stride_om, stride_on),\\n        offsets=(start_m * BLOCK_M, 0),\\n        block_shape=(BLOCK_M, BLOCK_DMODEL),\\n        order=(1, 0)\\n    )\\n    # initialize offsets\\n    offs_m = start_m * BLOCK_M + tl.arange(0, BLOCK_M)\\n    offs_n = tl.arange(0, BLOCK_N)\\n    # initialize pointer to m and l\\n    m_i = tl.zeros([BLOCK_M], dtype=tl.float32) - float(\\\"inf\\\")\\n    l_i = tl.zeros([BLOCK_M], dtype=tl.float32)\\n    acc = tl.zeros([BLOCK_M, BLOCK_DMODEL], dtype=tl.float32)\\n    # causal check on every loop iteration can be expensive\\n    # and peeling the last iteration of the loop does not work well with ptxas\\n    # so we have a mode to do the causal check in a separate kernel entirely\\n    if MODE == 0:  # entire non-causal attention\\n        lo, hi = 0, N_CTX\\n    if MODE == 1:  # entire causal attention\\n        lo, hi = 0, (start_m + 1) * BLOCK_M\\n    if MODE == 2:  # off band-diagonal\\n        lo, hi = 0, start_m * BLOCK_M\\n    if MODE == 3:  # on band-diagonal\\n        l_ptrs = L + off_hz * N_CTX + offs_m\\n        m_ptrs = M + off_hz * N_CTX + offs_m\\n        m_i = tl.load(m_ptrs)\\n        l_i = tl.load(l_ptrs)\\n        acc += tl.load(O_block_ptr).to(tl.float32)\\n        lo, hi = start_m * BLOCK_M, (start_m + 1) * BLOCK_M\\n    # scale sm_scale by log_2(e) and use\\n    # 2^x instead of exp in the loop because CSE and LICM\\n    # don't work as expected with `exp` in the loop\\n    qk_scale = sm_scale * 1.44269504\\n    # load q: it will stay in SRAM throughout\\n    q = tl.load(Q_block_ptr)\\n    q = (q * qk_scale).to(tl.float16)\\n    # advance block pointers to first iteration of the loop\\n    K_block_ptr = tl.advance(K_block_ptr, (0, lo))\\n    V_block_ptr = tl.advance(V_block_ptr, (lo, 0))\\n    # loop over k, v and update accumulator\\n    for start_n in range(lo, hi, BLOCK_N):\\n        start_n = tl.multiple_of(start_n, BLOCK_N)\\n        # -- compute qk ----\\n        k = tl.load(K_block_ptr)\\n        qk = tl.zeros([BLOCK_M, BLOCK_N], dtype=tl.float32)\\n        qk += tl.dot(q, k)\\n        if MODE == 1 or MODE == 3:\\n            qk = tl.where(offs_m[:, None] >= (start_n + offs_n[None, :]), qk, float(\\\"-inf\\\"))\\n        # -- compute m_ij, p, l_ij\\n        m_ij = tl.maximum(m_i, tl.max(qk, 1))\\n        p = tl.math.exp2(qk - m_ij[:, None])\\n        l_ij = tl.sum(p, 1)\\n        # -- update m_i and l_i\\n        alpha = tl.math.exp2(m_i - m_ij)\\n        l_i *= alpha\\n        l_i_new = l_i + l_ij\\n        # scale acc\\n        acc_scale = l_i * 0 + alpha\\n        acc = acc * acc_scale[:, None]\\n        # update acc\\n        v = tl.load(V_block_ptr)\\n        p = p.to(tl.float16)\\n        acc += tl.dot(p, v)\\n        # update m_i and l_i\\n        l_i = l_i_new\\n        m_i = m_ij\\n        # update pointers\\n        K_block_ptr = tl.advance(K_block_ptr, (0, BLOCK_N))\\n        V_block_ptr = tl.advance(V_block_ptr, (BLOCK_N, 0))\\n    # write back l and m\\n    acc = acc / l_i[:, None]\\n    l_ptrs = L + off_hz * N_CTX + offs_m\\n    m_ptrs = M + off_hz * N_CTX + offs_m\\n    tl.store(l_ptrs, l_i)\\n    tl.store(m_ptrs, m_i)\\n    # write back O\\n    tl.store(O_block_ptr, acc.to(tl.float16))\\n\\n\\n@triton.jit\\ndef _bwd_preprocess(\\n    Out, DO, L,\\n    NewDO, Delta,\\n    BLOCK_M: tl.constexpr, D_HEAD: tl.constexpr,\\n):\\n    off_m = tl.program_id(0) * BLOCK_M + tl.arange(0, BLOCK_M)\\n    off_n = tl.arange(0, D_HEAD)\\n    # load\\n    o = tl.load(Out + off_m[:, None] * D_HEAD + off_n[None, :]).to(tl.float32)\\n    do = tl.load(DO + off_m[:, None] * D_HEAD + off_n[None, :]).to(tl.float32)\\n    denom = tl.load(L + off_m).to(tl.float32)\\n    # compute\\n    do = do / denom[:, None]\\n    delta = tl.sum(o * do, axis=1)\\n    # write-back\\n    tl.store(NewDO + off_m[:, None] * D_HEAD + off_n[None, :], do)\\n    tl.store(Delta + off_m, delta)\\n\\n\\n@triton.jit\\ndef _bwd_kernel(\\n    Q, K, V, sm_scale, Out, DO,\\n    DQ, DK, DV,\\n    L, M,\\n    D,\\n    stride_qz, stride_qh, stride_qm, stride_qk,\\n    stride_kz, stride_kh, stride_kn, stride_kk,\\n    stride_vz, stride_vh, stride_vk, stride_vn,\\n    Z, H, N_CTX,\\n    num_block,\\n    BLOCK_M: tl.constexpr, BLOCK_DMODEL: tl.constexpr,\\n    BLOCK_N: tl.constexpr,\\n    MODE: tl.constexpr,\\n):\\n    off_hz = tl.program_id(0)\\n    off_z = off_hz // H\\n    off_h = off_hz % H\\n    qk_scale = sm_scale * 1.44269504\\n    # offset pointers for batch/head\\n    Q += off_z * stride_qz + off_h * stride_qh\\n    K += off_z * stride_qz + off_h * stride_qh\\n    V += off_z * stride_qz + off_h * stride_qh\\n    DO += off_z * stride_qz + off_h * stride_qh\\n    DQ += off_z * stride_qz + off_h * stride_qh\\n    DK += off_z * stride_qz + off_h * stride_qh\\n    DV += off_z * stride_qz + off_h * stride_qh\\n    for start_n in range(0, num_block):\\n        if MODE == 0:\\n            lo = 0\\n        else:\\n            lo = start_n * BLOCK_M\\n        # initialize row/col offsets\\n        offs_qm = lo + tl.arange(0, BLOCK_M)\\n        offs_n = start_n * BLOCK_M + tl.arange(0, BLOCK_M)\\n        offs_m = tl.arange(0, BLOCK_N)\\n        offs_k = tl.arange(0, BLOCK_DMODEL)\\n        # initialize pointers to value-like data\\n        q_ptrs = Q + (offs_qm[:, None] * stride_qm + offs_k[None, :] * stride_qk)\\n        k_ptrs = K + (offs_n[:, None] * stride_kn + offs_k[None, :] * stride_kk)\\n        v_ptrs = V + (offs_n[:, None] * stride_qm + offs_k[None, :] * stride_qk)\\n        do_ptrs = DO + (offs_qm[:, None] * stride_qm + offs_k[None, :] * stride_qk)\\n        dq_ptrs = DQ + (offs_qm[:, None] * stride_qm + offs_k[None, :] * stride_qk)\\n        # pointer to row-wise quantities in value-like data\\n        D_ptrs = D + off_hz * N_CTX\\n        m_ptrs = M + off_hz * N_CTX\\n        # initialize dv amd dk\\n        dv = tl.zeros([BLOCK_M, BLOCK_DMODEL], dtype=tl.float32)\\n        dk = tl.zeros([BLOCK_M, BLOCK_DMODEL], dtype=tl.float32)\\n        # k and v stay in SRAM throughout\\n        k = tl.load(k_ptrs)\\n        v = tl.load(v_ptrs)\\n        # loop over rows\\n        for start_m in range(lo, num_block * BLOCK_M, BLOCK_M):\\n            offs_m_curr = start_m + offs_m\\n            # load q, k, v, do on-chip\\n            q = tl.load(q_ptrs)\\n            # recompute p = softmax(qk, dim=-1).T\\n            # NOTE: `do` is pre-divided by `l`; no normalization here\\n            # if MODE == 1:\\n            if MODE == 1:\\n                qk = tl.where(offs_m_curr[:, None] >= (offs_n[None, :]), float(0.), float(\\\"-inf\\\"))\\n            else:\\n                qk = tl.zeros([BLOCK_M, BLOCK_N], dtype=tl.float32)\\n            qk += tl.dot(q, tl.trans(k))\\n            qk *= qk_scale\\n            m = tl.load(m_ptrs + offs_m_curr)\\n            p = tl.math.exp2(qk - m[:, None])\\n            # compute dv\\n            do = tl.load(do_ptrs)\\n            dv += tl.dot(tl.trans(p.to(Q.dtype.element_ty)), do)\\n            # compute dp = dot(v, do)\\n            Di = tl.load(D_ptrs + offs_m_curr)\\n            dp = tl.zeros([BLOCK_M, BLOCK_N], dtype=tl.float32) - Di[:, None]\\n            dp += tl.dot(do, tl.trans(v))\\n            # compute ds = p * (dp - delta[:, None])\\n            ds = p * dp * sm_scale\\n            # compute dk = dot(ds.T, q)\\n            dk += tl.dot(tl.trans(ds.to(Q.dtype.element_ty)), q)\\n            # compute dq\\n            dq = tl.load(dq_ptrs)\\n            dq += tl.dot(ds.to(Q.dtype.element_ty), k)\\n            tl.store(dq_ptrs, dq)\\n            # increment pointers\\n            dq_ptrs += BLOCK_M * stride_qm\\n            q_ptrs += BLOCK_M * stride_qm\\n            do_ptrs += BLOCK_M * stride_qm\\n        # write-back\\n        dv_ptrs = DV + (offs_n[:, None] * stride_qm + offs_k[None, :] * stride_qk)\\n        dk_ptrs = DK + (offs_n[:, None] * stride_kn + offs_k[None, :] * stride_kk)\\n        tl.store(dv_ptrs, dv)\\n        tl.store(dk_ptrs, dk)\\n\\n\\nempty = torch.empty(128, device=\\\"cuda\\\")\\n\\n\\nclass _attention(torch.autograd.Function):\\n\\n    @staticmethod\\n    def forward(ctx, q, k, v, causal, sm_scale):\\n        # shape constraints\\n        Lq, Lk, Lv = q.shape[-1], k.shape[-1], v.shape[-1]\\n        assert Lq == Lk and Lk == Lv\\n        assert Lk in {16, 32, 64, 128}\\n        o = torch.empty_like(q)\\n        BLOCK_M = 128\\n        BLOCK_N = 64\\n        grid = (triton.cdiv(q.shape[2], BLOCK_M), q.shape[0] * q.shape[1], 1)\\n        L = torch.empty((q.shape[0] * q.shape[1], q.shape[2]), device=q.device, dtype=torch.float32)\\n        m = torch.empty((q.shape[0] * q.shape[1], q.shape[2]), device=q.device, dtype=torch.float32)\\n\\n        num_warps = 4 if Lk <= 64 else 8\\n        if causal:\\n            modes = [1] if q.shape[2] <= 2048 else [2, 3]\\n        else:\\n            modes = [0]\\n        for mode in modes:\\n            _fwd_kernel[grid](\\n                q, k, v, sm_scale,\\n                L, m,\\n                o,\\n                q.stride(0), q.stride(1), q.stride(2), q.stride(3),\\n                k.stride(0), k.stride(1), k.stride(2), k.stride(3),\\n                v.stride(0), v.stride(1), v.stride(2), v.stride(3),\\n                o.stride(0), o.stride(1), o.stride(2), o.stride(3),\\n                q.shape[0], q.shape[1], q.shape[2],\\n                BLOCK_M=BLOCK_M, BLOCK_N=BLOCK_N, BLOCK_DMODEL=Lk,\\n                MODE=mode,\\n                num_warps=num_warps,\\n                num_stages=4)\\n\\n        ctx.save_for_backward(q, k, v, o, L, m)\\n        ctx.grid = grid\\n        ctx.sm_scale = sm_scale\\n        ctx.BLOCK_DMODEL = Lk\\n        ctx.causal = causal\\n        return o\\n\\n    @staticmethod\\n    def backward(ctx, do):\\n        BLOCK = 128\\n        q, k, v, o, l, m = ctx.saved_tensors\\n        do = do.contiguous()\\n        dq = torch.zeros_like(q, dtype=torch.float32)\\n        dk = torch.empty_like(k)\\n        dv = torch.empty_like(v)\\n        do_scaled = torch.empty_like(do)\\n        delta = torch.empty_like(l)\\n        if ctx.causal:\\n            mode = 1\\n        else:\\n            mode = 0\\n        _bwd_preprocess[(ctx.grid[0] * ctx.grid[1], )](\\n            o, do, l,\\n            do_scaled, delta,\\n            BLOCK_M=BLOCK, D_HEAD=ctx.BLOCK_DMODEL,\\n        )\\n        _bwd_kernel[(ctx.grid[1],)](\\n            q, k, v, ctx.sm_scale,\\n            o, do_scaled,\\n            dq, dk, dv,\\n            l, m,\\n            delta,\\n            q.stride(0), q.stride(1), q.stride(2), q.stride(3),\\n            k.stride(0), k.stride(1), k.stride(2), k.stride(3),\\n            v.stride(0), v.stride(1), v.stride(2), v.stride(3),\\n            q.shape[0], q.shape[1], q.shape[2],\\n            ctx.grid[0],\\n            BLOCK_M=BLOCK, BLOCK_N=BLOCK,\\n            BLOCK_DMODEL=ctx.BLOCK_DMODEL, num_warps=8,\\n            MODE=mode,\\n            num_stages=1,\\n        )\\n        return dq, dk, dv, None, None\\n\\n\\nattention = _attention.apply\\n\\n\\n@pytest.mark.parametrize('Z, H, N_CTX, D_HEAD', [(6, 9, 1024, 64)])\\n@pytest.mark.parametrize('causal', [False, True])\\ndef test_op(Z, H, N_CTX, D_HEAD, causal, dtype=torch.float16):\\n    torch.manual_seed(20)\\n    q = torch.empty((Z, H, N_CTX, D_HEAD), dtype=dtype, device=\\\"cuda\\\").normal_(mean=0., std=0.5).requires_grad_()\\n    k = torch.empty((Z, H, N_CTX, D_HEAD), dtype=dtype, device=\\\"cuda\\\").normal_(mean=0., std=0.5).requires_grad_()\\n    v = torch.empty((Z, H, N_CTX, D_HEAD), dtype=dtype, device=\\\"cuda\\\").normal_(mean=0., std=0.5).requires_grad_()\\n    sm_scale = 0.5\\n    dout = torch.randn_like(q)\\n    # reference implementation\\n    M = torch.tril(torch.ones((N_CTX, N_CTX), device=\\\"cuda\\\"))\\n    p = torch.matmul(q, k.transpose(2, 3)) * sm_scale\\n    if causal:\\n        p[:, :, M == 0] = float(\\\"-inf\\\")\\n    p = torch.softmax(p.float(), dim=-1).half()\\n    # p = torch.exp(p)\\n    ref_out = torch.matmul(p, v)\\n    ref_out.backward(dout)\\n    ref_dv, v.grad = v.grad.clone(), None\\n    ref_dk, k.grad = k.grad.clone(), None\\n    ref_dq, q.grad = q.grad.clone(), None\\n    # triton implementation\\n    tri_out = attention(q, k, v, causal, sm_scale).half()\\n    tri_out.backward(dout)\\n    tri_dv, v.grad = v.grad.clone(), None\\n    tri_dk, k.grad = k.grad.clone(), None\\n    tri_dq, q.grad = q.grad.clone(), None\\n    # compare\\n    assert torch.allclose(ref_out, tri_out, atol=1e-2, rtol=0)\\n    assert torch.allclose(ref_dv, tri_dv, atol=1e-2, rtol=0)\\n    assert torch.allclose(ref_dk, tri_dk, atol=1e-2, rtol=0)\\n    assert torch.allclose(ref_dq, tri_dq, atol=1e-2, rtol=0)\\n\\n\\ntry:\\n    from flash_attn.flash_attn_interface import flash_attn_func\\n    HAS_FLASH = True\\nexcept BaseException:\\n    HAS_FLASH = False\\n\\nBATCH, N_HEADS, N_CTX, D_HEAD = 4, 48, 4096, 64\\n# vary seq length for fixed head and batch=4\\nconfigs = [triton.testing.Benchmark(\\n    x_names=['N_CTX'],\\n    x_vals=[2**i for i in range(10, 15)],\\n    line_arg='provider',\\n    line_vals=['triton'] + (['flash'] if HAS_FLASH else []),\\n    line_names=['Triton'] + (['Flash'] if HAS_FLASH else []),\\n    styles=[('red', '-'), ('blue', '-')],\\n    ylabel='ms',\\n    plot_name=f'fused-attention-batch{BATCH}-head{N_HEADS}-d{D_HEAD}-{mode}',\\n    args={'H': N_HEADS, 'BATCH': BATCH, 'D_HEAD': D_HEAD, 'dtype': torch.float16, 'mode': mode, 'causal': causal}\\n) for mode in ['fwd'] for causal in [False]]\\n\\n\\n@triton.testing.perf_report(configs)\\ndef bench_flash_attention(BATCH, H, N_CTX, D_HEAD, causal, mode, provider, dtype=torch.float16, device=\\\"cuda\\\"):\\n    assert mode in ['fwd', 'bwd']\\n    warmup = 25\\n    rep = 100\\n    if provider == \\\"triton\\\":\\n        q = torch.randn((BATCH, H, N_CTX, D_HEAD), dtype=dtype, device=\\\"cuda\\\", requires_grad=True)\\n        k = torch.randn((BATCH, H, N_CTX, D_HEAD), dtype=dtype, device=\\\"cuda\\\", requires_grad=True)\\n        v = torch.randn((BATCH, H, N_CTX, D_HEAD), dtype=dtype, device=\\\"cuda\\\", requires_grad=True)\\n        sm_scale = 1.3\\n        fn = lambda: attention(q, k, v, causal, sm_scale)\\n        if mode == 'bwd':\\n            o = fn()\\n            do = torch.randn_like(o)\\n            fn = lambda: o.backward(do, retain_graph=True)\\n        ms = triton.testing.do_bench(fn, warmup=warmup, rep=rep)\\n    if provider == \\\"flash\\\":\\n        lengths = torch.full((BATCH,), fill_value=N_CTX, device=device)\\n        cu_seqlens = torch.zeros((BATCH + 1,), device=device, dtype=torch.int32)\\n        cu_seqlens[1:] = lengths.cumsum(0)\\n        qkv = torch.randn((BATCH * N_CTX, 3, H, D_HEAD), dtype=dtype, device=device, requires_grad=True)\\n        fn = lambda: flash_attn_func(qkv, cu_seqlens, 0., N_CTX, causal=causal)\\n        if mode == 'bwd':\\n            o = fn()\\n            do = torch.randn_like(o)\\n            fn = lambda: o.backward(do, retain_graph=True)\\n        ms = triton.testing.do_bench(fn, warmup=warmup, rep=rep)\\n    flops_per_matmul = 2. * BATCH * H * N_CTX * N_CTX * D_HEAD\\n    total_flops = 2 * flops_per_matmul\\n    if causal:\\n        total_flops *= 0.5\\n    if mode == 'bwd':\\n        total_flops *= 2.5  # 2.0(bwd) + 0.5(recompute)\\n    return total_flops / ms * 1e-9\\n\\n\\n# only works on post-Ampere GPUs right now\\nbench_flash_attention.run(save_path='.', print_data=True)\"\n       ]\n     }\n   ],"}, {"filename": "main/_downloads/54a35f6ec55f9746935b9566fb6bb1df/06-fused-attention.py", "status": "modified", "additions": 20, "deletions": 19, "changes": 39, "file_content_changes": "@@ -2,8 +2,13 @@\n Fused Attention\n ===============\n \n-This is a Triton implementation of the Flash Attention algorithm\n-(see: Dao et al., https://arxiv.org/pdf/2205.14135v2.pdf; Rabe and Staats https://arxiv.org/pdf/2112.05682v2.pdf)\n+This is a Triton implementation of the Flash Attention v2 algorithm from Tri Dao (https://tridao.me/publications/flash2/flash2.pdf)\n+\n+Extra Credits:\n+- Original flash attention paper (https://arxiv.org/abs/2205.14135)\n+- Rabe and Staats (https://arxiv.org/pdf/2112.05682v2.pdf)\n+- Adam P. Goucher for simplified vector math\n+\n \"\"\"\n \n import pytest\n@@ -90,8 +95,7 @@ def _fwd_kernel(\n         l_i = tl.load(l_ptrs)\n         acc += tl.load(O_block_ptr).to(tl.float32)\n         lo, hi = start_m * BLOCK_M, (start_m + 1) * BLOCK_M\n-    # credits to: Adam P. Goucher (https://github.com/apgoucher):\n-    # scale sm_scale by 1/log_2(e) and use\n+    # scale sm_scale by log_2(e) and use\n     # 2^x instead of exp in the loop because CSE and LICM\n     # don't work as expected with `exp` in the loop\n     qk_scale = sm_scale * 1.44269504\n@@ -111,32 +115,28 @@ def _fwd_kernel(\n         if MODE == 1 or MODE == 3:\n             qk = tl.where(offs_m[:, None] >= (start_n + offs_n[None, :]), qk, float(\"-inf\"))\n         # -- compute m_ij, p, l_ij\n-        m_ij = tl.max(qk, 1)\n+        m_ij = tl.maximum(m_i, tl.max(qk, 1))\n         p = tl.math.exp2(qk - m_ij[:, None])\n         l_ij = tl.sum(p, 1)\n         # -- update m_i and l_i\n-        m_i_new = tl.maximum(m_i, m_ij)\n-        alpha = tl.math.exp2(m_i - m_i_new)\n-        beta = tl.math.exp2(m_ij - m_i_new)\n+        alpha = tl.math.exp2(m_i - m_ij)\n         l_i *= alpha\n-        l_i_new = l_i + beta * l_ij\n-        # scale p\n-        p_scale = beta / l_i_new\n-        p = p * p_scale[:, None]\n+        l_i_new = l_i + l_ij\n         # scale acc\n-        acc_scale = l_i / l_i_new\n+        acc_scale = l_i * 0 + alpha\n         acc = acc * acc_scale[:, None]\n         # update acc\n         v = tl.load(V_block_ptr)\n         p = p.to(tl.float16)\n         acc += tl.dot(p, v)\n         # update m_i and l_i\n         l_i = l_i_new\n-        m_i = m_i_new\n+        m_i = m_ij\n         # update pointers\n         K_block_ptr = tl.advance(K_block_ptr, (0, BLOCK_N))\n         V_block_ptr = tl.advance(V_block_ptr, (BLOCK_N, 0))\n     # write back l and m\n+    acc = acc / l_i[:, None]\n     l_ptrs = L + off_hz * N_CTX + offs_m\n     m_ptrs = M + off_hz * N_CTX + offs_m\n     tl.store(l_ptrs, l_i)\n@@ -266,13 +266,14 @@ class _attention(torch.autograd.Function):\n \n     @staticmethod\n     def forward(ctx, q, k, v, causal, sm_scale):\n-        BLOCK = 128\n         # shape constraints\n         Lq, Lk, Lv = q.shape[-1], k.shape[-1], v.shape[-1]\n         assert Lq == Lk and Lk == Lv\n         assert Lk in {16, 32, 64, 128}\n         o = torch.empty_like(q)\n-        grid = (triton.cdiv(q.shape[2], 128), q.shape[0] * q.shape[1], 1)\n+        BLOCK_M = 128\n+        BLOCK_N = 64\n+        grid = (triton.cdiv(q.shape[2], BLOCK_M), q.shape[0] * q.shape[1], 1)\n         L = torch.empty((q.shape[0] * q.shape[1], q.shape[2]), device=q.device, dtype=torch.float32)\n         m = torch.empty((q.shape[0] * q.shape[1], q.shape[2]), device=q.device, dtype=torch.float32)\n \n@@ -291,10 +292,10 @@ def forward(ctx, q, k, v, causal, sm_scale):\n                 v.stride(0), v.stride(1), v.stride(2), v.stride(3),\n                 o.stride(0), o.stride(1), o.stride(2), o.stride(3),\n                 q.shape[0], q.shape[1], q.shape[2],\n-                BLOCK_M=128, BLOCK_N=BLOCK, BLOCK_DMODEL=Lk,\n+                BLOCK_M=BLOCK_M, BLOCK_N=BLOCK_N, BLOCK_DMODEL=Lk,\n                 MODE=mode,\n                 num_warps=num_warps,\n-                num_stages=2)\n+                num_stages=4)\n \n         ctx.save_for_backward(q, k, v, o, L, m)\n         ctx.grid = grid\n@@ -396,7 +397,7 @@ def test_op(Z, H, N_CTX, D_HEAD, causal, dtype=torch.float16):\n     ylabel='ms',\n     plot_name=f'fused-attention-batch{BATCH}-head{N_HEADS}-d{D_HEAD}-{mode}',\n     args={'H': N_HEADS, 'BATCH': BATCH, 'D_HEAD': D_HEAD, 'dtype': torch.float16, 'mode': mode, 'causal': causal}\n-) for mode in ['fwd', 'bwd'] for causal in [False, True]]\n+) for mode in ['fwd'] for causal in [False]]\n \n \n @triton.testing.perf_report(configs)"}, {"filename": "main/_downloads/662999063954282841dc90b8945f85ce/tutorials_jupyter.zip", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/_downloads/763344228ae6bc253ed1a6cf586aa30d/tutorials_python.zip", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/_images/sphx_glr_01-vector-add_001.png", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/_images/sphx_glr_01-vector-add_thumb.png", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/_images/sphx_glr_02-fused-softmax_001.png", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/_images/sphx_glr_02-fused-softmax_thumb.png", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/_images/sphx_glr_03-matrix-multiplication_001.png", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/_images/sphx_glr_03-matrix-multiplication_thumb.png", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/_images/sphx_glr_05-layer-norm_001.png", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/_images/sphx_glr_05-layer-norm_thumb.png", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/_images/sphx_glr_06-fused-attention_001.png", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/_images/sphx_glr_06-fused-attention_002.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/_images/sphx_glr_06-fused-attention_003.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/_images/sphx_glr_06-fused-attention_004.png", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/_images/sphx_glr_06-fused-attention_thumb.png", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/_sources/getting-started/tutorials/01-vector-add.rst.txt", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "file_content_changes": "@@ -236,30 +236,30 @@ We can now run the decorated function above. Pass `print_data=True` to see the p\n \n     vector-add-performance:\n                size       Triton        Torch\n-    0        4096.0     9.600000     8.000000\n-    1        8192.0    19.200000    15.999999\n-    2       16384.0    31.999999    38.400001\n+    0        4096.0     8.000000     9.600000\n+    1        8192.0    15.999999    19.200000\n+    2       16384.0    31.999999    31.999999\n     3       32768.0    63.999998    63.999998\n     4       65536.0   127.999995   127.999995\n     5      131072.0   219.428568   219.428568\n     6      262144.0   384.000001   384.000001\n     7      524288.0   614.400016   614.400016\n     8     1048576.0   819.200021   819.200021\n-    9     2097152.0  1068.521715  1023.999964\n-    10    4194304.0  1260.307736  1228.800031\n+    9     2097152.0  1023.999964  1023.999964\n+    10    4194304.0  1228.800031  1228.800031\n     11    8388608.0  1424.695621  1424.695621\n     12   16777216.0  1560.380965  1560.380965\n     13   33554432.0  1631.601649  1624.859540\n-    14   67108864.0  1669.706983  1666.169441\n-    15  134217728.0  1684.008546  1680.410210\n+    14   67108864.0  1669.706983  1662.646960\n+    15  134217728.0  1685.813499  1678.616907\n \n \n \n \n \n .. rst-class:: sphx-glr-timing\n \n-   **Total running time of the script:** ( 0 minutes  5.753 seconds)\n+   **Total running time of the script:** ( 0 minutes  5.715 seconds)\n \n \n .. _sphx_glr_download_getting-started_tutorials_01-vector-add.py:"}, {"filename": "main/_sources/getting-started/tutorials/02-fused-softmax.rst.txt", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "file_content_changes": "@@ -287,16 +287,16 @@ We will then compare its performance against (1) :code:`torch.softmax` and (2) t\n     softmax-performance:\n               N       Triton  Torch (native)  Torch (jit)\n     0     256.0   682.666643      682.666643   264.258068\n-    1     384.0   877.714274      877.714274   332.108094\n-    2     512.0   910.222190      963.764689   381.023256\n-    3     640.0  1024.000026      930.909084   409.600010\n-    4     768.0  1068.521715     1023.999964   438.857137\n+    1     384.0   877.714274      819.200021   323.368435\n+    2     512.0   910.222190      910.222190   372.363633\n+    3     640.0   975.238103      975.238103   409.600010\n+    4     768.0  1068.521715     1023.999964   431.157886\n     ..      ...          ...             ...          ...\n-    93  12160.0  1598.028803     1063.169419   592.267887\n-    94  12288.0  1604.963246     1018.694301   592.192778\n-    95  12416.0  1595.630495     1029.305700   590.359582\n-    96  12544.0  1599.235121     1016.222759   592.047213\n-    97  12672.0  1602.782573     1008.716405   591.113716\n+    93  12160.0  1594.754129     1069.010969   592.267887\n+    94  12288.0  1598.438956     1013.443336   591.302256\n+    95  12416.0  1595.630495     1024.000037   587.739623\n+    96  12544.0  1599.235121     1013.656595   591.175267\n+    97  12672.0  1602.782573     1006.213368   590.253282\n \n     [98 rows x 4 columns]\n \n@@ -313,7 +313,7 @@ In the above plot, we can see that:\n \n .. rst-class:: sphx-glr-timing\n \n-   **Total running time of the script:** ( 0 minutes  38.185 seconds)\n+   **Total running time of the script:** ( 0 minutes  38.190 seconds)\n \n \n .. _sphx_glr_download_getting-started_tutorials_02-fused-softmax.py:"}, {"filename": "main/_sources/getting-started/tutorials/03-matrix-multiplication.rst.txt", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "file_content_changes": "@@ -453,41 +453,41 @@ but feel free to arrange this script as you wish to benchmark any other matrix s\n     1    384.0   12.288000   12.288000\n     2    512.0   26.214401   23.831273\n     3    640.0   42.666665   42.666665\n-    4    768.0   63.195428   58.982401\n+    4    768.0   68.056616   58.982401\n     5    896.0   78.051553   82.642822\n-    6   1024.0  110.376426   99.864382\n+    6   1024.0  104.857603   99.864382\n     7   1152.0  135.726544  129.825388\n-    8   1280.0  163.840004  163.840004\n-    9   1408.0  155.765024  136.294403\n+    8   1280.0  157.538463  163.840004\n+    9   1408.0  155.765024  132.970149\n     10  1536.0  181.484314  157.286398\n     11  1664.0  183.651271  179.978245\n     12  1792.0  172.914215  208.137481\n-    13  1920.0  203.294114  166.554219\n-    14  2048.0  197.379013  192.841562\n-    15  2176.0  191.653792  209.621326\n-    16  2304.0  227.503545  227.503545\n-    17  2432.0  202.118452  199.251522\n-    18  2560.0  221.405396  210.051289\n-    19  2688.0  195.531224  197.567993\n-    20  2816.0  208.680416  210.696652\n-    21  2944.0  221.493479  221.493479\n-    22  3072.0  205.902197  207.410628\n-    23  3200.0  216.949149  218.430042\n-    24  3328.0  205.103410  204.520726\n-    25  3456.0  216.724640  217.896133\n-    26  3584.0  218.241246  208.137481\n-    27  3712.0  206.399476  216.697064\n-    28  3840.0  209.058596  210.250955\n-    29  3968.0  210.023986  216.354501\n-    30  4096.0  220.752852  211.034160\n+    13  1920.0  203.294114  168.585369\n+    14  2048.0  199.728763  190.650180\n+    15  2176.0  193.496618  211.827867\n+    16  2304.0  229.691080  229.691080\n+    17  2432.0  203.583068  199.251522\n+    18  2560.0  221.405396  214.169933\n+    19  2688.0  197.567993  197.567993\n+    20  2816.0  209.683695  210.696652\n+    21  2944.0  221.493479  223.479969\n+    22  3072.0  207.410628  207.410628\n+    23  3200.0  216.216207  215.488222\n+    24  3328.0  203.941342  206.278780\n+    25  3456.0  216.143621  215.565692\n+    26  3584.0  219.305830  205.286289\n+    27  3712.0  210.310194  216.228019\n+    28  3840.0  208.271176  208.664143\n+    29  3968.0  208.945088  216.738793\n+    30  4096.0  217.180793  215.092520\n \n \n \n \n \n .. rst-class:: sphx-glr-timing\n \n-   **Total running time of the script:** ( 0 minutes  40.849 seconds)\n+   **Total running time of the script:** ( 0 minutes  40.800 seconds)\n \n \n .. _sphx_glr_download_getting-started_tutorials_03-matrix-multiplication.py:"}, {"filename": "main/_sources/getting-started/tutorials/04-low-memory-dropout.rst.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -242,7 +242,7 @@ References\n \n .. rst-class:: sphx-glr-timing\n \n-   **Total running time of the script:** ( 0 minutes  0.638 seconds)\n+   **Total running time of the script:** ( 0 minutes  0.628 seconds)\n \n \n .. _sphx_glr_download_getting-started_tutorials_04-low-memory-dropout.py:"}, {"filename": "main/_sources/getting-started/tutorials/05-layer-norm.rst.txt", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "file_content_changes": "@@ -431,35 +431,35 @@ Specifically, one can set :code:`'mode': 'backward'` to benchmark the backward p\n \n     layer-norm-backward:\n               N       Triton       Torch\n-    0    1024.0   137.296093  372.363633\n-    1    1536.0   269.080301  438.857146\n-    2    2048.0   361.411758  496.484863\n-    3    2560.0   445.217381  534.260858\n-    4    3072.0   530.417281  538.160602\n-    5    3584.0   618.820161  470.032796\n-    6    4096.0   677.958629  472.615390\n+    0    1024.0   186.181817  372.363633\n+    1    1536.0   281.404594  438.857146\n+    2    2048.0   375.206126  496.484863\n+    3    2560.0   458.507457  529.655159\n+    4    3072.0   562.809189  538.160602\n+    5    3584.0   641.910440  470.032796\n+    6    4096.0   707.223041  474.898540\n     7    4608.0   718.129898  478.753251\n     8    5120.0   772.830175  483.779502\n     9    5632.0   824.195135  489.739120\n-    10   6144.0   862.315754  491.519977\n-    11   6656.0   907.636357  500.764869\n-    12   7168.0   945.230752  476.542919\n-    13   7680.0   975.238103  479.999983\n-    14   8192.0  1008.246151  489.074621\n-    15   8704.0   676.038845  489.217808\n-    16   9216.0   708.923101  494.818794\n-    17   9728.0   727.327104  496.748937\n-    18  10240.0   746.990876  496.484863\n-    19  10752.0   772.598776  487.803392\n+    10   6144.0   862.315754  494.818794\n+    11   6656.0   902.508503  499.200013\n+    12   7168.0   940.065592  476.542919\n+    13   7680.0   970.105232  479.999983\n+    14   8192.0  1013.443336  487.861027\n+    15   8704.0   676.038845  488.074767\n+    16   9216.0   704.407633  490.430155\n+    17   9728.0   729.600018  495.694261\n+    18  10240.0   744.727250  495.483878\n+    19  10752.0   774.918911  487.803392\n     20  11264.0   799.810621  488.853509\n-    21  11776.0   821.581395  491.519989\n-    22  12288.0   845.020035  499.850839\n-    23  12800.0   848.618804  501.141916\n-    24  13312.0   868.173894  499.981239\n-    25  13824.0   863.999969  502.690894\n+    21  11776.0   819.199982  493.235604\n+    22  12288.0   845.020035  498.162140\n+    23  12800.0   848.618804  500.325718\n+    24  13312.0   865.821169  501.551005\n+    25  13824.0   863.999969  501.172223\n     26  14336.0   871.048079  492.223158\n-    27  14848.0   873.411781  496.311981\n-    28  15360.0   888.289183  500.869554\n+    27  14848.0   875.557709  495.621695\n+    28  15360.0   892.590796  500.869554\n     29  15872.0   890.018693  501.881412\n \n \n@@ -475,7 +475,7 @@ References\n \n .. rst-class:: sphx-glr-timing\n \n-   **Total running time of the script:** ( 0 minutes  29.088 seconds)\n+   **Total running time of the script:** ( 0 minutes  29.263 seconds)\n \n \n .. _sphx_glr_download_getting-started_tutorials_05-layer-norm.py:"}, {"filename": "main/_sources/getting-started/tutorials/06-fused-attention.rst.txt", "status": "modified", "additions": 29, "deletions": 76, "changes": 105, "file_content_changes": "@@ -21,43 +21,21 @@\n Fused Attention\n ===============\n \n-This is a Triton implementation of the Flash Attention algorithm\n-(see: Dao et al., https://arxiv.org/pdf/2205.14135v2.pdf; Rabe and Staats https://arxiv.org/pdf/2112.05682v2.pdf)\n+This is a Triton implementation of the Flash Attention v2 algorithm from Tri Dao (https://tridao.me/publications/flash2/flash2.pdf)\n \n-.. GENERATED FROM PYTHON SOURCE LINES 8-440\n+Extra Credits:\n+- Original flash attention paper (https://arxiv.org/abs/2205.14135)\n+- Rabe and Staats (https://arxiv.org/pdf/2112.05682v2.pdf)\n+- Adam P. Goucher for simplified vector math\n \n+.. GENERATED FROM PYTHON SOURCE LINES 13-441\n \n \n-.. rst-class:: sphx-glr-horizontal\n \n-\n-    *\n-\n-      .. image-sg:: /getting-started/tutorials/images/sphx_glr_06-fused-attention_001.png\n-         :alt: 06 fused attention\n-         :srcset: /getting-started/tutorials/images/sphx_glr_06-fused-attention_001.png\n-         :class: sphx-glr-multi-img\n-\n-    *\n-\n-      .. image-sg:: /getting-started/tutorials/images/sphx_glr_06-fused-attention_002.png\n-         :alt: 06 fused attention\n-         :srcset: /getting-started/tutorials/images/sphx_glr_06-fused-attention_002.png\n-         :class: sphx-glr-multi-img\n-\n-    *\n-\n-      .. image-sg:: /getting-started/tutorials/images/sphx_glr_06-fused-attention_003.png\n-         :alt: 06 fused attention\n-         :srcset: /getting-started/tutorials/images/sphx_glr_06-fused-attention_003.png\n-         :class: sphx-glr-multi-img\n-\n-    *\n-\n-      .. image-sg:: /getting-started/tutorials/images/sphx_glr_06-fused-attention_004.png\n-         :alt: 06 fused attention\n-         :srcset: /getting-started/tutorials/images/sphx_glr_06-fused-attention_004.png\n-         :class: sphx-glr-multi-img\n+.. image-sg:: /getting-started/tutorials/images/sphx_glr_06-fused-attention_001.png\n+   :alt: 06 fused attention\n+   :srcset: /getting-started/tutorials/images/sphx_glr_06-fused-attention_001.png\n+   :class: sphx-glr-single-img\n \n \n .. rst-class:: sphx-glr-script-out\n@@ -66,32 +44,11 @@ This is a Triton implementation of the Flash Attention algorithm\n \n     fused-attention-batch4-head48-d64-fwd:\n          N_CTX      Triton\n-    0   1024.0  129.449789\n-    1   2048.0  138.851914\n-    2   4096.0  146.472604\n-    3   8192.0  149.260380\n-    4  16384.0  151.138995\n-    fused-attention-batch4-head48-d64-fwd:\n-         N_CTX      Triton\n-    0   1024.0   94.768617\n-    1   2048.0  111.116154\n-    2   4096.0  126.992792\n-    3   8192.0  137.273489\n-    4  16384.0  143.197400\n-    fused-attention-batch4-head48-d64-bwd:\n-         N_CTX     Triton\n-    0   1024.0  77.813724\n-    1   2048.0  87.592440\n-    2   4096.0  94.217639\n-    3   8192.0  95.945189\n-    4  16384.0  97.685715\n-    fused-attention-batch4-head48-d64-bwd:\n-         N_CTX     Triton\n-    0   1024.0  54.026771\n-    1   2048.0  68.048846\n-    2   4096.0  77.346607\n-    3   8192.0  82.736391\n-    4  16384.0  85.701434\n+    0   1024.0  157.529049\n+    1   2048.0  164.518357\n+    2   4096.0  169.736503\n+    3   8192.0  173.943532\n+    4  16384.0  174.928758\n \n \n \n@@ -187,8 +144,7 @@ This is a Triton implementation of the Flash Attention algorithm\n             l_i = tl.load(l_ptrs)\n             acc += tl.load(O_block_ptr).to(tl.float32)\n             lo, hi = start_m * BLOCK_M, (start_m + 1) * BLOCK_M\n-        # credits to: Adam P. Goucher (https://github.com/apgoucher):\n-        # scale sm_scale by 1/log_2(e) and use\n+        # scale sm_scale by log_2(e) and use\n         # 2^x instead of exp in the loop because CSE and LICM\n         # don't work as expected with `exp` in the loop\n         qk_scale = sm_scale * 1.44269504\n@@ -208,32 +164,28 @@ This is a Triton implementation of the Flash Attention algorithm\n             if MODE == 1 or MODE == 3:\n                 qk = tl.where(offs_m[:, None] >= (start_n + offs_n[None, :]), qk, float(\"-inf\"))\n             # -- compute m_ij, p, l_ij\n-            m_ij = tl.max(qk, 1)\n+            m_ij = tl.maximum(m_i, tl.max(qk, 1))\n             p = tl.math.exp2(qk - m_ij[:, None])\n             l_ij = tl.sum(p, 1)\n             # -- update m_i and l_i\n-            m_i_new = tl.maximum(m_i, m_ij)\n-            alpha = tl.math.exp2(m_i - m_i_new)\n-            beta = tl.math.exp2(m_ij - m_i_new)\n+            alpha = tl.math.exp2(m_i - m_ij)\n             l_i *= alpha\n-            l_i_new = l_i + beta * l_ij\n-            # scale p\n-            p_scale = beta / l_i_new\n-            p = p * p_scale[:, None]\n+            l_i_new = l_i + l_ij\n             # scale acc\n-            acc_scale = l_i / l_i_new\n+            acc_scale = l_i * 0 + alpha\n             acc = acc * acc_scale[:, None]\n             # update acc\n             v = tl.load(V_block_ptr)\n             p = p.to(tl.float16)\n             acc += tl.dot(p, v)\n             # update m_i and l_i\n             l_i = l_i_new\n-            m_i = m_i_new\n+            m_i = m_ij\n             # update pointers\n             K_block_ptr = tl.advance(K_block_ptr, (0, BLOCK_N))\n             V_block_ptr = tl.advance(V_block_ptr, (BLOCK_N, 0))\n         # write back l and m\n+        acc = acc / l_i[:, None]\n         l_ptrs = L + off_hz * N_CTX + offs_m\n         m_ptrs = M + off_hz * N_CTX + offs_m\n         tl.store(l_ptrs, l_i)\n@@ -363,13 +315,14 @@ This is a Triton implementation of the Flash Attention algorithm\n \n         @staticmethod\n         def forward(ctx, q, k, v, causal, sm_scale):\n-            BLOCK = 128\n             # shape constraints\n             Lq, Lk, Lv = q.shape[-1], k.shape[-1], v.shape[-1]\n             assert Lq == Lk and Lk == Lv\n             assert Lk in {16, 32, 64, 128}\n             o = torch.empty_like(q)\n-            grid = (triton.cdiv(q.shape[2], 128), q.shape[0] * q.shape[1], 1)\n+            BLOCK_M = 128\n+            BLOCK_N = 64\n+            grid = (triton.cdiv(q.shape[2], BLOCK_M), q.shape[0] * q.shape[1], 1)\n             L = torch.empty((q.shape[0] * q.shape[1], q.shape[2]), device=q.device, dtype=torch.float32)\n             m = torch.empty((q.shape[0] * q.shape[1], q.shape[2]), device=q.device, dtype=torch.float32)\n \n@@ -388,10 +341,10 @@ This is a Triton implementation of the Flash Attention algorithm\n                     v.stride(0), v.stride(1), v.stride(2), v.stride(3),\n                     o.stride(0), o.stride(1), o.stride(2), o.stride(3),\n                     q.shape[0], q.shape[1], q.shape[2],\n-                    BLOCK_M=128, BLOCK_N=BLOCK, BLOCK_DMODEL=Lk,\n+                    BLOCK_M=BLOCK_M, BLOCK_N=BLOCK_N, BLOCK_DMODEL=Lk,\n                     MODE=mode,\n                     num_warps=num_warps,\n-                    num_stages=2)\n+                    num_stages=4)\n \n             ctx.save_for_backward(q, k, v, o, L, m)\n             ctx.grid = grid\n@@ -493,7 +446,7 @@ This is a Triton implementation of the Flash Attention algorithm\n         ylabel='ms',\n         plot_name=f'fused-attention-batch{BATCH}-head{N_HEADS}-d{D_HEAD}-{mode}',\n         args={'H': N_HEADS, 'BATCH': BATCH, 'D_HEAD': D_HEAD, 'dtype': torch.float16, 'mode': mode, 'causal': causal}\n-    ) for mode in ['fwd', 'bwd'] for causal in [False, True]]\n+    ) for mode in ['fwd'] for causal in [False]]\n \n \n     @triton.testing.perf_report(configs)\n@@ -538,7 +491,7 @@ This is a Triton implementation of the Flash Attention algorithm\n \n .. rst-class:: sphx-glr-timing\n \n-   **Total running time of the script:** ( 0 minutes  16.566 seconds)\n+   **Total running time of the script:** ( 0 minutes  2.096 seconds)\n \n \n .. _sphx_glr_download_getting-started_tutorials_06-fused-attention.py:"}, {"filename": "main/_sources/getting-started/tutorials/07-math-functions.rst.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -147,7 +147,7 @@ We can also customize the libdevice library path by passing the path to the `lib\n \n .. rst-class:: sphx-glr-timing\n \n-   **Total running time of the script:** ( 0 minutes  0.242 seconds)\n+   **Total running time of the script:** ( 0 minutes  0.224 seconds)\n \n \n .. _sphx_glr_download_getting-started_tutorials_07-math-functions.py:"}, {"filename": "main/_sources/getting-started/tutorials/08-experimental-block-pointer.rst.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -298,7 +298,7 @@ Still we can test our matrix multiplication with block pointers against a native\n \n .. rst-class:: sphx-glr-timing\n \n-   **Total running time of the script:** ( 0 minutes  6.531 seconds)\n+   **Total running time of the script:** ( 0 minutes  6.395 seconds)\n \n \n .. _sphx_glr_download_getting-started_tutorials_08-experimental-block-pointer.py:"}, {"filename": "main/_sources/getting-started/tutorials/index.rst.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -106,7 +106,7 @@ To install the dependencies for the tutorials:\n \n .. raw:: html\n \n-    <div class=\"sphx-glr-thumbcontainer\" tooltip=\"This is a Triton implementation of the Flash Attention algorithm (see: Dao et al., https://arxi...\">\n+    <div class=\"sphx-glr-thumbcontainer\" tooltip=\"This is a Triton implementation of the Flash Attention v2 algorithm from Tri Dao (https://trida...\">\n \n .. only:: html\n "}, {"filename": "main/_sources/getting-started/tutorials/sg_execution_times.rst.txt", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "file_content_changes": "@@ -6,22 +6,22 @@\n \n Computation times\n =================\n-**02:17.851** total execution time for **getting-started_tutorials** files:\n+**02:03.311** total execution time for **getting-started_tutorials** files:\n \n +-------------------------------------------------------------------------------------------------------------------+-----------+--------+\n-| :ref:`sphx_glr_getting-started_tutorials_03-matrix-multiplication.py` (``03-matrix-multiplication.py``)           | 00:40.849 | 0.0 MB |\n+| :ref:`sphx_glr_getting-started_tutorials_03-matrix-multiplication.py` (``03-matrix-multiplication.py``)           | 00:40.800 | 0.0 MB |\n +-------------------------------------------------------------------------------------------------------------------+-----------+--------+\n-| :ref:`sphx_glr_getting-started_tutorials_02-fused-softmax.py` (``02-fused-softmax.py``)                           | 00:38.185 | 0.0 MB |\n+| :ref:`sphx_glr_getting-started_tutorials_02-fused-softmax.py` (``02-fused-softmax.py``)                           | 00:38.190 | 0.0 MB |\n +-------------------------------------------------------------------------------------------------------------------+-----------+--------+\n-| :ref:`sphx_glr_getting-started_tutorials_05-layer-norm.py` (``05-layer-norm.py``)                                 | 00:29.088 | 0.0 MB |\n+| :ref:`sphx_glr_getting-started_tutorials_05-layer-norm.py` (``05-layer-norm.py``)                                 | 00:29.263 | 0.0 MB |\n +-------------------------------------------------------------------------------------------------------------------+-----------+--------+\n-| :ref:`sphx_glr_getting-started_tutorials_06-fused-attention.py` (``06-fused-attention.py``)                       | 00:16.566 | 0.0 MB |\n+| :ref:`sphx_glr_getting-started_tutorials_08-experimental-block-pointer.py` (``08-experimental-block-pointer.py``) | 00:06.395 | 0.0 MB |\n +-------------------------------------------------------------------------------------------------------------------+-----------+--------+\n-| :ref:`sphx_glr_getting-started_tutorials_08-experimental-block-pointer.py` (``08-experimental-block-pointer.py``) | 00:06.531 | 0.0 MB |\n+| :ref:`sphx_glr_getting-started_tutorials_01-vector-add.py` (``01-vector-add.py``)                                 | 00:05.715 | 0.0 MB |\n +-------------------------------------------------------------------------------------------------------------------+-----------+--------+\n-| :ref:`sphx_glr_getting-started_tutorials_01-vector-add.py` (``01-vector-add.py``)                                 | 00:05.753 | 0.0 MB |\n+| :ref:`sphx_glr_getting-started_tutorials_06-fused-attention.py` (``06-fused-attention.py``)                       | 00:02.096 | 0.0 MB |\n +-------------------------------------------------------------------------------------------------------------------+-----------+--------+\n-| :ref:`sphx_glr_getting-started_tutorials_04-low-memory-dropout.py` (``04-low-memory-dropout.py``)                 | 00:00.638 | 0.0 MB |\n+| :ref:`sphx_glr_getting-started_tutorials_04-low-memory-dropout.py` (``04-low-memory-dropout.py``)                 | 00:00.628 | 0.0 MB |\n +-------------------------------------------------------------------------------------------------------------------+-----------+--------+\n-| :ref:`sphx_glr_getting-started_tutorials_07-math-functions.py` (``07-math-functions.py``)                         | 00:00.242 | 0.0 MB |\n+| :ref:`sphx_glr_getting-started_tutorials_07-math-functions.py` (``07-math-functions.py``)                         | 00:00.224 | 0.0 MB |\n +-------------------------------------------------------------------------------------------------------------------+-----------+--------+"}, {"filename": "main/_sources/python-api/generated/triton.language.max_constancy.rst.txt", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "file_content_changes": "@@ -0,0 +1,6 @@\n+\ufefftriton.language.max\\_constancy\n+==============================\n+\n+.. currentmodule:: triton.language\n+\n+.. autofunction:: max_constancy\n\\ No newline at end of file"}, {"filename": "main/_sources/python-api/triton.language.rst.txt", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "file_content_changes": "@@ -168,6 +168,7 @@ Compiler Hint Ops\n     :nosignatures:\n \n     debug_barrier\n+    max_constancy\n     max_contiguous\n     multiple_of\n "}, {"filename": "main/genindex.html", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "file_content_changes": "@@ -260,12 +260,14 @@ <h2 id=\"M\">M</h2>\n   <td style=\"width: 33%; vertical-align: top;\"><ul>\n       <li><a href=\"python-api/generated/triton.language.max.html#triton.language.max\">max() (in module triton.language)</a>\n </li>\n-      <li><a href=\"python-api/generated/triton.language.max_contiguous.html#triton.language.max_contiguous\">max_contiguous() (in module triton.language)</a>\n+      <li><a href=\"python-api/generated/triton.language.max_constancy.html#triton.language.max_constancy\">max_constancy() (in module triton.language)</a>\n </li>\n-      <li><a href=\"python-api/generated/triton.language.maximum.html#triton.language.maximum\">maximum() (in module triton.language)</a>\n+      <li><a href=\"python-api/generated/triton.language.max_contiguous.html#triton.language.max_contiguous\">max_contiguous() (in module triton.language)</a>\n </li>\n   </ul></td>\n   <td style=\"width: 33%; vertical-align: top;\"><ul>\n+      <li><a href=\"python-api/generated/triton.language.maximum.html#triton.language.maximum\">maximum() (in module triton.language)</a>\n+</li>\n       <li><a href=\"python-api/generated/triton.language.min.html#triton.language.min\">min() (in module triton.language)</a>\n </li>\n       <li><a href=\"python-api/generated/triton.language.minimum.html#triton.language.minimum\">minimum() (in module triton.language)</a>"}, {"filename": "main/getting-started/tutorials/01-vector-add.html", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "file_content_changes": "@@ -235,25 +235,25 @@ <h2>Benchmark<a class=\"headerlink\" href=\"#benchmark\" title=\"Permalink to this he\n </div>\n <img src=\"../../_images/sphx_glr_01-vector-add_001.png\" srcset=\"../../_images/sphx_glr_01-vector-add_001.png\" alt=\"01 vector add\" class = \"sphx-glr-single-img\"/><div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>vector-add-performance:\n            size       Triton        Torch\n-0        4096.0     9.600000     8.000000\n-1        8192.0    19.200000    15.999999\n-2       16384.0    31.999999    38.400001\n+0        4096.0     8.000000     9.600000\n+1        8192.0    15.999999    19.200000\n+2       16384.0    31.999999    31.999999\n 3       32768.0    63.999998    63.999998\n 4       65536.0   127.999995   127.999995\n 5      131072.0   219.428568   219.428568\n 6      262144.0   384.000001   384.000001\n 7      524288.0   614.400016   614.400016\n 8     1048576.0   819.200021   819.200021\n-9     2097152.0  1068.521715  1023.999964\n-10    4194304.0  1260.307736  1228.800031\n+9     2097152.0  1023.999964  1023.999964\n+10    4194304.0  1228.800031  1228.800031\n 11    8388608.0  1424.695621  1424.695621\n 12   16777216.0  1560.380965  1560.380965\n 13   33554432.0  1631.601649  1624.859540\n-14   67108864.0  1669.706983  1666.169441\n-15  134217728.0  1684.008546  1680.410210\n+14   67108864.0  1669.706983  1662.646960\n+15  134217728.0  1685.813499  1678.616907\n </pre></div>\n </div>\n-<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  5.753 seconds)</p>\n+<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  5.715 seconds)</p>\n <div class=\"sphx-glr-footer sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-getting-started-tutorials-01-vector-add-py\">\n <div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n <p><a class=\"reference download internal\" download=\"\" href=\"../../_downloads/62d97d49a32414049819dd8bb8378080/01-vector-add.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">01-vector-add.py</span></code></a></p>"}, {"filename": "main/getting-started/tutorials/02-fused-softmax.html", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "file_content_changes": "@@ -283,16 +283,16 @@ <h2>Benchmark<a class=\"headerlink\" href=\"#benchmark\" title=\"Permalink to this he\n <img src=\"../../_images/sphx_glr_02-fused-softmax_001.png\" srcset=\"../../_images/sphx_glr_02-fused-softmax_001.png\" alt=\"02 fused softmax\" class = \"sphx-glr-single-img\"/><div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>softmax-performance:\n           N       Triton  Torch (native)  Torch (jit)\n 0     256.0   682.666643      682.666643   264.258068\n-1     384.0   877.714274      877.714274   332.108094\n-2     512.0   910.222190      963.764689   381.023256\n-3     640.0  1024.000026      930.909084   409.600010\n-4     768.0  1068.521715     1023.999964   438.857137\n+1     384.0   877.714274      819.200021   323.368435\n+2     512.0   910.222190      910.222190   372.363633\n+3     640.0   975.238103      975.238103   409.600010\n+4     768.0  1068.521715     1023.999964   431.157886\n ..      ...          ...             ...          ...\n-93  12160.0  1598.028803     1063.169419   592.267887\n-94  12288.0  1604.963246     1018.694301   592.192778\n-95  12416.0  1595.630495     1029.305700   590.359582\n-96  12544.0  1599.235121     1016.222759   592.047213\n-97  12672.0  1602.782573     1008.716405   591.113716\n+93  12160.0  1594.754129     1069.010969   592.267887\n+94  12288.0  1598.438956     1013.443336   591.302256\n+95  12416.0  1595.630495     1024.000037   587.739623\n+96  12544.0  1599.235121     1013.656595   591.175267\n+97  12672.0  1602.782573     1006.213368   590.253282\n \n [98 rows x 4 columns]\n </pre></div>\n@@ -305,7 +305,7 @@ <h2>Benchmark<a class=\"headerlink\" href=\"#benchmark\" title=\"Permalink to this he\n </ul>\n </dd>\n </dl>\n-<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  38.185 seconds)</p>\n+<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  38.190 seconds)</p>\n <div class=\"sphx-glr-footer sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-getting-started-tutorials-02-fused-softmax-py\">\n <div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n <p><a class=\"reference download internal\" download=\"\" href=\"../../_downloads/d91442ac2982c4e0cc3ab0f43534afbc/02-fused-softmax.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">02-fused-softmax.py</span></code></a></p>"}, {"filename": "main/getting-started/tutorials/03-matrix-multiplication.html", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "file_content_changes": "@@ -467,36 +467,36 @@ <h3>Square Matrix Performance<a class=\"headerlink\" href=\"#square-matrix-performa\n 1    384.0   12.288000   12.288000\n 2    512.0   26.214401   23.831273\n 3    640.0   42.666665   42.666665\n-4    768.0   63.195428   58.982401\n+4    768.0   68.056616   58.982401\n 5    896.0   78.051553   82.642822\n-6   1024.0  110.376426   99.864382\n+6   1024.0  104.857603   99.864382\n 7   1152.0  135.726544  129.825388\n-8   1280.0  163.840004  163.840004\n-9   1408.0  155.765024  136.294403\n+8   1280.0  157.538463  163.840004\n+9   1408.0  155.765024  132.970149\n 10  1536.0  181.484314  157.286398\n 11  1664.0  183.651271  179.978245\n 12  1792.0  172.914215  208.137481\n-13  1920.0  203.294114  166.554219\n-14  2048.0  197.379013  192.841562\n-15  2176.0  191.653792  209.621326\n-16  2304.0  227.503545  227.503545\n-17  2432.0  202.118452  199.251522\n-18  2560.0  221.405396  210.051289\n-19  2688.0  195.531224  197.567993\n-20  2816.0  208.680416  210.696652\n-21  2944.0  221.493479  221.493479\n-22  3072.0  205.902197  207.410628\n-23  3200.0  216.949149  218.430042\n-24  3328.0  205.103410  204.520726\n-25  3456.0  216.724640  217.896133\n-26  3584.0  218.241246  208.137481\n-27  3712.0  206.399476  216.697064\n-28  3840.0  209.058596  210.250955\n-29  3968.0  210.023986  216.354501\n-30  4096.0  220.752852  211.034160\n+13  1920.0  203.294114  168.585369\n+14  2048.0  199.728763  190.650180\n+15  2176.0  193.496618  211.827867\n+16  2304.0  229.691080  229.691080\n+17  2432.0  203.583068  199.251522\n+18  2560.0  221.405396  214.169933\n+19  2688.0  197.567993  197.567993\n+20  2816.0  209.683695  210.696652\n+21  2944.0  221.493479  223.479969\n+22  3072.0  207.410628  207.410628\n+23  3200.0  216.216207  215.488222\n+24  3328.0  203.941342  206.278780\n+25  3456.0  216.143621  215.565692\n+26  3584.0  219.305830  205.286289\n+27  3712.0  210.310194  216.228019\n+28  3840.0  208.271176  208.664143\n+29  3968.0  208.945088  216.738793\n+30  4096.0  217.180793  215.092520\n </pre></div>\n </div>\n-<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  40.849 seconds)</p>\n+<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  40.800 seconds)</p>\n <div class=\"sphx-glr-footer sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-getting-started-tutorials-03-matrix-multiplication-py\">\n <div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n <p><a class=\"reference download internal\" download=\"\" href=\"../../_downloads/d5fee5b55a64e47f1b5724ec39adf171/03-matrix-multiplication.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">03-matrix-multiplication.py</span></code></a></p>"}, {"filename": "main/getting-started/tutorials/04-low-memory-dropout.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -287,7 +287,7 @@ <h2>References<a class=\"headerlink\" href=\"#references\" title=\"Permalink to this\n <p>Nitish Srivastava and Geoffrey Hinton and Alex Krizhevsky and Ilya Sutskever and Ruslan Salakhutdinov, \u201cDropout: A Simple Way to Prevent Neural Networks from Overfitting\u201d, JMLR 2014</p>\n </div>\n </div>\n-<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  0.638 seconds)</p>\n+<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  0.628 seconds)</p>\n <div class=\"sphx-glr-footer sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-getting-started-tutorials-04-low-memory-dropout-py\">\n <div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n <p><a class=\"reference download internal\" download=\"\" href=\"../../_downloads/c9aed78977a4c05741d675a38dde3d7d/04-low-memory-dropout.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">04-low-memory-dropout.py</span></code></a></p>"}, {"filename": "main/getting-started/tutorials/05-layer-norm.html", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "file_content_changes": "@@ -460,35 +460,35 @@ <h2>Benchmark<a class=\"headerlink\" href=\"#benchmark\" title=\"Permalink to this he\n </div>\n <img src=\"../../_images/sphx_glr_05-layer-norm_001.png\" srcset=\"../../_images/sphx_glr_05-layer-norm_001.png\" alt=\"05 layer norm\" class = \"sphx-glr-single-img\"/><div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>layer-norm-backward:\n           N       Triton       Torch\n-0    1024.0   137.296093  372.363633\n-1    1536.0   269.080301  438.857146\n-2    2048.0   361.411758  496.484863\n-3    2560.0   445.217381  534.260858\n-4    3072.0   530.417281  538.160602\n-5    3584.0   618.820161  470.032796\n-6    4096.0   677.958629  472.615390\n+0    1024.0   186.181817  372.363633\n+1    1536.0   281.404594  438.857146\n+2    2048.0   375.206126  496.484863\n+3    2560.0   458.507457  529.655159\n+4    3072.0   562.809189  538.160602\n+5    3584.0   641.910440  470.032796\n+6    4096.0   707.223041  474.898540\n 7    4608.0   718.129898  478.753251\n 8    5120.0   772.830175  483.779502\n 9    5632.0   824.195135  489.739120\n-10   6144.0   862.315754  491.519977\n-11   6656.0   907.636357  500.764869\n-12   7168.0   945.230752  476.542919\n-13   7680.0   975.238103  479.999983\n-14   8192.0  1008.246151  489.074621\n-15   8704.0   676.038845  489.217808\n-16   9216.0   708.923101  494.818794\n-17   9728.0   727.327104  496.748937\n-18  10240.0   746.990876  496.484863\n-19  10752.0   772.598776  487.803392\n+10   6144.0   862.315754  494.818794\n+11   6656.0   902.508503  499.200013\n+12   7168.0   940.065592  476.542919\n+13   7680.0   970.105232  479.999983\n+14   8192.0  1013.443336  487.861027\n+15   8704.0   676.038845  488.074767\n+16   9216.0   704.407633  490.430155\n+17   9728.0   729.600018  495.694261\n+18  10240.0   744.727250  495.483878\n+19  10752.0   774.918911  487.803392\n 20  11264.0   799.810621  488.853509\n-21  11776.0   821.581395  491.519989\n-22  12288.0   845.020035  499.850839\n-23  12800.0   848.618804  501.141916\n-24  13312.0   868.173894  499.981239\n-25  13824.0   863.999969  502.690894\n+21  11776.0   819.199982  493.235604\n+22  12288.0   845.020035  498.162140\n+23  12800.0   848.618804  500.325718\n+24  13312.0   865.821169  501.551005\n+25  13824.0   863.999969  501.172223\n 26  14336.0   871.048079  492.223158\n-27  14848.0   873.411781  496.311981\n-28  15360.0   888.289183  500.869554\n+27  14848.0   875.557709  495.621695\n+28  15360.0   892.590796  500.869554\n 29  15872.0   890.018693  501.881412\n </pre></div>\n </div>\n@@ -501,7 +501,7 @@ <h2>References<a class=\"headerlink\" href=\"#references\" title=\"Permalink to this\n <p>Jimmy Lei Ba and Jamie Ryan Kiros and Geoffrey E. Hinton, \u201cLayer Normalization\u201d, Arxiv 2016</p>\n </div>\n </div>\n-<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  29.088 seconds)</p>\n+<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  29.263 seconds)</p>\n <div class=\"sphx-glr-footer sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-getting-started-tutorials-05-layer-norm-py\">\n <div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n <p><a class=\"reference download internal\" download=\"\" href=\"../../_downloads/935c0dd0fbeb4b2e69588471cbb2d4b2/05-layer-norm.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">05-layer-norm.py</span></code></a></p>"}, {"filename": "main/getting-started/tutorials/06-fused-attention.html", "status": "modified", "additions": 25, "deletions": 53, "changes": 78, "file_content_changes": "@@ -104,42 +104,18 @@\n </div>\n <section class=\"sphx-glr-example-title\" id=\"fused-attention\">\n <span id=\"sphx-glr-getting-started-tutorials-06-fused-attention-py\"></span><h1>Fused Attention<a class=\"headerlink\" href=\"#fused-attention\" title=\"Permalink to this heading\">\u00b6</a></h1>\n-<p>This is a Triton implementation of the Flash Attention algorithm\n-(see: Dao et al., <a class=\"reference external\" href=\"https://arxiv.org/pdf/2205.14135v2.pdf\">https://arxiv.org/pdf/2205.14135v2.pdf</a>; Rabe and Staats <a class=\"reference external\" href=\"https://arxiv.org/pdf/2112.05682v2.pdf\">https://arxiv.org/pdf/2112.05682v2.pdf</a>)</p>\n-<ul class=\"sphx-glr-horizontal\">\n-<li><img src=\"../../_images/sphx_glr_06-fused-attention_001.png\" srcset=\"../../_images/sphx_glr_06-fused-attention_001.png\" alt=\"06 fused attention\" class = \"sphx-glr-multi-img\"/></li>\n-<li><img src=\"../../_images/sphx_glr_06-fused-attention_002.png\" srcset=\"../../_images/sphx_glr_06-fused-attention_002.png\" alt=\"06 fused attention\" class = \"sphx-glr-multi-img\"/></li>\n-<li><img src=\"../../_images/sphx_glr_06-fused-attention_003.png\" srcset=\"../../_images/sphx_glr_06-fused-attention_003.png\" alt=\"06 fused attention\" class = \"sphx-glr-multi-img\"/></li>\n-<li><img src=\"../../_images/sphx_glr_06-fused-attention_004.png\" srcset=\"../../_images/sphx_glr_06-fused-attention_004.png\" alt=\"06 fused attention\" class = \"sphx-glr-multi-img\"/></li>\n-</ul>\n-<div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>fused-attention-batch4-head48-d64-fwd:\n-     N_CTX      Triton\n-0   1024.0  129.449789\n-1   2048.0  138.851914\n-2   4096.0  146.472604\n-3   8192.0  149.260380\n-4  16384.0  151.138995\n-fused-attention-batch4-head48-d64-fwd:\n+<p>This is a Triton implementation of the Flash Attention v2 algorithm from Tri Dao (<a class=\"reference external\" href=\"https://tridao.me/publications/flash2/flash2.pdf\">https://tridao.me/publications/flash2/flash2.pdf</a>)</p>\n+<p>Extra Credits:\n+- Original flash attention paper (<a class=\"reference external\" href=\"https://arxiv.org/abs/2205.14135\">https://arxiv.org/abs/2205.14135</a>)\n+- Rabe and Staats (<a class=\"reference external\" href=\"https://arxiv.org/pdf/2112.05682v2.pdf\">https://arxiv.org/pdf/2112.05682v2.pdf</a>)\n+- Adam P. Goucher for simplified vector math</p>\n+<img src=\"../../_images/sphx_glr_06-fused-attention_001.png\" srcset=\"../../_images/sphx_glr_06-fused-attention_001.png\" alt=\"06 fused attention\" class = \"sphx-glr-single-img\"/><div class=\"sphx-glr-script-out highlight-none notranslate\"><div class=\"highlight\"><pre><span></span>fused-attention-batch4-head48-d64-fwd:\n      N_CTX      Triton\n-0   1024.0   94.768617\n-1   2048.0  111.116154\n-2   4096.0  126.992792\n-3   8192.0  137.273489\n-4  16384.0  143.197400\n-fused-attention-batch4-head48-d64-bwd:\n-     N_CTX     Triton\n-0   1024.0  77.813724\n-1   2048.0  87.592440\n-2   4096.0  94.217639\n-3   8192.0  95.945189\n-4  16384.0  97.685715\n-fused-attention-batch4-head48-d64-bwd:\n-     N_CTX     Triton\n-0   1024.0  54.026771\n-1   2048.0  68.048846\n-2   4096.0  77.346607\n-3   8192.0  82.736391\n-4  16384.0  85.701434\n+0   1024.0  157.529049\n+1   2048.0  164.518357\n+2   4096.0  169.736503\n+3   8192.0  173.943532\n+4  16384.0  174.928758\n </pre></div>\n </div>\n <div class=\"line-block\">\n@@ -229,8 +205,7 @@\n         <span class=\"n\">l_i</span> <span class=\"o\">=</span> <span class=\"n\">tl</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">l_ptrs</span><span class=\"p\">)</span>\n         <span class=\"n\">acc</span> <span class=\"o\">+=</span> <span class=\"n\">tl</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">O_block_ptr</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">tl</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)</span>\n         <span class=\"n\">lo</span><span class=\"p\">,</span> <span class=\"n\">hi</span> <span class=\"o\">=</span> <span class=\"n\">start_m</span> <span class=\"o\">*</span> <span class=\"n\">BLOCK_M</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">start_m</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"n\">BLOCK_M</span>\n-    <span class=\"c1\"># credits to: Adam P. Goucher (https://github.com/apgoucher):</span>\n-    <span class=\"c1\"># scale sm_scale by 1/log_2(e) and use</span>\n+    <span class=\"c1\"># scale sm_scale by log_2(e) and use</span>\n     <span class=\"c1\"># 2^x instead of exp in the loop because CSE and LICM</span>\n     <span class=\"c1\"># don&#39;t work as expected with `exp` in the loop</span>\n     <span class=\"n\">qk_scale</span> <span class=\"o\">=</span> <span class=\"n\">sm_scale</span> <span class=\"o\">*</span> <span class=\"mf\">1.44269504</span>\n@@ -250,32 +225,28 @@\n         <span class=\"k\">if</span> <span class=\"n\">MODE</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"ow\">or</span> <span class=\"n\">MODE</span> <span class=\"o\">==</span> <span class=\"mi\">3</span><span class=\"p\">:</span>\n             <span class=\"n\">qk</span> <span class=\"o\">=</span> <span class=\"n\">tl</span><span class=\"o\">.</span><span class=\"n\">where</span><span class=\"p\">(</span><span class=\"n\">offs_m</span><span class=\"p\">[:,</span> <span class=\"kc\">None</span><span class=\"p\">]</span> <span class=\"o\">&gt;=</span> <span class=\"p\">(</span><span class=\"n\">start_n</span> <span class=\"o\">+</span> <span class=\"n\">offs_n</span><span class=\"p\">[</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"p\">:]),</span> <span class=\"n\">qk</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"s2\">&quot;-inf&quot;</span><span class=\"p\">))</span>\n         <span class=\"c1\"># -- compute m_ij, p, l_ij</span>\n-        <span class=\"n\">m_ij</span> <span class=\"o\">=</span> <span class=\"n\">tl</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">(</span><span class=\"n\">qk</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n+        <span class=\"n\">m_ij</span> <span class=\"o\">=</span> <span class=\"n\">tl</span><span class=\"o\">.</span><span class=\"n\">maximum</span><span class=\"p\">(</span><span class=\"n\">m_i</span><span class=\"p\">,</span> <span class=\"n\">tl</span><span class=\"o\">.</span><span class=\"n\">max</span><span class=\"p\">(</span><span class=\"n\">qk</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n         <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">tl</span><span class=\"o\">.</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">exp2</span><span class=\"p\">(</span><span class=\"n\">qk</span> <span class=\"o\">-</span> <span class=\"n\">m_ij</span><span class=\"p\">[:,</span> <span class=\"kc\">None</span><span class=\"p\">])</span>\n         <span class=\"n\">l_ij</span> <span class=\"o\">=</span> <span class=\"n\">tl</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n         <span class=\"c1\"># -- update m_i and l_i</span>\n-        <span class=\"n\">m_i_new</span> <span class=\"o\">=</span> <span class=\"n\">tl</span><span class=\"o\">.</span><span class=\"n\">maximum</span><span class=\"p\">(</span><span class=\"n\">m_i</span><span class=\"p\">,</span> <span class=\"n\">m_ij</span><span class=\"p\">)</span>\n-        <span class=\"n\">alpha</span> <span class=\"o\">=</span> <span class=\"n\">tl</span><span class=\"o\">.</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">exp2</span><span class=\"p\">(</span><span class=\"n\">m_i</span> <span class=\"o\">-</span> <span class=\"n\">m_i_new</span><span class=\"p\">)</span>\n-        <span class=\"n\">beta</span> <span class=\"o\">=</span> <span class=\"n\">tl</span><span class=\"o\">.</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">exp2</span><span class=\"p\">(</span><span class=\"n\">m_ij</span> <span class=\"o\">-</span> <span class=\"n\">m_i_new</span><span class=\"p\">)</span>\n+        <span class=\"n\">alpha</span> <span class=\"o\">=</span> <span class=\"n\">tl</span><span class=\"o\">.</span><span class=\"n\">math</span><span class=\"o\">.</span><span class=\"n\">exp2</span><span class=\"p\">(</span><span class=\"n\">m_i</span> <span class=\"o\">-</span> <span class=\"n\">m_ij</span><span class=\"p\">)</span>\n         <span class=\"n\">l_i</span> <span class=\"o\">*=</span> <span class=\"n\">alpha</span>\n-        <span class=\"n\">l_i_new</span> <span class=\"o\">=</span> <span class=\"n\">l_i</span> <span class=\"o\">+</span> <span class=\"n\">beta</span> <span class=\"o\">*</span> <span class=\"n\">l_ij</span>\n-        <span class=\"c1\"># scale p</span>\n-        <span class=\"n\">p_scale</span> <span class=\"o\">=</span> <span class=\"n\">beta</span> <span class=\"o\">/</span> <span class=\"n\">l_i_new</span>\n-        <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">p</span> <span class=\"o\">*</span> <span class=\"n\">p_scale</span><span class=\"p\">[:,</span> <span class=\"kc\">None</span><span class=\"p\">]</span>\n+        <span class=\"n\">l_i_new</span> <span class=\"o\">=</span> <span class=\"n\">l_i</span> <span class=\"o\">+</span> <span class=\"n\">l_ij</span>\n         <span class=\"c1\"># scale acc</span>\n-        <span class=\"n\">acc_scale</span> <span class=\"o\">=</span> <span class=\"n\">l_i</span> <span class=\"o\">/</span> <span class=\"n\">l_i_new</span>\n+        <span class=\"n\">acc_scale</span> <span class=\"o\">=</span> <span class=\"n\">l_i</span> <span class=\"o\">*</span> <span class=\"mi\">0</span> <span class=\"o\">+</span> <span class=\"n\">alpha</span>\n         <span class=\"n\">acc</span> <span class=\"o\">=</span> <span class=\"n\">acc</span> <span class=\"o\">*</span> <span class=\"n\">acc_scale</span><span class=\"p\">[:,</span> <span class=\"kc\">None</span><span class=\"p\">]</span>\n         <span class=\"c1\"># update acc</span>\n         <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">tl</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">V_block_ptr</span><span class=\"p\">)</span>\n         <span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">to</span><span class=\"p\">(</span><span class=\"n\">tl</span><span class=\"o\">.</span><span class=\"n\">float16</span><span class=\"p\">)</span>\n         <span class=\"n\">acc</span> <span class=\"o\">+=</span> <span class=\"n\">tl</span><span class=\"o\">.</span><span class=\"n\">dot</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">)</span>\n         <span class=\"c1\"># update m_i and l_i</span>\n         <span class=\"n\">l_i</span> <span class=\"o\">=</span> <span class=\"n\">l_i_new</span>\n-        <span class=\"n\">m_i</span> <span class=\"o\">=</span> <span class=\"n\">m_i_new</span>\n+        <span class=\"n\">m_i</span> <span class=\"o\">=</span> <span class=\"n\">m_ij</span>\n         <span class=\"c1\"># update pointers</span>\n         <span class=\"n\">K_block_ptr</span> <span class=\"o\">=</span> <span class=\"n\">tl</span><span class=\"o\">.</span><span class=\"n\">advance</span><span class=\"p\">(</span><span class=\"n\">K_block_ptr</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">BLOCK_N</span><span class=\"p\">))</span>\n         <span class=\"n\">V_block_ptr</span> <span class=\"o\">=</span> <span class=\"n\">tl</span><span class=\"o\">.</span><span class=\"n\">advance</span><span class=\"p\">(</span><span class=\"n\">V_block_ptr</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">BLOCK_N</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n     <span class=\"c1\"># write back l and m</span>\n+    <span class=\"n\">acc</span> <span class=\"o\">=</span> <span class=\"n\">acc</span> <span class=\"o\">/</span> <span class=\"n\">l_i</span><span class=\"p\">[:,</span> <span class=\"kc\">None</span><span class=\"p\">]</span>\n     <span class=\"n\">l_ptrs</span> <span class=\"o\">=</span> <span class=\"n\">L</span> <span class=\"o\">+</span> <span class=\"n\">off_hz</span> <span class=\"o\">*</span> <span class=\"n\">N_CTX</span> <span class=\"o\">+</span> <span class=\"n\">offs_m</span>\n     <span class=\"n\">m_ptrs</span> <span class=\"o\">=</span> <span class=\"n\">M</span> <span class=\"o\">+</span> <span class=\"n\">off_hz</span> <span class=\"o\">*</span> <span class=\"n\">N_CTX</span> <span class=\"o\">+</span> <span class=\"n\">offs_m</span>\n     <span class=\"n\">tl</span><span class=\"o\">.</span><span class=\"n\">store</span><span class=\"p\">(</span><span class=\"n\">l_ptrs</span><span class=\"p\">,</span> <span class=\"n\">l_i</span><span class=\"p\">)</span>\n@@ -405,13 +376,14 @@\n \n     <span class=\"nd\">@staticmethod</span>\n     <span class=\"k\">def</span> <span class=\"nf\">forward</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">,</span> <span class=\"n\">q</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">causal</span><span class=\"p\">,</span> <span class=\"n\">sm_scale</span><span class=\"p\">):</span>\n-        <span class=\"n\">BLOCK</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>\n         <span class=\"c1\"># shape constraints</span>\n         <span class=\"n\">Lq</span><span class=\"p\">,</span> <span class=\"n\">Lk</span><span class=\"p\">,</span> <span class=\"n\">Lv</span> <span class=\"o\">=</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n         <span class=\"k\">assert</span> <span class=\"n\">Lq</span> <span class=\"o\">==</span> <span class=\"n\">Lk</span> <span class=\"ow\">and</span> <span class=\"n\">Lk</span> <span class=\"o\">==</span> <span class=\"n\">Lv</span>\n         <span class=\"k\">assert</span> <span class=\"n\">Lk</span> <span class=\"ow\">in</span> <span class=\"p\">{</span><span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"mi\">128</span><span class=\"p\">}</span>\n         <span class=\"n\">o</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">empty_like</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"p\">)</span>\n-        <span class=\"n\">grid</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">triton</span><span class=\"o\">.</span><span class=\"n\">cdiv</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"mi\">128</span><span class=\"p\">),</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n+        <span class=\"n\">BLOCK_M</span> <span class=\"o\">=</span> <span class=\"mi\">128</span>\n+        <span class=\"n\">BLOCK_N</span> <span class=\"o\">=</span> <span class=\"mi\">64</span>\n+        <span class=\"n\">grid</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">triton</span><span class=\"o\">.</span><span class=\"n\">cdiv</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">BLOCK_M</span><span class=\"p\">),</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n         <span class=\"n\">L</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">empty</span><span class=\"p\">((</span><span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]),</span> <span class=\"n\">device</span><span class=\"o\">=</span><span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)</span>\n         <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">empty</span><span class=\"p\">((</span><span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]),</span> <span class=\"n\">device</span><span class=\"o\">=</span><span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">device</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">float32</span><span class=\"p\">)</span>\n \n@@ -430,10 +402,10 @@\n                 <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">stride</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">stride</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">stride</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">v</span><span class=\"o\">.</span><span class=\"n\">stride</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span>\n                 <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">stride</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">stride</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">),</span> <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">stride</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"n\">o</span><span class=\"o\">.</span><span class=\"n\">stride</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">),</span>\n                 <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">],</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"n\">q</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">],</span>\n-                <span class=\"n\">BLOCK_M</span><span class=\"o\">=</span><span class=\"mi\">128</span><span class=\"p\">,</span> <span class=\"n\">BLOCK_N</span><span class=\"o\">=</span><span class=\"n\">BLOCK</span><span class=\"p\">,</span> <span class=\"n\">BLOCK_DMODEL</span><span class=\"o\">=</span><span class=\"n\">Lk</span><span class=\"p\">,</span>\n+                <span class=\"n\">BLOCK_M</span><span class=\"o\">=</span><span class=\"n\">BLOCK_M</span><span class=\"p\">,</span> <span class=\"n\">BLOCK_N</span><span class=\"o\">=</span><span class=\"n\">BLOCK_N</span><span class=\"p\">,</span> <span class=\"n\">BLOCK_DMODEL</span><span class=\"o\">=</span><span class=\"n\">Lk</span><span class=\"p\">,</span>\n                 <span class=\"n\">MODE</span><span class=\"o\">=</span><span class=\"n\">mode</span><span class=\"p\">,</span>\n                 <span class=\"n\">num_warps</span><span class=\"o\">=</span><span class=\"n\">num_warps</span><span class=\"p\">,</span>\n-                <span class=\"n\">num_stages</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n+                <span class=\"n\">num_stages</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n \n         <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">save_for_backward</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span><span class=\"p\">,</span> <span class=\"n\">o</span><span class=\"p\">,</span> <span class=\"n\">L</span><span class=\"p\">,</span> <span class=\"n\">m</span><span class=\"p\">)</span>\n         <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"n\">grid</span> <span class=\"o\">=</span> <span class=\"n\">grid</span>\n@@ -535,7 +507,7 @@\n     <span class=\"n\">ylabel</span><span class=\"o\">=</span><span class=\"s1\">&#39;ms&#39;</span><span class=\"p\">,</span>\n     <span class=\"n\">plot_name</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s1\">&#39;fused-attention-batch</span><span class=\"si\">{</span><span class=\"n\">BATCH</span><span class=\"si\">}</span><span class=\"s1\">-head</span><span class=\"si\">{</span><span class=\"n\">N_HEADS</span><span class=\"si\">}</span><span class=\"s1\">-d</span><span class=\"si\">{</span><span class=\"n\">D_HEAD</span><span class=\"si\">}</span><span class=\"s1\">-</span><span class=\"si\">{</span><span class=\"n\">mode</span><span class=\"si\">}</span><span class=\"s1\">&#39;</span><span class=\"p\">,</span>\n     <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">&#39;H&#39;</span><span class=\"p\">:</span> <span class=\"n\">N_HEADS</span><span class=\"p\">,</span> <span class=\"s1\">&#39;BATCH&#39;</span><span class=\"p\">:</span> <span class=\"n\">BATCH</span><span class=\"p\">,</span> <span class=\"s1\">&#39;D_HEAD&#39;</span><span class=\"p\">:</span> <span class=\"n\">D_HEAD</span><span class=\"p\">,</span> <span class=\"s1\">&#39;dtype&#39;</span><span class=\"p\">:</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">float16</span><span class=\"p\">,</span> <span class=\"s1\">&#39;mode&#39;</span><span class=\"p\">:</span> <span class=\"n\">mode</span><span class=\"p\">,</span> <span class=\"s1\">&#39;causal&#39;</span><span class=\"p\">:</span> <span class=\"n\">causal</span><span class=\"p\">}</span>\n-<span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">mode</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">&#39;fwd&#39;</span><span class=\"p\">,</span> <span class=\"s1\">&#39;bwd&#39;</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">causal</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">]]</span>\n+<span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">mode</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"s1\">&#39;fwd&#39;</span><span class=\"p\">]</span> <span class=\"k\">for</span> <span class=\"n\">causal</span> <span class=\"ow\">in</span> <span class=\"p\">[</span><span class=\"kc\">False</span><span class=\"p\">]]</span>\n \n \n <span class=\"nd\">@triton</span><span class=\"o\">.</span><span class=\"n\">testing</span><span class=\"o\">.</span><span class=\"n\">perf_report</span><span class=\"p\">(</span><span class=\"n\">configs</span><span class=\"p\">)</span>\n@@ -578,7 +550,7 @@\n <span class=\"n\">bench_flash_attention</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">save_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;.&#39;</span><span class=\"p\">,</span> <span class=\"n\">print_data</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n </pre></div>\n </div>\n-<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  16.566 seconds)</p>\n+<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  2.096 seconds)</p>\n <div class=\"sphx-glr-footer sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-getting-started-tutorials-06-fused-attention-py\">\n <div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n <p><a class=\"reference download internal\" download=\"\" href=\"../../_downloads/54a35f6ec55f9746935b9566fb6bb1df/06-fused-attention.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">06-fused-attention.py</span></code></a></p>"}, {"filename": "main/getting-started/tutorials/07-math-functions.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -186,7 +186,7 @@ <h2>Customize the libdevice library path<a class=\"headerlink\" href=\"#customize-t\n The maximum difference between torch and triton is 2.384185791015625e-07\n </pre></div>\n </div>\n-<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  0.242 seconds)</p>\n+<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  0.224 seconds)</p>\n <div class=\"sphx-glr-footer sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-getting-started-tutorials-07-math-functions-py\">\n <div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n <p><a class=\"reference download internal\" download=\"\" href=\"../../_downloads/77571465f7f4bd281d3a847dc2633146/07-math-functions.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">07-math-functions.py</span></code></a></p>"}, {"filename": "main/getting-started/tutorials/08-experimental-block-pointer.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -335,7 +335,7 @@ <h2>Unit Test<a class=\"headerlink\" href=\"#unit-test\" title=\"Permalink to this he\n \u2705 Triton and Torch match\n </pre></div>\n </div>\n-<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  6.531 seconds)</p>\n+<p class=\"sphx-glr-timing\"><strong>Total running time of the script:</strong> ( 0 minutes  6.395 seconds)</p>\n <div class=\"sphx-glr-footer sphx-glr-footer-example docutils container\" id=\"sphx-glr-download-getting-started-tutorials-08-experimental-block-pointer-py\">\n <div class=\"sphx-glr-download sphx-glr-download-python docutils container\">\n <p><a class=\"reference download internal\" download=\"\" href=\"../../_downloads/4d6052117d61c2ca779cd4b75567fee5/08-experimental-block-pointer.py\"><code class=\"xref download docutils literal notranslate\"><span class=\"pre\">Download</span> <span class=\"pre\">Python</span> <span class=\"pre\">source</span> <span class=\"pre\">code:</span> <span class=\"pre\">08-experimental-block-pointer.py</span></code></a></p>"}, {"filename": "main/getting-started/tutorials/index.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -119,7 +119,7 @@ <h1>Tutorials<a class=\"headerlink\" href=\"#tutorials\" title=\"Permalink to this he\n </div><div class=\"sphx-glr-thumbcontainer\" tooltip=\"In doing so, you will learn about:\"><img alt=\"\" src=\"../../_images/sphx_glr_05-layer-norm_thumb.png\" />\n <p><a class=\"reference internal\" href=\"05-layer-norm.html#sphx-glr-getting-started-tutorials-05-layer-norm-py\"><span class=\"std std-ref\">Layer Normalization</span></a></p>\n   <div class=\"sphx-glr-thumbnail-title\">Layer Normalization</div>\n-</div><div class=\"sphx-glr-thumbcontainer\" tooltip=\"This is a Triton implementation of the Flash Attention algorithm (see: Dao et al., https://arxi...\"><img alt=\"\" src=\"../../_images/sphx_glr_06-fused-attention_thumb.png\" />\n+</div><div class=\"sphx-glr-thumbcontainer\" tooltip=\"This is a Triton implementation of the Flash Attention v2 algorithm from Tri Dao (https://trida...\"><img alt=\"\" src=\"../../_images/sphx_glr_06-fused-attention_thumb.png\" />\n <p><a class=\"reference internal\" href=\"06-fused-attention.html#sphx-glr-getting-started-tutorials-06-fused-attention-py\"><span class=\"std std-ref\">Fused Attention</span></a></p>\n   <div class=\"sphx-glr-thumbnail-title\">Fused Attention</div>\n </div><div class=\"sphx-glr-thumbcontainer\" tooltip=\"Libdevice (`tl.math`) function\"><img alt=\"\" src=\"../../_images/sphx_glr_07-math-functions_thumb.png\" />"}, {"filename": "main/getting-started/tutorials/sg_execution_times.html", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "file_content_changes": "@@ -86,39 +86,39 @@\n              \n   <section id=\"computation-times\">\n <span id=\"sphx-glr-getting-started-tutorials-sg-execution-times\"></span><h1>Computation times<a class=\"headerlink\" href=\"#computation-times\" title=\"Permalink to this heading\">\u00b6</a></h1>\n-<p><strong>02:17.851</strong> total execution time for <strong>getting-started_tutorials</strong> files:</p>\n+<p><strong>02:03.311</strong> total execution time for <strong>getting-started_tutorials</strong> files:</p>\n <table class=\"docutils align-default\">\n <tbody>\n <tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"03-matrix-multiplication.html#sphx-glr-getting-started-tutorials-03-matrix-multiplication-py\"><span class=\"std std-ref\">Matrix Multiplication</span></a> (<code class=\"docutils literal notranslate\"><span class=\"pre\">03-matrix-multiplication.py</span></code>)</p></td>\n-<td><p>00:40.849</p></td>\n+<td><p>00:40.800</p></td>\n <td><p>0.0 MB</p></td>\n </tr>\n <tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"02-fused-softmax.html#sphx-glr-getting-started-tutorials-02-fused-softmax-py\"><span class=\"std std-ref\">Fused Softmax</span></a> (<code class=\"docutils literal notranslate\"><span class=\"pre\">02-fused-softmax.py</span></code>)</p></td>\n-<td><p>00:38.185</p></td>\n+<td><p>00:38.190</p></td>\n <td><p>0.0 MB</p></td>\n </tr>\n <tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"05-layer-norm.html#sphx-glr-getting-started-tutorials-05-layer-norm-py\"><span class=\"std std-ref\">Layer Normalization</span></a> (<code class=\"docutils literal notranslate\"><span class=\"pre\">05-layer-norm.py</span></code>)</p></td>\n-<td><p>00:29.088</p></td>\n+<td><p>00:29.263</p></td>\n <td><p>0.0 MB</p></td>\n </tr>\n-<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"06-fused-attention.html#sphx-glr-getting-started-tutorials-06-fused-attention-py\"><span class=\"std std-ref\">Fused Attention</span></a> (<code class=\"docutils literal notranslate\"><span class=\"pre\">06-fused-attention.py</span></code>)</p></td>\n-<td><p>00:16.566</p></td>\n+<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"08-experimental-block-pointer.html#sphx-glr-getting-started-tutorials-08-experimental-block-pointer-py\"><span class=\"std std-ref\">Block Pointer (Experimental)</span></a> (<code class=\"docutils literal notranslate\"><span class=\"pre\">08-experimental-block-pointer.py</span></code>)</p></td>\n+<td><p>00:06.395</p></td>\n <td><p>0.0 MB</p></td>\n </tr>\n-<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"08-experimental-block-pointer.html#sphx-glr-getting-started-tutorials-08-experimental-block-pointer-py\"><span class=\"std std-ref\">Block Pointer (Experimental)</span></a> (<code class=\"docutils literal notranslate\"><span class=\"pre\">08-experimental-block-pointer.py</span></code>)</p></td>\n-<td><p>00:06.531</p></td>\n+<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"01-vector-add.html#sphx-glr-getting-started-tutorials-01-vector-add-py\"><span class=\"std std-ref\">Vector Addition</span></a> (<code class=\"docutils literal notranslate\"><span class=\"pre\">01-vector-add.py</span></code>)</p></td>\n+<td><p>00:05.715</p></td>\n <td><p>0.0 MB</p></td>\n </tr>\n-<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"01-vector-add.html#sphx-glr-getting-started-tutorials-01-vector-add-py\"><span class=\"std std-ref\">Vector Addition</span></a> (<code class=\"docutils literal notranslate\"><span class=\"pre\">01-vector-add.py</span></code>)</p></td>\n-<td><p>00:05.753</p></td>\n+<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"06-fused-attention.html#sphx-glr-getting-started-tutorials-06-fused-attention-py\"><span class=\"std std-ref\">Fused Attention</span></a> (<code class=\"docutils literal notranslate\"><span class=\"pre\">06-fused-attention.py</span></code>)</p></td>\n+<td><p>00:02.096</p></td>\n <td><p>0.0 MB</p></td>\n </tr>\n <tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"04-low-memory-dropout.html#sphx-glr-getting-started-tutorials-04-low-memory-dropout-py\"><span class=\"std std-ref\">Low-Memory Dropout</span></a> (<code class=\"docutils literal notranslate\"><span class=\"pre\">04-low-memory-dropout.py</span></code>)</p></td>\n-<td><p>00:00.638</p></td>\n+<td><p>00:00.628</p></td>\n <td><p>0.0 MB</p></td>\n </tr>\n <tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"07-math-functions.html#sphx-glr-getting-started-tutorials-07-math-functions-py\"><span class=\"std std-ref\">Libdevice (tl.math) function</span></a> (<code class=\"docutils literal notranslate\"><span class=\"pre\">07-math-functions.py</span></code>)</p></td>\n-<td><p>00:00.242</p></td>\n+<td><p>00:00.224</p></td>\n <td><p>0.0 MB</p></td>\n </tr>\n </tbody>"}, {"filename": "main/objects.inv", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "file_content_changes": "N/A"}, {"filename": "main/python-api/generated/triton.language.debug_barrier.html", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "file_content_changes": "@@ -22,7 +22,7 @@\n     <script src=\"../../_static/js/theme.js\"></script>\n     <link rel=\"index\" title=\"Index\" href=\"../../genindex.html\" />\n     <link rel=\"search\" title=\"Search\" href=\"../../search.html\" />\n-    <link rel=\"next\" title=\"triton.language.max_contiguous\" href=\"triton.language.max_contiguous.html\" />\n+    <link rel=\"next\" title=\"triton.language.max_constancy\" href=\"triton.language.max_constancy.html\" />\n     <link rel=\"prev\" title=\"triton.language.randn\" href=\"triton.language.randn.html\" /> \n </head>\n \n@@ -71,6 +71,7 @@\n <li class=\"toctree-l4\"><a class=\"reference internal\" href=\"#triton.language.debug_barrier\"><code class=\"docutils literal notranslate\"><span class=\"pre\">debug_barrier()</span></code></a></li>\n </ul>\n </li>\n+<li class=\"toctree-l3\"><a class=\"reference internal\" href=\"triton.language.max_constancy.html\">triton.language.max_constancy</a></li>\n <li class=\"toctree-l3\"><a class=\"reference internal\" href=\"triton.language.max_contiguous.html\">triton.language.max_contiguous</a></li>\n <li class=\"toctree-l3\"><a class=\"reference internal\" href=\"triton.language.multiple_of.html\">triton.language.multiple_of</a></li>\n </ul>\n@@ -127,7 +128,7 @@ <h1>triton.language.debug_barrier<a class=\"headerlink\" href=\"#triton-language-de\n           </div>\n           <footer><div class=\"rst-footer-buttons\" role=\"navigation\" aria-label=\"Footer\">\n         <a href=\"triton.language.randn.html\" class=\"btn btn-neutral float-left\" title=\"triton.language.randn\" accesskey=\"p\" rel=\"prev\"><span class=\"fa fa-arrow-circle-left\" aria-hidden=\"true\"></span> Previous</a>\n-        <a href=\"triton.language.max_contiguous.html\" class=\"btn btn-neutral float-right\" title=\"triton.language.max_contiguous\" accesskey=\"n\" rel=\"next\">Next <span class=\"fa fa-arrow-circle-right\" aria-hidden=\"true\"></span></a>\n+        <a href=\"triton.language.max_constancy.html\" class=\"btn btn-neutral float-right\" title=\"triton.language.max_constancy\" accesskey=\"n\" rel=\"next\">Next <span class=\"fa fa-arrow-circle-right\" aria-hidden=\"true\"></span></a>\n     </div>\n \n   <hr/>"}, {"filename": "main/python-api/generated/triton.language.max_constancy.html", "status": "added", "additions": 172, "deletions": 0, "changes": 172, "file_content_changes": "@@ -0,0 +1,172 @@\n+<!DOCTYPE html>\n+<html class=\"writer-html5\" lang=\"en\" >\n+<head>\n+  <meta charset=\"utf-8\" /><meta name=\"generator\" content=\"Docutils 0.18.1: http://docutils.sourceforge.net/\" />\n+\n+  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n+  <title>triton.language.max_constancy &mdash; Triton  documentation</title>\n+      <link rel=\"stylesheet\" href=\"../../_static/pygments.css\" type=\"text/css\" />\n+      <link rel=\"stylesheet\" href=\"../../_static/css/theme.css\" type=\"text/css\" />\n+      <link rel=\"stylesheet\" href=\"../../_static/sg_gallery.css\" type=\"text/css\" />\n+      <link rel=\"stylesheet\" href=\"../../_static/sg_gallery-binder.css\" type=\"text/css\" />\n+      <link rel=\"stylesheet\" href=\"../../_static/sg_gallery-dataframe.css\" type=\"text/css\" />\n+      <link rel=\"stylesheet\" href=\"../../_static/sg_gallery-rendered-html.css\" type=\"text/css\" />\n+      <link rel=\"stylesheet\" href=\"../../_static/css/custom.css\" type=\"text/css\" />\n+  <!--[if lt IE 9]>\n+    <script src=\"../../_static/js/html5shiv.min.js\"></script>\n+  <![endif]-->\n+  \n+        <script data-url_root=\"../../\" id=\"documentation_options\" src=\"../../_static/documentation_options.js\"></script>\n+        <script src=\"../../_static/doctools.js\"></script>\n+        <script src=\"../../_static/sphinx_highlight.js\"></script>\n+    <script src=\"../../_static/js/theme.js\"></script>\n+    <link rel=\"index\" title=\"Index\" href=\"../../genindex.html\" />\n+    <link rel=\"search\" title=\"Search\" href=\"../../search.html\" />\n+    <link rel=\"next\" title=\"triton.language.max_contiguous\" href=\"triton.language.max_contiguous.html\" />\n+    <link rel=\"prev\" title=\"triton.language.debug_barrier\" href=\"triton.language.debug_barrier.html\" /> \n+</head>\n+\n+<body class=\"wy-body-for-nav\"> \n+  <div class=\"wy-grid-for-nav\">\n+    <nav data-toggle=\"wy-nav-shift\" class=\"wy-nav-side\">\n+      <div class=\"wy-side-scroll\">\n+        <div class=\"wy-side-nav-search\" >\n+\n+          \n+          \n+          <a href=\"../../index.html\" class=\"icon icon-home\">\n+            Triton\n+          </a>\n+<div role=\"search\">\n+  <form id=\"rtd-search-form\" class=\"wy-form\" action=\"../../search.html\" method=\"get\">\n+    <input type=\"text\" name=\"q\" placeholder=\"Search docs\" aria-label=\"Search docs\" />\n+    <input type=\"hidden\" name=\"check_keywords\" value=\"yes\" />\n+    <input type=\"hidden\" name=\"area\" value=\"default\" />\n+  </form>\n+</div>\n+        </div><div class=\"wy-menu wy-menu-vertical\" data-spy=\"affix\" role=\"navigation\" aria-label=\"Navigation menu\">\n+              <p class=\"caption\" role=\"heading\"><span class=\"caption-text\">Getting Started</span></p>\n+<ul>\n+<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"../../getting-started/installation.html\">Installation</a></li>\n+<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"../../getting-started/tutorials/index.html\">Tutorials</a></li>\n+</ul>\n+<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">Python API</span></p>\n+<ul class=\"current\">\n+<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"../triton.html\">triton</a></li>\n+<li class=\"toctree-l1 current\"><a class=\"reference internal\" href=\"../triton.language.html\">triton.language</a><ul class=\"current\">\n+<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../triton.language.html#programming-model\">Programming Model</a></li>\n+<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../triton.language.html#creation-ops\">Creation Ops</a></li>\n+<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../triton.language.html#shape-manipulation-ops\">Shape Manipulation Ops</a></li>\n+<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../triton.language.html#linear-algebra-ops\">Linear Algebra Ops</a></li>\n+<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../triton.language.html#memory-ops\">Memory Ops</a></li>\n+<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../triton.language.html#indexing-ops\">Indexing Ops</a></li>\n+<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../triton.language.html#math-ops\">Math Ops</a></li>\n+<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../triton.language.html#reduction-ops\">Reduction Ops</a></li>\n+<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../triton.language.html#scan-ops\">Scan Ops</a></li>\n+<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../triton.language.html#atomic-ops\">Atomic Ops</a></li>\n+<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../triton.language.html#comparison-ops\">Comparison ops</a></li>\n+<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../triton.language.html#random-number-generation\">Random Number Generation</a></li>\n+<li class=\"toctree-l2 current\"><a class=\"reference internal\" href=\"../triton.language.html#compiler-hint-ops\">Compiler Hint Ops</a><ul class=\"current\">\n+<li class=\"toctree-l3\"><a class=\"reference internal\" href=\"triton.language.debug_barrier.html\">triton.language.debug_barrier</a></li>\n+<li class=\"toctree-l3 current\"><a class=\"current reference internal\" href=\"#\">triton.language.max_constancy</a><ul>\n+<li class=\"toctree-l4\"><a class=\"reference internal\" href=\"#triton.language.max_constancy\"><code class=\"docutils literal notranslate\"><span class=\"pre\">max_constancy()</span></code></a></li>\n+</ul>\n+</li>\n+<li class=\"toctree-l3\"><a class=\"reference internal\" href=\"triton.language.max_contiguous.html\">triton.language.max_contiguous</a></li>\n+<li class=\"toctree-l3\"><a class=\"reference internal\" href=\"triton.language.multiple_of.html\">triton.language.multiple_of</a></li>\n+</ul>\n+</li>\n+<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../triton.language.html#debug-ops\">Debug Ops</a></li>\n+<li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../triton.language.html#iterators\">Iterators</a></li>\n+</ul>\n+</li>\n+<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"../triton.testing.html\">triton.testing</a></li>\n+</ul>\n+<p class=\"caption\" role=\"heading\"><span class=\"caption-text\">Programming Guide</span></p>\n+<ul>\n+<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"../../programming-guide/chapter-1/introduction.html\">Introduction</a></li>\n+<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"../../programming-guide/chapter-2/related-work.html\">Related Work</a></li>\n+</ul>\n+\n+        </div>\n+      </div>\n+    </nav>\n+\n+    <section data-toggle=\"wy-nav-shift\" class=\"wy-nav-content-wrap\"><nav class=\"wy-nav-top\" aria-label=\"Mobile navigation menu\" >\n+          <i data-toggle=\"wy-nav-top\" class=\"fa fa-bars\"></i>\n+          <a href=\"../../index.html\">Triton</a>\n+      </nav>\n+\n+      <div class=\"wy-nav-content\">\n+        <div class=\"rst-content\">\n+          <div role=\"navigation\" aria-label=\"Page navigation\">\n+  <ul class=\"wy-breadcrumbs\">\n+      <li><a href=\"../../index.html\" class=\"icon icon-home\" aria-label=\"Home\"></a></li>\n+          <li class=\"breadcrumb-item\"><a href=\"../triton.language.html\">triton.language</a></li>\n+      <li class=\"breadcrumb-item active\">triton.language.max_constancy</li>\n+      <li class=\"wy-breadcrumbs-aside\">\n+            <a href=\"../../_sources/python-api/generated/triton.language.max_constancy.rst.txt\" rel=\"nofollow\"> View page source</a>\n+      </li>\n+  </ul>\n+  <hr/>\n+</div>\n+          <div role=\"main\" class=\"document\" itemscope=\"itemscope\" itemtype=\"http://schema.org/Article\">\n+           <div itemprop=\"articleBody\">\n+             \n+  <section id=\"triton-language-max-constancy\">\n+<h1>triton.language.max_constancy<a class=\"headerlink\" href=\"#triton-language-max-constancy\" title=\"Permalink to this heading\">\u00b6</a></h1>\n+<dl class=\"py function\">\n+<dt class=\"sig sig-object py\" id=\"triton.language.max_constancy\">\n+<span class=\"sig-prename descclassname\"><span class=\"pre\">triton.language.</span></span><span class=\"sig-name descname\"><span class=\"pre\">max_constancy</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">input</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">values</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#triton.language.max_constancy\" title=\"Permalink to this definition\">\u00b6</a></dt>\n+<dd><p>Let the compiler knows that the <cite>value</cite> first values in <code class=\"code docutils literal notranslate\"><span class=\"pre\">input</span></code> are constant.</p>\n+<p>e.g. if <code class=\"code docutils literal notranslate\"><span class=\"pre\">values</span></code> is [4], then each group of 4 values in <code class=\"code docutils literal notranslate\"><span class=\"pre\">input</span></code> should all be equal,\n+for example [0, 0, 0, 0, 1, 1, 1, 1].</p>\n+</dd></dl>\n+\n+</section>\n+\n+\n+           </div>\n+          </div>\n+          <footer><div class=\"rst-footer-buttons\" role=\"navigation\" aria-label=\"Footer\">\n+        <a href=\"triton.language.debug_barrier.html\" class=\"btn btn-neutral float-left\" title=\"triton.language.debug_barrier\" accesskey=\"p\" rel=\"prev\"><span class=\"fa fa-arrow-circle-left\" aria-hidden=\"true\"></span> Previous</a>\n+        <a href=\"triton.language.max_contiguous.html\" class=\"btn btn-neutral float-right\" title=\"triton.language.max_contiguous\" accesskey=\"n\" rel=\"next\">Next <span class=\"fa fa-arrow-circle-right\" aria-hidden=\"true\"></span></a>\n+    </div>\n+\n+  <hr/>\n+\n+  <div role=\"contentinfo\">\n+    <p>&#169; Copyright 2020, Philippe Tillet.</p>\n+  </div>\n+\n+  Built with <a href=\"https://www.sphinx-doc.org/\">Sphinx</a> using a\n+    <a href=\"https://github.com/readthedocs/sphinx_rtd_theme\">theme</a>\n+    provided by <a href=\"https://readthedocs.org\">Read the Docs</a>.\n+   \n+\n+</footer>\n+        </div>\n+      </div>\n+    </section>\n+  </div>\n+  \n+<div class=\"rst-versions\" data-toggle=\"rst-versions\" role=\"note\" aria-label=\"versions\">\n+    <span class=\"rst-current-version\" data-toggle=\"rst-current-version\">\n+        <span class=\"fa fa-book\"> Other Versions</span>\n+        v: main\n+        <span class=\"fa fa-caret-down\"></span>\n+    </span>\n+    <div class=\"rst-other-versions\">\n+        <dl>\n+            <dt>Branches</dt>\n+            <dd><a href=\"triton.language.max_constancy.html\">main</a></dd>\n+        </dl>\n+    </div>\n+</div><script>\n+      jQuery(function () {\n+          SphinxRtdTheme.Navigation.enable(true);\n+      });\n+  </script> \n+\n+</body>\n+</html>\n\\ No newline at end of file"}, {"filename": "main/python-api/generated/triton.language.max_contiguous.html", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "file_content_changes": "@@ -23,7 +23,7 @@\n     <link rel=\"index\" title=\"Index\" href=\"../../genindex.html\" />\n     <link rel=\"search\" title=\"Search\" href=\"../../search.html\" />\n     <link rel=\"next\" title=\"triton.language.multiple_of\" href=\"triton.language.multiple_of.html\" />\n-    <link rel=\"prev\" title=\"triton.language.debug_barrier\" href=\"triton.language.debug_barrier.html\" /> \n+    <link rel=\"prev\" title=\"triton.language.max_constancy\" href=\"triton.language.max_constancy.html\" /> \n </head>\n \n <body class=\"wy-body-for-nav\"> \n@@ -68,6 +68,7 @@\n <li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../triton.language.html#random-number-generation\">Random Number Generation</a></li>\n <li class=\"toctree-l2 current\"><a class=\"reference internal\" href=\"../triton.language.html#compiler-hint-ops\">Compiler Hint Ops</a><ul class=\"current\">\n <li class=\"toctree-l3\"><a class=\"reference internal\" href=\"triton.language.debug_barrier.html\">triton.language.debug_barrier</a></li>\n+<li class=\"toctree-l3\"><a class=\"reference internal\" href=\"triton.language.max_constancy.html\">triton.language.max_constancy</a></li>\n <li class=\"toctree-l3 current\"><a class=\"current reference internal\" href=\"#\">triton.language.max_contiguous</a><ul>\n <li class=\"toctree-l4\"><a class=\"reference internal\" href=\"#triton.language.max_contiguous\"><code class=\"docutils literal notranslate\"><span class=\"pre\">max_contiguous()</span></code></a></li>\n </ul>\n@@ -126,7 +127,7 @@ <h1>triton.language.max_contiguous<a class=\"headerlink\" href=\"#triton-language-m\n            </div>\n           </div>\n           <footer><div class=\"rst-footer-buttons\" role=\"navigation\" aria-label=\"Footer\">\n-        <a href=\"triton.language.debug_barrier.html\" class=\"btn btn-neutral float-left\" title=\"triton.language.debug_barrier\" accesskey=\"p\" rel=\"prev\"><span class=\"fa fa-arrow-circle-left\" aria-hidden=\"true\"></span> Previous</a>\n+        <a href=\"triton.language.max_constancy.html\" class=\"btn btn-neutral float-left\" title=\"triton.language.max_constancy\" accesskey=\"p\" rel=\"prev\"><span class=\"fa fa-arrow-circle-left\" aria-hidden=\"true\"></span> Previous</a>\n         <a href=\"triton.language.multiple_of.html\" class=\"btn btn-neutral float-right\" title=\"triton.language.multiple_of\" accesskey=\"n\" rel=\"next\">Next <span class=\"fa fa-arrow-circle-right\" aria-hidden=\"true\"></span></a>\n     </div>\n "}, {"filename": "main/python-api/generated/triton.language.multiple_of.html", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "file_content_changes": "@@ -68,6 +68,7 @@\n <li class=\"toctree-l2\"><a class=\"reference internal\" href=\"../triton.language.html#random-number-generation\">Random Number Generation</a></li>\n <li class=\"toctree-l2 current\"><a class=\"reference internal\" href=\"../triton.language.html#compiler-hint-ops\">Compiler Hint Ops</a><ul class=\"current\">\n <li class=\"toctree-l3\"><a class=\"reference internal\" href=\"triton.language.debug_barrier.html\">triton.language.debug_barrier</a></li>\n+<li class=\"toctree-l3\"><a class=\"reference internal\" href=\"triton.language.max_constancy.html\">triton.language.max_constancy</a></li>\n <li class=\"toctree-l3\"><a class=\"reference internal\" href=\"triton.language.max_contiguous.html\">triton.language.max_contiguous</a></li>\n <li class=\"toctree-l3 current\"><a class=\"current reference internal\" href=\"#\">triton.language.multiple_of</a><ul>\n <li class=\"toctree-l4\"><a class=\"reference internal\" href=\"#triton.language.multiple_of\"><code class=\"docutils literal notranslate\"><span class=\"pre\">multiple_of()</span></code></a></li>"}, {"filename": "main/python-api/triton.language.html", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "file_content_changes": "@@ -142,6 +142,7 @@\n </li>\n <li class=\"toctree-l2\"><a class=\"reference internal\" href=\"#compiler-hint-ops\">Compiler Hint Ops</a><ul>\n <li class=\"toctree-l3\"><a class=\"reference internal\" href=\"generated/triton.language.debug_barrier.html\">triton.language.debug_barrier</a></li>\n+<li class=\"toctree-l3\"><a class=\"reference internal\" href=\"generated/triton.language.max_constancy.html\">triton.language.max_constancy</a></li>\n <li class=\"toctree-l3\"><a class=\"reference internal\" href=\"generated/triton.language.max_contiguous.html\">triton.language.max_contiguous</a></li>\n <li class=\"toctree-l3\"><a class=\"reference internal\" href=\"generated/triton.language.multiple_of.html\">triton.language.multiple_of</a></li>\n </ul>\n@@ -431,10 +432,13 @@ <h2>Compiler Hint Ops<a class=\"headerlink\" href=\"#compiler-hint-ops\" title=\"Perm\n <tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"generated/triton.language.debug_barrier.html#triton.language.debug_barrier\" title=\"triton.language.debug_barrier\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">debug_barrier</span></code></a></p></td>\n <td><p>Insert a barrier to synchronize all threads in a block.</p></td>\n </tr>\n-<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"generated/triton.language.max_contiguous.html#triton.language.max_contiguous\" title=\"triton.language.max_contiguous\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">max_contiguous</span></code></a></p></td>\n+<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"generated/triton.language.max_constancy.html#triton.language.max_constancy\" title=\"triton.language.max_constancy\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">max_constancy</span></code></a></p></td>\n+<td><p>Let the compiler knows that the <cite>value</cite> first values in <code class=\"code docutils literal notranslate\"><span class=\"pre\">input</span></code> are constant.</p></td>\n+</tr>\n+<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"generated/triton.language.max_contiguous.html#triton.language.max_contiguous\" title=\"triton.language.max_contiguous\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">max_contiguous</span></code></a></p></td>\n <td><p>Let the compiler knows that the <cite>value</cite> first values in <code class=\"code docutils literal notranslate\"><span class=\"pre\">input</span></code> are contiguous.</p></td>\n </tr>\n-<tr class=\"row-odd\"><td><p><a class=\"reference internal\" href=\"generated/triton.language.multiple_of.html#triton.language.multiple_of\" title=\"triton.language.multiple_of\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">multiple_of</span></code></a></p></td>\n+<tr class=\"row-even\"><td><p><a class=\"reference internal\" href=\"generated/triton.language.multiple_of.html#triton.language.multiple_of\" title=\"triton.language.multiple_of\"><code class=\"xref py py-obj docutils literal notranslate\"><span class=\"pre\">multiple_of</span></code></a></p></td>\n <td><p>Let the compiler knows that the values in <code class=\"code docutils literal notranslate\"><span class=\"pre\">input</span></code> are all multiples of <code class=\"code docutils literal notranslate\"><span class=\"pre\">value</span></code>.</p></td>\n </tr>\n </tbody>"}, {"filename": "main/searchindex.js", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "N/A"}]