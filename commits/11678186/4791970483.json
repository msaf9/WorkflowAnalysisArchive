[{"filename": "python/test/unit/language/test_core.py", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "file_content_changes": "@@ -2088,6 +2088,7 @@ def _kernel(dst):\n                          [('int32', 'math.ffs', ''),\n                           ('float32', 'math.log2', ''),\n                           ('float32', 'math.pow', tl.math.libdevice_path()),\n+                          ('float64', 'math.pow_dtype', tl.math.libdevice_path()),\n                           ('float64', 'math.norm4d', '')])\n def test_math_tensor(dtype_str, expr, lib_path):\n \n@@ -2115,6 +2116,10 @@ def kernel(X, Y, BLOCK: tl.constexpr):\n         x = np.abs(x)\n         kernel = patch_kernel(kernel, {'GENERATE_TEST_HERE': 'tl.math.pow(x, x)'})\n         y_ref = np.power(x, x)\n+    elif expr == 'math.pow_dtype':\n+        x = np.abs(x)\n+        kernel = patch_kernel(kernel, {'GENERATE_TEST_HERE': 'tl.math.pow(x, 0.5)'})\n+        y_ref = np.power(x, 0.5)\n     elif expr == 'math.norm4d':\n         kernel = patch_kernel(kernel, {'GENERATE_TEST_HERE': 'tl.math.norm4d(x, x, x, x)'})\n         y_ref = np.sqrt(4 * np.power(x, 2))"}]