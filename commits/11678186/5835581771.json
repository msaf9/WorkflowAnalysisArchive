[{"filename": "include/triton/Tools/Sys/GetEnv.hpp", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "file_content_changes": "@@ -24,7 +24,9 @@\n \n #include <algorithm>\n #include <cstdlib>\n+#include <set>\n #include <string>\n+\n namespace triton {\n \n const std::set<std::string> ENV_VARS = {"}, {"filename": "lib/Dialect/TritonGPU/IR/Dialect.cpp", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "file_content_changes": "@@ -1460,9 +1460,10 @@ struct TritonGPUInferLayoutInterface\n     return success();\n   }\n \n-  LogicalResult inferDotOpEncoding(Attribute operandEncoding, unsigned opIdx,\n-                                   Attribute retEncoding,\n-                                   Optional<Location> location) const override {\n+  LogicalResult\n+  inferDotOpEncoding(Attribute operandEncoding, unsigned opIdx,\n+                     Attribute retEncoding,\n+                     std::optional<Location> location) const override {\n     auto mmaRetEncoding = retEncoding.dyn_cast<MmaEncodingAttr>();\n     if (mmaRetEncoding && mmaRetEncoding.isHopper()) {\n       // TODO: support gmma when A/B does not reside in shared memory"}, {"filename": "lib/Dialect/TritonNvidiaGPU/Transforms/WSMaterialization.cpp", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "file_content_changes": "@@ -30,6 +30,8 @@\n #include \"triton/Dialect/TritonNvidiaGPU/IR/Dialect.h\"\n #include \"triton/Dialect/TritonNvidiaGPU/Transforms/Utility.h\"\n \n+#include <set>\n+\n using namespace mlir;\n namespace ttg = triton::gpu;\n namespace ttng = triton::nvidia_gpu;"}]