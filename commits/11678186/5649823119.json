[{"filename": ".github/workflows/integration-tests.yml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "file_content_changes": "@@ -170,6 +170,7 @@ jobs:\n           python3 -m pip install --upgrade pip\n           python3 -m pip install cmake==3.24\n           python3 -m pip install torch==1.13.1 --index-url https://download.pytorch.org/whl/rocm5.2\n+          export TRITON_CODEGEN_AMD_HIP_BACKEND=1\n           python3 -m pip install --no-build-isolation -vvv '.[tests]'\n \n       - name: Install Triton on XPU"}, {"filename": "python/test/unit/language/test_core.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -12,8 +12,8 @@\n import triton\n import triton._C.libtriton.triton as _triton\n import triton.language as tl\n-from triton.runtime.jit import JITFunction, TensorWrapper, reinterpret\n from triton.common.build import is_hip\n+from triton.runtime.jit import JITFunction, TensorWrapper, reinterpret\n \n int_dtypes = ['int8', 'int16', 'int32', 'int64']\n uint_dtypes = ['uint8', 'uint16', 'uint32', 'uint64']"}, {"filename": "python/triton/compiler/compiler.py", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "file_content_changes": "@@ -2,6 +2,7 @@\n \n import functools\n import hashlib\n+import importlib\n import json\n import os\n import re\n@@ -11,8 +12,7 @@\n from typing import Any\n \n from .._C.libtriton.triton import (add_external_libs, compile_ptx_to_cubin,\n-                                   get_shared_memory_size, ir,\n-                                   translate_llvmir_to_ptx,\n+                                   get_shared_memory_size, ir, translate_llvmir_to_ptx,\n                                    translate_triton_gpu_to_llvmir)\n from ..common.backend import get_backend, path_to_ptxas, register_backend\n from ..common.build import is_hip\n@@ -27,7 +27,6 @@\n from .code_generator import ast_to_ttir\n from .make_launcher import make_stub\n \n-import importlib\n rocm_module_path = os.path.join(Path(__file__).parents[3],\"third_party\",\"amd_hip_backend\",\"python\", \"rocm.py\")\n spec = importlib.util.spec_from_file_location(\"rocm\", rocm_module_path)\n rocm = importlib.util.module_from_spec(spec)"}, {"filename": "python/triton/language/math.py", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "file_content_changes": "@@ -1,9 +1,9 @@\n import functools\n import os\n+from pathlib import Path\n \n-from . import core\n from ..common.build import is_hip\n-from pathlib import Path\n+from . import core\n \n \n @functools.lru_cache()"}, {"filename": "python/triton/language/semantic.py", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "file_content_changes": "@@ -1,16 +1,16 @@\n from __future__ import annotations  # remove after python 3.11\n \n+import importlib\n import os\n-from pathlib import Path\n import warnings\n from functools import wraps\n+from pathlib import Path\n from typing import List, Optional, Sequence, Tuple, TypeVar\n \n from .._C.libtriton.triton import ir\n+from ..common.build import is_hip\n from . import core as tl\n \n-from ..common.build import is_hip\n-import importlib\n rocm_module_path = os.path.join(Path(__file__).parents[3],\"third_party\",\"amd_hip_backend\",\"python\", \"rocm.py\")\n spec = importlib.util.spec_from_file_location(\"rocm\", rocm_module_path)\n rocm = importlib.util.module_from_spec(spec)"}]