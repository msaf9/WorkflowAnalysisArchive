[{"filename": "python/test/unit/language/test_core.py", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "file_content_changes": "@@ -1463,18 +1463,18 @@ def kernel(x):\n     kernel[(1, )](x)\n \n \n-@pytest.mark.parametrize(\"device\", ['cuda', 'cpu'])\n+@pytest.mark.parametrize(\"device\", ['cuda', 'cpu', 'cpu_pinned'])\n def test_pointer_arguments(device):\n     @triton.jit\n     def kernel(x):\n         pass\n-    x = torch.empty(1024, device=device)\n-    result = True\n-    try:\n+    pin_memory = 'pinned' in device\n+    x = torch.empty(1024, device=device.split('_')[0], pin_memory=pin_memory)\n+    if device == \"cpu\":\n+      with pytest.raises(ValueError):\n         kernel[(1,)](x)\n-    except ValueError:\n-        result = True if device == 'cpu' else False\n-    assert result\n+    else:\n+      kernel[(1, )](x)\n \n \n @pytest.mark.parametrize(\"value, value_type\", ["}, {"filename": "python/triton/compiler.py", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "file_content_changes": "@@ -1222,16 +1222,16 @@ def format_of(ty):\n       return ptr_info;\n     }}\n     ptr_info.dev_ptr = PyLong_AsUnsignedLongLong(ret);\n-    unsigned attr;\n-    CUresult status =\n-        cuPointerGetAttribute(&attr, CU_POINTER_ATTRIBUTE_MEMORY_TYPE, ptr_info.dev_ptr);\n-    if (ptr_info.dev_ptr &&\n-        (!(attr == CU_MEMORYTYPE_DEVICE || attr == CU_MEMORYTYPE_UNIFIED) ||\n-         !(status == CUDA_SUCCESS))) {{\n+    if(!ptr_info.dev_ptr)\n+      return ptr_info;\n+    uint64_t dev_ptr;\n+    int status = cuPointerGetAttribute(&dev_ptr, CU_POINTER_ATTRIBUTE_DEVICE_POINTER, ptr_info.dev_ptr);\n+    if (status == CUDA_ERROR_INVALID_VALUE) {{\n         PyErr_Format(PyExc_ValueError,\n                      \"Pointer argument (at %d) cannot be accessed from Triton (cpu tensor?)\", idx);\n         ptr_info.valid = false;\n     }}\n+    ptr_info.dev_ptr = dev_ptr;\n     return ptr_info;\n   }}\n   PyErr_SetString(PyExc_TypeError, \"Pointer argument must be either uint64 or have data_ptr method\");"}]