[{"filename": "lib/Conversion/TritonGPUToLLVM/TritonGPUToLLVM.cpp", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "file_content_changes": "@@ -542,7 +542,21 @@ class ConvertTritonGPUOpToLLVMPattern\n   SmallVector<SmallVector<unsigned>>\n   emitOffsetForMmaLayoutV1(const MmaEncodingAttr &mmaLayout,\n                            ArrayRef<int64_t> shape) const {\n-    llvm_unreachable(\"emitOffsetForMmaLayoutV1 not implemented\");\n+    SmallVector<SmallVector<unsigned>> ret;\n+\n+    for (unsigned i = 0; i < shape[0]; i += getShapePerCTA(mmaLayout)[0]) {\n+      for (unsigned j = 0; j < shape[1]; j += getShapePerCTA(mmaLayout)[1]) {\n+        ret.push_back({i, j});\n+        ret.push_back({i, j + 1});\n+        ret.push_back({i + 2, j});\n+        ret.push_back({i + 2, j + 1});\n+        ret.push_back({i, j + 8});\n+        ret.push_back({i, j + 9});\n+        ret.push_back({i + 2, j + 8});\n+        ret.push_back({i + 2, j + 9});\n+      }\n+    }\n+    return ret;\n   }\n \n   SmallVector<Value>"}, {"filename": "lib/Dialect/TritonGPU/IR/Dialect.cpp", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "file_content_changes": "@@ -179,8 +179,7 @@ SmallVector<unsigned> getShapePerCTA(const Attribute &layout) {\n     for (unsigned d = 0, n = getOrder(parent).size(); d < n; ++d) {\n       if (d == dim)\n         continue;\n-      shape.push_back(getSizePerThread(parent)[d] *\n-                      getThreadsPerWarp(parent)[d] * getWarpsPerCTA(parent)[d]);\n+      shape.push_back(getShapePerCTA(parent)[d]);\n     }\n   } else if (auto mmaLayout = layout.dyn_cast<MmaEncodingAttr>()) {\n     if (mmaLayout.getVersion() == 2)"}]