[{"filename": "python/test/unit/language/test_core.py", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "file_content_changes": "@@ -377,25 +377,26 @@ def test_compare_op(dtype_x, dtype_y, op, mode_x, mode_y, device='cuda'):\n @pytest.mark.parametrize(\"dtype\", dtypes_with_bfloat16 + [\"*int32\"])\n def test_broadcast(dtype):\n     @triton.jit\n-    def broadcast_kernel(x_ptr, y_ptr, y_broadcasted_ptr, BLOCK_SIZE: tl.constexpr):\n-        offset1 = tl.arange(0, BLOCK_SIZE)\n-        offset2 = tl.arange(0, BLOCK_SIZE)\n-        x = tl.load(x_ptr + BLOCK_SIZE * offset1[:, None] + offset2[None, :])\n+    def broadcast_kernel(x_ptr, y_ptr, y_broadcasted_ptr, M: tl.constexpr, N: tl.constexpr):\n+        offset1 = tl.arange(0, M)\n+        offset2 = tl.arange(0, N)\n+        x = tl.load(x_ptr + N * offset1[:, None] + offset2[None, :])\n         y = tl.load(y_ptr + offset2)\n         _, y_broadcasted = tl.broadcast(x, y)\n-        tl.store(y_broadcasted_ptr + BLOCK_SIZE * offset1[:, None] + offset2[None, :], y_broadcasted)\n+        tl.store(y_broadcasted_ptr + N * offset1[:, None] + offset2[None, :], y_broadcasted)\n \n-    SIZE = 32\n+    M = 32\n+    N = 64\n     rs = RandomState(17)\n-    x = numpy_random((SIZE, SIZE), dtype_str=dtype, rs=rs)\n-    y = numpy_random(SIZE, dtype_str=dtype, rs=rs)\n+    x = numpy_random((M, N), dtype_str=dtype, rs=rs)\n+    y = numpy_random(N, dtype_str=dtype, rs=rs)\n     _, y_broadcasted_np = np.broadcast_arrays(x, y)\n \n     x_tri = to_triton(x, device='cuda', dst_type=dtype)\n     y_tri = to_triton(y, device='cuda', dst_type=dtype)\n-    y_broadcasted_tri = to_triton(np.empty((SIZE, SIZE), dtype=y_broadcasted_np.dtype), device='cuda', dst_type=dtype)\n+    y_broadcasted_tri = to_triton(np.empty((M, N), dtype=y_broadcasted_np.dtype), device='cuda', dst_type=dtype)\n \n-    broadcast_kernel[(1,)](x_tri, y_tri, y_broadcasted_tri, BLOCK_SIZE=SIZE)\n+    broadcast_kernel[(1,)](x_tri, y_tri, y_broadcasted_tri, M=M, N=N)\n     assert (y_broadcasted_np == to_numpy(y_broadcasted_tri)).all()\n \n "}]