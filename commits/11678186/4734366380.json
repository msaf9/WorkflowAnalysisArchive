[{"filename": "python/triton/language/core.py", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "file_content_changes": "@@ -1597,11 +1597,11 @@ def extern_elementwise(lib_name: str, lib_path: str, args: list, arg_type_symbol\n         # Get the broadcast shape over all the arguments\n         for i, item in enumerate(dispatch_args):\n             _, broadcast_arg = semantic.binary_op_type_checking_impl(\n-                item, broadcast_arg, _builder)\n+                item, broadcast_arg, _builder, arithmetic_check=False)\n         # Change the shape of each argument based on the broadcast shape\n         for i in range(len(dispatch_args)):\n             dispatch_args[i], _ = semantic.binary_op_type_checking_impl(\n-                dispatch_args[i], broadcast_arg, _builder)\n+                dispatch_args[i], broadcast_arg, _builder, arithmetic_check=False)\n         ret_shape = broadcast_arg.shape\n     func = getattr(_builder, \"create_extern_elementwise\")\n     return dispatch(func, lib_name, lib_path, dispatch_args, arg_type_symbol_dict, ret_shape, is_pure, _builder)"}]