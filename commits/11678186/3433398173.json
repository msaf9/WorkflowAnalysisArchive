[{"filename": "lib/Dialect/TritonGPU/Transforms/Combine.cpp", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "file_content_changes": "@@ -122,8 +122,8 @@ class SimplifyConversion : public mlir::RewritePattern {\n       rewriter.replaceOpWithNewOp<triton::gpu::InsertSliceAsyncOp>(\n           op, newType, insert_slice.src(), newArg.getResult(),\n           insert_slice.index(), insert_slice.mask(), insert_slice.other(),\n-          insert_slice.cache(), insert_slice.evict(), insert_slice.isVolatile(),\n-          insert_slice.axis());\n+          insert_slice.cache(), insert_slice.evict(),\n+          insert_slice.isVolatile(), insert_slice.axis());\n       return mlir::success();\n     }\n     // cvt(extract_slice(x), type2) -> extract_slice(cvt(x, type2))\n@@ -588,9 +588,11 @@ class BlockedToMMA : public mlir::RewritePattern {\n     auto retShape = oldRetType.getShape();\n     auto mod = op->getParentOfType<mlir::ModuleOp>();\n     int numWarps = triton::gpu::TritonGPUDialect::getNumWarps(mod);\n-    auto newRetType = RankedTensorType::get(\n-        retShape, oldRetType.getElementType(),\n-        triton::gpu::MmaEncodingAttr::get(oldRetType.getContext(), 2, {2, 2}));\n+    auto newRetType =\n+        RankedTensorType::get(retShape, oldRetType.getElementType(),\n+                              triton::gpu::MmaEncodingAttr::get(\n+                                  oldRetType.getContext(), 2,\n+                                  getWarpsPerTile(retShape, 2, numWarps)));\n     // convert accumulator\n     auto oldAcc = dotOp.getOperand(2);\n     auto newAcc = rewriter.create<triton::gpu::ConvertLayoutOp>("}]