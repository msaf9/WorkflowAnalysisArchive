[{"filename": "python/triton/runtime/jit.py", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "file_content_changes": "@@ -265,7 +265,7 @@ def _make_launcher(self):\n         specializations = []\n         for i, arg in enumerate(regular_args):\n             if i in self.do_not_specialize:\n-              continue\n+                continue\n             specializations += [f'({arg}.data_ptr() % {JITFunction.divisibility} == 0) if hasattr({arg}, \"data_ptr\") '\n                                 f'else ({arg} % {JITFunction.divisibility} == 0, {arg} == 1) if isinstance({arg}, int) '\n                                 f'else (False,)']\n@@ -300,7 +300,7 @@ def {self.fn.__name__}({', '.join(self.arg_names)}, grid, num_warps=4, num_stage\n       for i, arg in constants.items():\n         if callable(arg):\n           raise TypeError(f\"Callable constexpr at index {i} is not supported\")\n-        \n+\n       configs = [self._get_config(*args)]\n       device = 0\n       if not self._call_hook(key, signature, device, constants, num_warps, num_stages, extern_libs, configs):"}]