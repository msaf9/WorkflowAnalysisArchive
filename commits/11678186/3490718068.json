[{"filename": "python/tests/test_backend.py", "status": "modified", "additions": 40, "deletions": 3, "changes": 43, "file_content_changes": "@@ -4,12 +4,49 @@\n import pytest\n from .test_core import  numpy_random, to_triton\n \n+class MmaLayout:\n+    def __init__(self, version, warps_per_cta):\n+        self.version = version\n+        self.warps_per_cta = str(warps_per_cta)\n+\n+    def __str__(self):\n+        return f\"#triton_gpu.mma<{{version={self.version}, warpsPerCTA={self.warps_per_cta}}}>\"\n+\n+class BlockedLayout:\n+    def __init__(self, size_per_thread, threads_per_warp, warps_per_cta, order):\n+        self.sz_per_thread = str(size_per_thread)\n+        self.threads_per_warp = str(threads_per_warp)\n+        self.warps_per_cta = str(warps_per_cta)\n+        self.order = str(order)\n+\n+    def __str__(self):\n+        return f\"#triton_gpu.blocked<{{sizePerThread={self.sz_per_thread}, threadsPerWarp={self.threads_per_warp}, warpsPerCTA={self.warps_per_cta}, order={self.order}}}>\"\n+\n+layouts = [\n+  # MmaLayout(version=1, warps_per_cta=[1, 4]),\n+  MmaLayout(version=2, warps_per_cta=[1, 4]),\n+  # MmaLayout(version=1, warps_per_cta=[4, 1]),\n+  MmaLayout(version=2, warps_per_cta=[4, 1]),\n+  BlockedLayout([1, 8], [2, 16], [4, 1], [1, 0]),\n+  BlockedLayout([1, 4], [4, 8], [2, 2], [1, 0]),\n+  BlockedLayout([1, 1], [1, 32], [2, 2], [1, 0]),\n+  BlockedLayout([8, 1], [16, 2], [1, 4], [0, 1]),\n+  BlockedLayout([4, 1], [8, 4], [2, 2], [0, 1]),\n+  BlockedLayout([1, 1], [32, 1], [2, 2], [0, 1])\n+]\n+\n+\n @pytest.mark.parametrize(\"shape\", [(128, 128)])\n @pytest.mark.parametrize(\"dtype\", ['float16'])\n-def test_convert2d(dtype, shape, device='cuda'):\n+@pytest.mark.parametrize(\"src_layout\", layouts)\n+@pytest.mark.parametrize(\"dst_layout\", layouts)\n+def test_convert2d(dtype, shape, src_layout, dst_layout, device='cuda'):\n+    if str(src_layout) == str(dst_layout):\n+        pytest.skip()\n+    if 'mma' in str(src_layout) and 'mma' in str(dst_layout):\n+        pytest.skip()\n+    \n     \n-    src_layout = \"#triton_gpu.blocked<{sizePerThread = [1, 8], threadsPerWarp = [2, 16], warpsPerCTA = [4, 1], order = [1, 0]}>\"\n-    dst_layout = \"#triton_gpu.mma<{version = 2, warpsPerCTA = [1, 4]}>\"\n \n     ir = f\"\"\"\n #src = {src_layout}"}]