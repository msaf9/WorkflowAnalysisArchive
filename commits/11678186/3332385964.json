[{"filename": "python/src/triton.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "file_content_changes": "@@ -441,7 +441,7 @@ void init_triton_ir(py::module &&m) {\n                  loc, self.getF32FloatAttr(v));\n            })\n       .def(\"get_null_value\",\n-           [](mlir::OpBuilder &self, mlir::Type &type) -> mlir::Value {\n+           [](mlir::OpBuilder &self, mlir::Type type) -> mlir::Value {\n              auto loc = self.getUnknownLoc();\n              if (auto floatTy = type.dyn_cast<mlir::FloatType>())\n                return self.create<mlir::arith::ConstantFloatOp>(\n@@ -452,7 +452,7 @@ void init_triton_ir(py::module &&m) {\n                throw std::runtime_error(\"Not implemented\");\n            })\n       .def(\"get_all_ones_value\",\n-           [](mlir::OpBuilder &self, mlir::Type &type) -> mlir::Value {\n+           [](mlir::OpBuilder &self, mlir::Type type) -> mlir::Value {\n              auto loc = self.getUnknownLoc();\n              uint64_t val = 0xFFFFFFFFFFFFFFFF;\n              if (auto floatTy = type.dyn_cast<mlir::FloatType>())"}]