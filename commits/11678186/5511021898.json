[{"filename": "lib/Conversion/TritonGPUToLLVM/ElementwiseOpToLLVM.cpp", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "file_content_changes": "@@ -479,6 +479,8 @@ class ElementwiseOpConversionBase\n     for (auto it = allOperands.begin(), end = allOperands.end(); it != end;) {\n       auto curr = static_cast<const ConcreteT *>(this)->createDestOps(\n           op, adaptor, rewriter, elemTy, MultipleOperandsRange(it, end), loc);\n+      if (curr.size() == 0)\n+        return failure();\n       for (auto v : curr) {\n         if (!static_cast<bool>(v))\n           return failure();\n@@ -632,7 +634,7 @@ struct FpToFpOpConversion\n         v = convertFp32ToFp16(loc, rewriter, v);\n     SmallVector<Value> outVals =\n         cvtFunc(loc, rewriter, inVals[0], inVals[1], inVals[2], inVals[3]);\n-    assert(outVals.size() == operands.size());\n+    assert(outVals.size() == inVals.size());\n     if (isDstFP32)\n       for (Value &v : outVals)\n         v = convertFp16ToFp32(loc, rewriter, v);"}]