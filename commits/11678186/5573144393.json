[{"filename": "python/test/unit/operators/test_matmul.py", "status": "modified", "additions": 56, "deletions": 56, "changes": 112, "file_content_changes": "@@ -28,68 +28,68 @@ def kernel(Y, X, N, BLOCK_SIZE: tl.constexpr):\n @pytest.mark.parametrize(\n     \"BLOCK_M, BLOCK_N, BLOCK_K, SPLIT_K, NWARP, NSTAGE, M, N, K, AT, BT, ADTYPE, BDTYPE\",\n     itertools.chain(\n-        # *[\n-        #     [\n-        #         # 1 warp\n-        #         (16, 16, 16, 1, 1, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n-        #         (32, 16, 16, 1, 1, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n-        #         (16, 32, 16, 1, 1, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n-        #         (16, 16, 32, 1, 1, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n-        #         (32, 16, 32, 1, 1, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n-        #         (16, 32, 32, 1, 1, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n-        #         (16, 16, 64, 1, 1, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n-        #         (64, 16, 64, 1, 1, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n-        #         (16, 64, 64, 1, 1, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n-        #         # 2 warp\n-        #         (64, 32, 64, 1, 2, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n-        #         (32, 64, 64, 1, 2, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n-        #         (64, 32, 16, 1, 2, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n-        #         (32, 64, 16, 1, 2, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n-        #         (128, 32, 32, 1, 2, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n-        #         (32, 128, 32, 1, 2, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n-        #         # 4 warp\n-        #         (128, 64, 16, 1, 4, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n-        #         (64, 128, 16, 1, 4, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n-        #         (128, 32, 32, 1, 4, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n-        #         (32, 128, 32, 1, 4, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n-        #         (128, 32, 64, 1, 4, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n-        #         (32, 128, 64, 1, 4, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n-        #         # 8 warp\n-        #         (128, 256, 16, 1, 8, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n-        #         (256, 128, 16, 1, 8, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n-        #         (256, 128, 32, 1, 8, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n-        #         # split-k\n-        #         (64, 64, 16, 2, 4, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n-        #         (64, 64, 16, 4, 4, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n-        #         (64, 64, 16, 8, 4, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n-        #         # variable input\n-        #         (128, 128, 32, 1, 4, 2, 256, 384, 160, AT, BT, DTYPE, DTYPE),\n-        #         (128, 128, 32, 1, 4, 2, 107, 233, 256, AT, BT, DTYPE, DTYPE),\n-        #         (128, 128, 32, 1, 4, 2, 107, 233, 311, AT, BT, DTYPE, DTYPE),\n-        #         (128, 256, 64, 1, 8, 3, 256, 512, 160, AT, BT, DTYPE, DTYPE),\n-        #     ] for DTYPE in [\"float16\", \"bfloat16\", \"float32\"] for AT in [False, True] for BT in [False, True]\n-        # ],\n-        # # n-stage\n-        # *[\n-        #     [\n-        #         (16, 16, 16, 1, 1, STAGES, 32, 32, 80, AT, BT, DTYPE, DTYPE),\n-        #         (64, 32, 64, 1, 2, STAGES, 128, 64, 128, AT, BT, DTYPE, DTYPE),\n-        #         (128, 64, 16, 1, 4, STAGES, 256, 128, 80, AT, BT, DTYPE, DTYPE),\n-        #         (256, 128, 32, 1, 8, STAGES, 512, 256, 160, AT, BT, DTYPE, DTYPE),\n-        #         (128, 128, 32, 1, 4, STAGES, 256, 256, 160, AT, BT, DTYPE, DTYPE),\n-        #         # split-k\n-        #         (64, 64, 16, 8, 4, STAGES, 128, 128, 768, AT, BT, DTYPE, DTYPE),\n-        #         (64, 64, 16, 8, 4, STAGES, 128, 128, 32, AT, BT, DTYPE, DTYPE),\n-        #     ] for DTYPE in [\"float16\", \"bfloat16\", \"float32\"] for AT in [False, True] for BT in [False, True] for STAGES in [4]\n-        # ],\n+        *[\n+            [\n+                # 1 warp\n+                (16, 16, 16, 1, 1, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n+                (32, 16, 16, 1, 1, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n+                (16, 32, 16, 1, 1, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n+                (16, 16, 32, 1, 1, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n+                (32, 16, 32, 1, 1, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n+                (16, 32, 32, 1, 1, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n+                (16, 16, 64, 1, 1, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n+                (64, 16, 64, 1, 1, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n+                (16, 64, 64, 1, 1, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n+                # 2 warp\n+                (64, 32, 64, 1, 2, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n+                (32, 64, 64, 1, 2, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n+                (64, 32, 16, 1, 2, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n+                (32, 64, 16, 1, 2, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n+                (128, 32, 32, 1, 2, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n+                (32, 128, 32, 1, 2, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n+                # 4 warp\n+                (128, 64, 16, 1, 4, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n+                (64, 128, 16, 1, 4, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n+                (128, 32, 32, 1, 4, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n+                (32, 128, 32, 1, 4, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n+                (128, 32, 64, 1, 4, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n+                (32, 128, 64, 1, 4, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n+                # 8 warp\n+                (128, 256, 16, 1, 8, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n+                (256, 128, 16, 1, 8, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n+                (256, 128, 32, 1, 8, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n+                # split-k\n+                (64, 64, 16, 2, 4, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n+                (64, 64, 16, 4, 4, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n+                (64, 64, 16, 8, 4, 2, None, None, None, AT, BT, DTYPE, DTYPE),\n+                # variable input\n+                (128, 128, 32, 1, 4, 2, 256, 384, 160, AT, BT, DTYPE, DTYPE),\n+                (128, 128, 32, 1, 4, 2, 107, 233, 256, AT, BT, DTYPE, DTYPE),\n+                (128, 128, 32, 1, 4, 2, 107, 233, 311, AT, BT, DTYPE, DTYPE),\n+                (128, 256, 64, 1, 8, 3, 256, 512, 160, AT, BT, DTYPE, DTYPE),\n+            ] for DTYPE in [\"float16\", \"bfloat16\", \"float32\"] for AT in [False, True] for BT in [False, True]\n+        ],\n+        # n-stage\n+        *[\n+            [\n+                (16, 16, 16, 1, 1, STAGES, 32, 32, 80, AT, BT, DTYPE, DTYPE),\n+                (64, 32, 64, 1, 2, STAGES, 128, 64, 128, AT, BT, DTYPE, DTYPE),\n+                (128, 64, 16, 1, 4, STAGES, 256, 128, 80, AT, BT, DTYPE, DTYPE),\n+                (256, 128, 32, 1, 8, STAGES, 512, 256, 160, AT, BT, DTYPE, DTYPE),\n+                (128, 128, 32, 1, 4, STAGES, 256, 256, 160, AT, BT, DTYPE, DTYPE),\n+                # split-k\n+                (64, 64, 16, 8, 4, STAGES, 128, 128, 768, AT, BT, DTYPE, DTYPE),\n+                (64, 64, 16, 8, 4, STAGES, 128, 128, 32, AT, BT, DTYPE, DTYPE),\n+            ] for DTYPE in [\"float16\", \"bfloat16\", \"float32\"] for AT in [False, True] for BT in [False, True] for STAGES in [4]\n+        ],\n         # mixed-precision\n         *[\n             [\n-                (16, 64, 32, 1, 1, 2, None, None, None, AT, BT, ADTYPE, BDTYPE),\n+                (32, 32, 32, 1, 1, 2, None, None, None, AT, BT, ADTYPE, BDTYPE),\n                 (128, 256, 32, 1, 8, 2, None, None, None, AT, BT, ADTYPE, BDTYPE),\n                 (32, 64, 32, 1, 1, 2, 64, 128, 32, AT, BT, ADTYPE, BDTYPE),\n                 (128, 128, 32, 8, 4, 2, 256, 256, 128, AT, BT, ADTYPE, BDTYPE),\n-            ] for ADTYPE, BDTYPE in [(\"float8e5\", \"float8e5\"),\n+            ] for ADTYPE, BDTYPE in [(\"float8e4b15\", \"float8e5\"),\n                                      (\"float8e4\", \"float16\"),\n                                      (\"float16\", \"float8e5\"),\n                                      (\"float16\", \"float32\"),"}]