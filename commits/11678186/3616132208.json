[{"filename": "include/triton/Conversion/TritonGPUToLLVM/PtxAsmFormat.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "file_content_changes": "@@ -220,10 +220,6 @@ struct PTXInstrCommon {\n   PTXInstrExecution &operator()(llvm::ArrayRef<Operand *> oprs,\n                                 bool onlyAttachMLIRArgs = false);\n \n-  void setInstr(StringRef instr) {\n-    this->instr = instr;\n-  }\n-\n protected:\n   // \"Call\" the instruction with operands.\n   // \\param oprs The operands of this instruction.\n@@ -235,7 +231,6 @@ struct PTXInstrCommon {\n \n   PTXBuilder *builder{};\n   llvm::SmallVector<std::string, 4> instrParts;\n-  std::string instr;\n \n   friend struct PTXInstrExecution;\n };"}, {"filename": "lib/Conversion/TritonGPUToLLVM/PtxAsmFormat.cpp", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "file_content_changes": "@@ -155,7 +155,6 @@ std::string PTXInstrExecution::dump() const {\n   llvm::raw_string_ostream os(osStr);\n \n   std::string instrRepr = strJoin(instr->instrParts, \".\");\n-\n   if (onlyAttachMLIRArgs)\n     return instrRepr;\n \n@@ -173,8 +172,6 @@ std::string PTXInstrExecution::dump() const {\n \n   std::string argsRepr = strJoin(argReprs, \", \");\n \n-  if (!instr->instr.empty()) os << instr->instr << \";\";\n-  else\n   os << instrRepr << \" \" << argsRepr << \";\";\n   os.flush();\n   return osStr;"}]