[{"filename": "test/Analysis/test-alignment.mlir", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "file_content_changes": "@@ -86,10 +86,16 @@ func @div() {\n   %5 = arith.divsi %0, %4 : tensor<128xi32>\n   // CHECK-NEXT: Contiguity: [1] ; Divisibility: [1] ; Constancy: [1] ; ConstantValue: [None]\n   %6 = arith.divsi %4, %0 : tensor<128xi32>\n+  // CHECK-NEXT: Contiguity: [1] ; Divisibility: [64] ; Constancy: [128] ; ConstantValue: [64]\n+  %7 = arith.divsi %4, %1 : tensor<128xi32>\n   // CHECK-NEXT: Contiguity: [1] ; Divisibility: [2] ; Constancy: [128] ; ConstantValue: [66]\n-  %7 = arith.constant dense<66> : tensor<128xi32>\n+  %8 = arith.constant dense<66> : tensor<128xi32>\n   // CHECK-NEXT: Contiguity: [1] ; Divisibility: [1] ; Constancy: [2] ; ConstantValue: [None]\n-  %8 = arith.divui %0, %7 : tensor<128xi32>\n+  %9 = arith.divui %0, %8 : tensor<128xi32>\n+  // CHECK-NEXT: Contiguity: [128] ; Divisibility: [8192] ; Constancy: [1] ; ConstantValue: [None]\n+  %10 = tt.make_range {end = 8320 : i32, start = 8192 : i32} : tensor<128xi32>\n+  // CHECK-NEXT: Contiguity: [1] ; Divisibility: [128] ; Constancy: [64] ; ConstantValue: [None]\n+  %11 = arith.divsi %10, %4 : tensor<128xi32>\n   return \n }\n "}]