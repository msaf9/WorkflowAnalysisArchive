[{"filename": "lib/Conversion/TritonGPUToLLVM/TritonGPUToLLVMPass.cpp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "file_content_changes": "@@ -533,7 +533,6 @@ class ConvertTritonGPUToLLVM\n       auto vecBitWidth = resElemTy.getIntOrFloatBitWidth() * minVec;\n       auto bitWidth = std::min<unsigned>(maxBitWidth, vecBitWidth);\n       auto byteWidth = bitWidth / 8;\n-      llvm::errs() << \"byteWidth: \" << byteWidth << \"\\n\";\n \n       // If the load byte width is not eligible or the current compute\n       // capability does not support async copy, then we do decompose"}]