[{"filename": "python/triton/language/core.py", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "file_content_changes": "@@ -813,9 +813,8 @@ def view(input, shape, _builder=None):\n \n @builtin\n def reshape(input, shape, _builder=None):\n-    # TODO: should be more than just a view\n     shape = _shape_check_impl(shape)\n-    return semantic.view(input, shape, _builder)\n+    return semantic.reshape(input, shape, _builder)\n \n # -----------------------\n # Linear Algebra"}, {"filename": "python/triton/language/semantic.py", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "file_content_changes": "@@ -513,6 +513,12 @@ def view(input: tl.tensor,\n     ret_ty = tl.block_type(input.type.scalar, dst_shape)\n     return tl.tensor(builder.create_view(input.handle, dst_shape), ret_ty)\n \n+def reshape(input: tl.tensor,\n+            dst_shape: List[int],\n+            builder: ir.builder) -> tl.tensor:\n+    raise ValueError(\"`reshape` is not supported yet. Please use `view` instead if applicable. \"\n+                     \"Note that view may reorder elements in an implementation- and context- dependent way.\")\n+\n \n def expand_dims(input: tl.tensor, axis: int, builder: ir.builder) -> tl.tensor:\n     dst_shape = list(input.type.shape)"}]