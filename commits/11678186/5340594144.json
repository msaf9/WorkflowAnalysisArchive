[{"filename": "python/triton/runtime/autotuner.py", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "file_content_changes": "@@ -70,10 +70,11 @@ def _bench(self, *args, config, **meta):\n             )\n         # augment meta-parameters with tunable ones\n         current = dict(meta, **config.kwargs)\n+        full_nargs = {**self.nargs, **current}\n \n         def kernel_call():\n             if config.pre_hook:\n-                config.pre_hook(self.nargs)\n+                config.pre_hook(full_nargs)\n             self.hook(args)\n             self.fn.run(*args, num_warps=config.num_warps, num_stages=config.num_stages, **current)\n         try:\n@@ -106,7 +107,8 @@ def run(self, *args, **kwargs):\n             config = self.configs[0]\n         self.best_config = config\n         if config.pre_hook is not None:\n-            config.pre_hook(self.nargs)\n+            full_nargs = {**self.nargs, **kwargs, **self.best_config.kwargs}\n+            config.pre_hook(full_nargs)\n         return self.fn.run(*args, num_warps=config.num_warps, num_stages=config.num_stages, **kwargs, **config.kwargs)\n \n     def prune_configs(self, kwargs):"}]