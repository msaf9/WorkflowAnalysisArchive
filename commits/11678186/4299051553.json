[{"filename": "bin/triton-opt.cpp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "file_content_changes": "@@ -29,6 +29,7 @@ int main(int argc, char **argv) {\n   mlir::test::registerTestMembarPass();\n   mlir::triton::registerConvertTritonToTritonGPUPass();\n   mlir::triton::registerConvertTritonGPUToLLVMPass();\n+  mlir::triton::registerConvertTritonFuncToLLVMPass();\n \n   // TODO: register Triton & TritonGPU passes\n   mlir::DialectRegistry registry;"}, {"filename": "test/Conversion/tritongpu_to_llvm.mlir", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "file_content_changes": "@@ -1,7 +1,7 @@\n-// RUN: triton-opt %s -split-input-file --convert-triton-gpu-to-llvm | FileCheck %s\n+// RUN: triton-opt %s -split-input-file --convert-scf-to-cf --convert-triton-func-to-llvm --convert-triton-gpu-to-llvm | FileCheck %s\n \n module attributes {\"triton_gpu.num-warps\" = 4 : i32} {\n-  // CHECK: llvm.func @test_empty_kernel(%arg0: i32, %arg1: !llvm.ptr<f16, 1>)\n+  // CHECK: llvm.func @test_empty_kernel(%arg0: i64, %arg1: !llvm.ptr<f16, 1>)\n   // Here the 128 comes from the 4 in module attribute multiples 32\n   // CHECK:  attributes {nvvm.kernel = 1 : ui1, nvvm.maxntid = [128 : i32]} {{.*}}\n   func.func @test_empty_kernel(%lb : index, %A : !tt.ptr<f16>) {\n@@ -412,9 +412,9 @@ module attributes {\"triton_gpu.num-warps\" = 4 : i32} {\n     // CHECK-NEXT: llvm.mul\n     // CHECK-NEXT: llvm.add\n     // CHECK-NEXT: llvm.getelementptr\n-    %index = arith.constant 1 : index\n+    %index = arith.constant 1 : i32\n     %0 = triton_gpu.alloc_tensor : tensor<128x16x32xf32, #shared0>\n-    %1 = tensor.extract_slice %0[%index, 0, 0][1, 16, 32][1, 1, 1] : tensor<128x16x32xf32, #shared0> to tensor<16x32xf32, #shared0>\n+    %1 = triton_gpu.extract_slice %0[%index, 0, 0][1, 16, 32][1, 1, 1] : tensor<128x16x32xf32, #shared0> to tensor<16x32xf32, #shared0>\n     return\n   }\n }"}]