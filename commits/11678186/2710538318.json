[{"filename": "python/test/unit/language/test_core.py", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "file_content_changes": "@@ -378,12 +378,12 @@ def test_where(dtype):\n     check_type_supported(dtype)\n \n     @triton.jit\n-    def where_kernel(decide_ptr, a_ptr, b_ptr, output_ptr, n_elements,\n+    def where_kernel(cond_ptr, a_ptr, b_ptr, output_ptr, n_elements,\n                      BLOCK_SIZE: tl.constexpr,\n                      TEST_POINTERS: tl.constexpr):\n         offsets = tl.program_id(axis=0) * BLOCK_SIZE + tl.arange(0, BLOCK_SIZE)\n         mask = offsets < n_elements\n-        decide = tl.load(decide_ptr + offsets, mask=mask)\n+        decide = tl.load(cond_ptr + offsets, mask=mask)\n         if TEST_POINTERS:\n             a = tl.load(a_ptr + offsets, mask=mask).to(tl.pi32_t)\n             b = tl.load(b_ptr + offsets, mask=mask).to(tl.pi32_t)\n@@ -395,18 +395,18 @@ def where_kernel(decide_ptr, a_ptr, b_ptr, output_ptr, n_elements,\n \n     SIZE = 1_000\n     rs = RandomState(17)\n-    decide = numpy_random(SIZE, 'bool', rs)\n+    cond = numpy_random(SIZE, 'bool', rs)\n     x = numpy_random(SIZE, dtype_str=dtype, rs=rs)\n     y = numpy_random(SIZE, dtype_str=dtype, rs=rs)\n-    z = np.where(decide, x, y)\n+    z = np.where(cond, x, y)\n \n-    decide_tri = to_triton(decide, device='cuda')\n+    cond_tri = to_triton(cond, device='cuda')\n     x_tri = to_triton(x, device='cuda', dst_type=dtype)\n     y_tri = to_triton(y, device='cuda', dst_type=dtype)\n     z_tri = to_triton(np.empty(SIZE, dtype=z.dtype), device='cuda', dst_type=dtype)\n \n     grid = lambda meta: (triton.cdiv(SIZE, meta['BLOCK_SIZE']),)\n-    where_kernel[grid](decide_tri, x_tri, y_tri, z_tri, SIZE, BLOCK_SIZE=1024, TEST_POINTERS=select_ptrs)\n+    where_kernel[grid](cond_tri, x_tri, y_tri, z_tri, SIZE, BLOCK_SIZE=1024, TEST_POINTERS=select_ptrs)\n     assert (z == to_numpy(z_tri)).all()\n \n "}]