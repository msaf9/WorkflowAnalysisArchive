[{"filename": "python/src/triton.cc", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "file_content_changes": "@@ -1182,10 +1182,6 @@ void init_triton_ir(py::module &&m) {\n            [](mlir::PassManager &self) {\n              self.addPass(mlir::createTritonGPUCombineOpsPass());\n            })\n-      .def(\"add_triton_gpu_verifier_pass\",\n-           [](mlir::PassManager &self) {\n-             self.addPass(mlir::createTritonGPUVerifier());\n-           })\n       .def(\"add_triton_gpu_to_llvm\",\n            [](mlir::PassManager &self) {\n              self.addPass(mlir::triton::createConvertTritonGPUToLLVMPass());"}, {"filename": "python/triton/compiler.py", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "file_content_changes": "@@ -861,7 +861,6 @@ def optimize_tritongpu_ir(mod, num_stages):\n     pm.add_cse_pass()\n     pm.add_coalesce_pass()\n     pm.add_triton_gpu_combine_pass()\n-    pm.add_triton_gpu_verifier_pass()\n     pm.run(mod)\n     return mod\n "}, {"filename": "test/TritonGPU/coalesce.mlir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -1,4 +1,4 @@\n-// RUN: triton-opt %s -split-input-file -tritongpu-coalesce -canonicalize -tritongpu-verifier | FileCheck %s\n+// RUN: triton-opt %s -split-input-file -tritongpu-coalesce -canonicalize | FileCheck %s\n \n #blocked0 = #triton_gpu.blocked<{sizePerThread = [1], threadsPerWarp = [32], warpsPerCTA = [4], order = [0]}>\n #blocked1 = #triton_gpu.blocked<{sizePerThread = [1, 1], threadsPerWarp = [32, 1], warpsPerCTA = [4, 1], order = [0, 1]}>"}, {"filename": "test/TritonGPU/loop-pipeline.mlir", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -1,4 +1,4 @@\n-// RUN: triton-opt %s -split-input-file -tritongpu-pipeline=num-stages=3 -canonicalize -tritongpu-verifier | FileCheck %s\n+// RUN: triton-opt %s -split-input-file -tritongpu-pipeline=num-stages=3 -canonicalize | FileCheck %s\n \n // 4 warps\n // matmul: 128x32 @ 32x128 -> 128x128"}]