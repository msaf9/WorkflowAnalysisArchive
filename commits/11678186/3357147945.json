[{"filename": "python/triton/compiler.py", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "file_content_changes": "@@ -400,14 +400,14 @@ def visit_If(self, node):\n                     then_block.merge_block_before(if_op.get_then_block())\n                     self.builder.set_insertion_point_to_end(if_op.get_then_block())\n                     if len(names) > 0:\n-                      self.builder.create_yield_op([then_defs[n].handle for n in names])\n+                        self.builder.create_yield_op([then_defs[n].handle for n in names])\n                     if not node.orelse:\n                         else_block = if_op.get_else_block()\n                     else:\n                         else_block.merge_block_before(if_op.get_else_block())\n                     self.builder.set_insertion_point_to_end(if_op.get_else_block())\n                     if len(names) > 0:\n-                      self.builder.create_yield_op([else_defs[n].handle for n in names])\n+                        self.builder.create_yield_op([else_defs[n].handle for n in names])\n                 else:  # no else block\n                     if_op = self.builder.create_if_op([ty.to_ir(self.builder) for ty in ret_types], cond.handle, False)\n                     then_block.merge_block_before(if_op.get_then_block())\n@@ -529,7 +529,7 @@ def visit_While(self, node):\n             loop_block.merge_block_before(after_block)\n             self.builder.set_insertion_point_to_end(after_block)\n             if len(yields) > 0:\n-              self.builder.create_yield_op([y.handle for y in yields])\n+                self.builder.create_yield_op([y.handle for y in yields])\n \n         # update global uses in while_op\n         for i, name in enumerate(names):"}]