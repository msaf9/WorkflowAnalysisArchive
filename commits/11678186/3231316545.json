[{"filename": "lib/Conversion/TritonToTritonGPU/TritonToTritonGPU.cpp", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "file_content_changes": "@@ -193,7 +193,7 @@ struct TritonExpandDimsPattern\n     // construct new op\n     auto newSrc = rewriter.create<triton::gpu::ConvertLayoutOp>(\n         op.getLoc(), newArgType, adaptor.src());\n-    rewriter.replaceOpWithNewOp<triton::ExpandDimsOp>(op, retType, newSrc,\n+    rewriter.replaceOpWithNewOp<triton::ExpandDimsOp>(op, newSrc,\n                                                       adaptor.axis());\n     return success();\n   }\n@@ -317,9 +317,8 @@ struct TritonReducePattern : public OpConversionPattern<triton::ReduceOp> {\n   LogicalResult\n   matchAndRewrite(triton::ReduceOp op, OpAdaptor adaptor,\n                   ConversionPatternRewriter &rewriter) const override {\n-    Type retType = this->getTypeConverter()->convertType(op.getType());\n     auto newOp = rewriter.replaceOpWithNewOp<triton::ReduceOp>(\n-        op, retType, adaptor.redOp(), adaptor.operand(), adaptor.axis());\n+        op, adaptor.redOp(), adaptor.operand(), adaptor.axis());\n     return success();\n   }\n };"}]