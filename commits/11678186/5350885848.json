[{"filename": "lib/Conversion/TritonGPUToLLVM/ConvertLayoutOpToLLVM/SharedToDotOperandMMAv2.cpp", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "file_content_changes": "@@ -559,11 +559,9 @@ Value loadArg(ConversionPatternRewriter &rewriter, Location loc, Value tensor,\n \n   SmallVector<Value> multiDimWarpId =\n       delinearize(rewriter, loc, warp, warpsPerCTA, order);\n-  if (order[0] == 1) {\n-    multiDimWarpId[0] = urem(multiDimWarpId[0], i32_val(warpsPerCTA[0]));\n-  } else {\n-    multiDimWarpId[1] = urem(multiDimWarpId[1], i32_val(warpsPerCTA[1]));\n-  }\n+  unsigned lastAxis = order[order.size() - 1];\n+  multiDimWarpId[lastAxis] =\n+      urem(multiDimWarpId[lastAxis], i32_val(warpsPerCTA[lastAxis]));\n   Value warpM = urem(multiDimWarpId[0], i32_val(shape[0] / 16));\n   Value warpN = urem(multiDimWarpId[1], i32_val(shape[1] / 8));\n "}, {"filename": "lib/Conversion/TritonGPUToLLVM/TritonGPUToLLVMBase.h", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "file_content_changes": "@@ -879,11 +879,9 @@ class ConvertTritonGPUOpToLLVMPatternBase {\n \n     SmallVector<Value> multiDimWarpId =\n         delinearize(rewriter, loc, warpId, warpsPerCTA, order);\n-    if (order[0] == 1) {\n-      multiDimWarpId[0] = urem(multiDimWarpId[0], i32_val(warpsPerCTA[0]));\n-    } else {\n-      multiDimWarpId[1] = urem(multiDimWarpId[1], i32_val(warpsPerCTA[1]));\n-    }\n+    unsigned lastAxis = order[order.size() - 1];\n+    multiDimWarpId[lastAxis] =\n+        urem(multiDimWarpId[lastAxis], i32_val(warpsPerCTA[lastAxis]));\n     multiDimWarpId[0] = urem(multiDimWarpId[0], i32_val(shape[0] / 16));\n     multiDimWarpId[1] = urem(multiDimWarpId[1], i32_val(shape[1] / 8));\n     Value offWarp0 = mul(multiDimWarpId[0], i32_val(16));"}]