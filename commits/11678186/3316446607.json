[{"filename": "python/triton/language/core.py", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "file_content_changes": "@@ -132,6 +132,9 @@ def is_floating(self):\n     def is_int_signed(self):\n         return self.name in dtype.SINT_TYPES\n \n+    def is_int_unsigned(self):\n+        return self.name in dtype.UINT_TYPES\n+\n     def is_int(self):\n         return self.name in dtype.SINT_TYPES + dtype.UINT_TYPES\n "}, {"filename": "python/triton/language/semantic.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -679,7 +679,7 @@ def cast(input: tl.tensor,\n     if src_sca_ty.is_ptr() and dst_sca_ty.is_int():\n         bitwidth = dst_sca_ty.int_bitwidth\n         if bitwidth == 64:\n-            return tl.tensor(builder.create_ptr_to_int(input.handle, dst_ty.to_ir(builder)),\n+            return tl.tensor(builder.create_cast(ir.PtrToInt, input.handle, dst_ty.to_ir(builder)),\n                              dst_ty)\n         if bitwidth == 1:\n             return not_equal(cast(input, tl.int64, builder),"}]