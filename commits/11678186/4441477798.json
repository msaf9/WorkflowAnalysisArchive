[{"filename": ".github/workflows/integration-tests.yml", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "file_content_changes": "@@ -22,7 +22,7 @@ jobs:\n         id: set-matrix\n         run: |\n           if [ x\"${{ github.repository }}\" == x\"openai/triton\" ]; then\n-            echo '::set-output name=matrix::[[\"self-hosted\", \"A100\", \"cuda\"], [\"self-hosted\", \"V100\", \"cuda\"], [\"self-hosted\", \"gfx908\", \"rocm\"], \"macos-10.15\"]'\n+            echo '::set-output name=matrix::[[\"self-hosted\", \"A100\"], [\"self-hosted\", \"V100\"], [\"self-hosted\", \"gfx908\"], \"macos-10.15\"]'\n           else\n             echo '::set-output name=matrix::[\"ubuntu-latest\", \"macos-10.15\"]'\n           fi\n@@ -40,6 +40,11 @@ jobs:\n       - name: Checkout\n         uses: actions/checkout@v2\n \n+      -name: Set ENV\n+        if: ${{(matrix.runner[0] == 'self-hosted') && (matrix.runner[1] == 'gfx908'}}\n+        env:\n+          BACKEND: \"ROCM\"\n+\n       - name: Clear cache\n         run: |\n           rm -rf ~/.triton/\n@@ -74,21 +79,21 @@ jobs:\n           flake8 --config ./python/setup.cfg ./python || ( echo '::error::Flake8 failed; see logs for errors.' ; exit 1 )\n \n       - name: Install Triton\n-        if: ${{matrix.runner[2] != 'rocm'}}\n+        if: ${{ env.BACKEND != 'ROCM'}}\n         run: |\n           cd python\n           TRITON_USE_ASSERT_ENABLED_LLVM=TRUE pip3 install -e '.[tests]'\n \n       - name: Install Triton on ROCM\n-        if: ${{matrix.runner[2] == 'rocm'}}\n+        if: ${{ env.BACKEND == 'ROCM'}}\n         run: |\n           cd python\n           pip3 uninstall --yes torch torchvision torchaudio\n           pip3 install --no-cache-dir --force-reinstall torch==1.13.1 --extra-index-url https://download.pytorch.org/whl/rocm5.2\n           TRITON_USE_ASSERT_ENABLED_LLVM=TRUE pip3 install -e '.[tests]'\n \n       - name: Run lit tests\n-        if: ${{matrix.runner[2] != 'rocm'}}\n+        if: ${{ env.BACKEND != 'ROCM'}}\n         run: |\n           cd python\n           LIT_TEST_DIR=\"build/$(ls build)/test\"\n@@ -98,19 +103,19 @@ jobs:\n           lit -v \"$LIT_TEST_DIR\"\n \n       - name: Run python tests on CUDA\n-        if: ${{matrix.runner[2] == 'cuda'}}\n+        if: ${{ env.BACKEND == 'CUDA'}}\n         run: |\n           cd python/test/unit/\n           pytest\n       \n       - name: Run python tests on ROCM\n-        if: ${{matrix.runner[2] == 'rocm'}}\n+        if: ${{ env.BACKEND == 'ROCM'}}\n         run: |\n           cd python/test/unit/language/\n           pytest --capture=tee-sys -rfs --verbose \"test_core.py::test_empty_kernel\"\n \n       - name: Run CXX unittests\n-        if: ${{matrix.runner[2] != 'rocm'}}\n+        if: ${{ env.BACKEND != 'ROCM'}}\n         run: |\n           cd python/\n           cd \"build/$(ls build)\""}]