[{"filename": "python/test/unit/operators/test_matmul.py", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "file_content_changes": "@@ -38,7 +38,6 @@\n                 (32, 128, 64, 1, 4, 2, None, None, None, AT, BT, DTYPE),\n                 # 8 warp\n                 (128, 256, 16, 1, 8, 2, None, None, None, AT, BT, DTYPE),\n-                (128, 256, 64, 1, 8, 3, 8192, 8192, 8192, AT, BT, DTYPE),\n                 (256, 128, 16, 1, 8, 2, None, None, None, AT, BT, DTYPE),\n                 (256, 128, 32, 1, 8, 2, None, None, None, AT, BT, DTYPE),\n                 # split-k\n@@ -60,6 +59,7 @@\n                 (128, 64, 16, 1, 4, STAGES, 1024, 1024, 1024, AT, BT, DTYPE),\n                 (256, 128, 32, 1, 8, STAGES, 1024, 1024, 1024, AT, BT, DTYPE),\n                 (128, 128, 32, 1, 4, STAGES, 384, 128, 640, AT, BT, DTYPE),\n+                (128, 256, 64, 1, 8, STAGES, 8192, 8192, 8192, AT, BT, DTYPE),\n                 # split-k\n                 (64, 64, 16, 8, 4, STAGES, 1024, 1024, 1024, AT, BT, DTYPE),\n                 (64, 64, 16, 8, 4, STAGES, 1024, 1024, 32, AT, BT, DTYPE),\n@@ -98,6 +98,9 @@ def test_op(BLOCK_M, BLOCK_N, BLOCK_K, SPLIT_K, NWARP, NSTAGE, M, N, K, AT, BT,\n     th_c = torch.matmul(a, b)\n     try:\n         tt_c = triton.ops.matmul(a, b)\n-        torch.testing.assert_allclose(th_c, tt_c, atol=1e-2, rtol=0)\n+        atol, rtol = 1e-2, 0\n+        if DTYPE == torch.bfloat16:\n+            atol, rtol = 3.5e-2, 0\n+        torch.testing.assert_allclose(th_c, tt_c, atol=atol, rtol=rtol)\n     except triton.OutOfResources as e:\n         pytest.skip(str(e))"}]