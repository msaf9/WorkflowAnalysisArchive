[{"filename": "python/src/triton.cc", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "file_content_changes": "@@ -499,20 +499,14 @@ void init_triton_ir(py::module &&m) {\n       .def(\"get_fp16\",\n            [](mlir::OpBuilder &self, float v) -> mlir::Value {\n              auto loc = self.getUnknownLoc();\n-             auto type = self.getF16Type();\n-             return self.create<mlir::arith::ConstantFloatOp>(\n-                 loc,\n-                 mlir::APFloat(type.getFloatSemantics(), std::to_string(v)),\n-                 type);\n+             return self.create<mlir::arith::ConstantOp>(\n+                 loc, self.getF16FloatAttr(v));\n            })\n       .def(\"get_fp32\",\n            [](mlir::OpBuilder &self, float v) -> mlir::Value {\n              auto loc = self.getUnknownLoc();\n-             auto type = self.getF32Type();\n-             return self.create<mlir::arith::ConstantFloatOp>(\n-                 loc,\n-                 mlir::APFloat(type.getFloatSemantics(), std::to_string(v)),\n-                 type);\n+             return self.create<mlir::arith::ConstantOp>(\n+                 loc, self.getF32FloatAttr(v));\n            })\n       .def(\"get_null_value\",\n            [](mlir::OpBuilder &self, mlir::Type type) -> mlir::Value {"}]