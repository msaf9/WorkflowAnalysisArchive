[{"filename": "lib/Conversion/TritonGPUToLLVM/ElementwiseOpToLLVM.cpp", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "file_content_changes": "@@ -706,7 +706,6 @@ class ElementwiseOpConversionBase\n   LogicalResult\n   matchAndRewrite(SourceOp op, OpAdaptor adaptor,\n                   ConversionPatternRewriter &rewriter) const override {\n-    auto argTy = op->getOperand(0).getType();\n     auto resultTy = op.getType();\n     Location loc = op->getLoc();\n     // element type\n@@ -716,6 +715,7 @@ class ElementwiseOpConversionBase\n     //\n     SmallVector<SmallVector<Value>> allOperands;\n     for (auto operand : adaptor.getOperands()) {\n+      auto argTy = op->getOperand(0).getType();\n       auto sub_operands = this->getTypeConverter()->unpackLLElements(\n           loc, operand, rewriter, argTy);\n       sub_operands = unpackI32(sub_operands, argTy, rewriter, loc,\n@@ -724,6 +724,8 @@ class ElementwiseOpConversionBase\n       for (auto v : llvm::enumerate(sub_operands))\n         allOperands[v.index()].push_back(v.value());\n     }\n+    if (allOperands.size() == 0)\n+      allOperands.push_back({});\n     for (const SmallVector<Value> &operands : allOperands) {\n       Value curr =\n           ((ConcreteT *)(this))\n@@ -732,7 +734,10 @@ class ElementwiseOpConversionBase\n         return failure();\n       resultVals.push_back(curr);\n     }\n-    resultVals = reorderValues(resultVals, argTy, resultTy);\n+    if (op->getNumOperands() > 0) {\n+      auto argTy = op->getOperand(0).getType();\n+      resultVals = reorderValues(resultVals, argTy, resultTy);\n+    }\n     resultVals =\n         packI32(resultVals, resultTy, rewriter, loc, this->getTypeConverter());\n     Value view = this->getTypeConverter()->packLLElements(loc, resultVals,"}]