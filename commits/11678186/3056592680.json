[{"filename": "include/triton/Conversion/TritonGPUToLLVM/PtxAsmFormat.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -123,7 +123,7 @@ struct PTXBuilder {\n \n   Operand *newAddrOperand(mlir::Value addr, StringRef constraint, int off = 0);\n \n-  llvm::SmallVector<Operand *> getAllArgs() const;\n+  llvm::SmallVector<Operand *, 4> getAllArgs() const;\n \n   llvm::SmallVector<Value, 4> getAllMLIRArgs() const;\n "}, {"filename": "include/triton/driver/dispatch.h", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "file_content_changes": "@@ -48,8 +48,15 @@ class dispatch {\n     initializer();\n     if (cache == nullptr) {\n       cache = dlsym(lib_h, name);\n-      if (cache == 0)\n+      if (cache == 0) {\n+#ifdef __EXCEPTIONS\n         throw std::runtime_error(\"dlsym unable to load function\");\n+#else\n+        std::cerr << \"Triton: dlsym unable to load function `\" << name << \"`\"\n+                  << std::endl;\n+        std::abort();\n+#endif\n+      }\n     }\n     FunPtrT fptr;\n     *reinterpret_cast<void **>(&fptr) = cache;"}, {"filename": "lib/Conversion/TritonGPUToLLVM/PtxAsmFormat.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -66,7 +66,7 @@ llvm::SmallVector<Value, 4> PTXBuilder::getAllMLIRArgs() const {\n   return res;\n }\n \n-SmallVector<PTXBuilder::Operand *> PTXBuilder::getAllArgs() const {\n+SmallVector<PTXBuilder::Operand *, 4> PTXBuilder::getAllArgs() const {\n   llvm::SmallVector<Operand *, 4> res;\n   for (auto &x : argArchive)\n     if (!x->isList())"}]