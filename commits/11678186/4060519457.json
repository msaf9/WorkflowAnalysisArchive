[{"filename": "include/triton/Dialect/Triton/IR/CMakeLists.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -8,7 +8,7 @@ set(LLVM_TARGET_DEFINITIONS TritonDialect.td)\n mlir_tablegen(Dialect.h.inc -gen-dialect-decls)\n mlir_tablegen(Dialect.cpp.inc -gen-dialect-defs)\n \n-set(LLVM_TARGET_DEFINITIONS TritonOps.td)\n+set(LLVM_TARGET_DEFINITIONS TritonTypes.td)\n mlir_tablegen(Types.h.inc -gen-typedef-decls)\n mlir_tablegen(Types.cpp.inc -gen-typedef-defs)\n "}, {"filename": "lib/Conversion/TritonGPUToLLVM/TritonGPUToLLVM.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -331,7 +331,7 @@ struct MakeRangeOpConversion\n     // TODO: slice layout has more elements than expected.\n     // Unexpected behavior for make range, but generally OK when followed by\n     // expand dims + broadcast. very weird behavior otherwise potentially.\n-    for (const auto multiDim : llvm::enumerate(idxs)) {\n+    for (const auto &multiDim : llvm::enumerate(idxs)) {\n       assert(multiDim.value().size() == 1);\n       retVals[multiDim.index()] = add(multiDim.value()[0], start);\n     }"}]