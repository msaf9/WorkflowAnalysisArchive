[{"filename": "CMakeLists.txt", "status": "modified", "additions": 27, "deletions": 28, "changes": 55, "file_content_changes": "@@ -144,34 +144,6 @@ if(NOT MLIR_DIR)\n   set(MLIR_DIR ${LLVM_LIBRARY_DIR}/cmake/mlir)\n endif()\n \n-# Python module\n-if(TRITON_BUILD_PYTHON_MODULE)\n-  message(STATUS \"Adding Python module\")\n-  set(PYTHON_SRC_PATH ${CMAKE_CURRENT_SOURCE_DIR}/python/src)\n-  set(PYTHON_SRC ${PYTHON_SRC_PATH}/main.cc ${PYTHON_SRC_PATH}/triton.cc)\n-  include_directories(\".\" ${PYTHON_SRC_PATH})\n-\n-  if(PYTHON_INCLUDE_DIRS)\n-    include_directories(${PYTHON_INCLUDE_DIRS})\n-  else()\n-    find_package(Python3 REQUIRED COMPONENTS Development Interpreter)\n-    include_directories(${Python3_INCLUDE_DIRS})\n-    link_directories(${Python3_LIBRARY_DIRS})\n-    link_libraries(${Python3_LIBRARIES})\n-    add_link_options(${Python3_LINK_OPTIONS})\n-  endif()\n-endif()\n-\n-# # Triton\n-# file(GLOB_RECURSE LIBTRITON_SRC lib/*.cc)\n-# if (WIN32 AND TRITON_BUILD_PYTHON_MODULE)\n-# Python3_add_library(triton SHARED ${LIBTRITON_SRC} ${PYTHON_SRC})\n-# set_target_properties(triton PROPERTIES SUFFIX \".pyd\")\n-# set_target_properties(triton PROPERTIES PREFIX \"lib\")\n-# else()\n-# add_library(triton SHARED ${LIBTRITON_SRC} ${PYTHON_SRC})\n-# endif()\n-\n # MLIR\n find_package(MLIR REQUIRED CONFIG PATHS ${MLIR_DIR})\n \n@@ -245,8 +217,35 @@ if(TRITON_BUILD_PYTHON_MODULE)\n   endif()\n \n   target_link_options(triton PRIVATE ${LLVM_LDFLAGS})\n+\n+  message(STATUS \"Adding Python module\")\n+  set(PYTHON_SRC_PATH ${CMAKE_CURRENT_SOURCE_DIR}/python/src)\n+  set(PYTHON_SRC ${PYTHON_SRC_PATH}/main.cc ${PYTHON_SRC_PATH}/triton.cc)\n+  include_directories(\".\" ${PYTHON_SRC_PATH})\n+\n+  if(PYTHON_VERSION)\n+    find_package(Python3\n+      ${PYTHON_VERSION} EXACT\n+      REQUIRED COMPONENTS Development Interpreter)\n+  else()\n+    find_package(Python3 REQUIRED COMPONENTS Development Interpreter)\n+  endif()\n+\n+  target_link_libraries(triton ${Python3_LIBRARIES})\n+  target_link_options(triton PRIVATE ${Python3_LINK_OPTIONS})\n+  target_include_directories(triton PRIVATE ${Python3_INCLUDE_DIRS})\n endif()\n \n+# # Triton\n+# file(GLOB_RECURSE LIBTRITON_SRC lib/*.cc)\n+# if (WIN32 AND TRITON_BUILD_PYTHON_MODULE)\n+# Python3_add_library(triton SHARED ${LIBTRITON_SRC} ${PYTHON_SRC})\n+# set_target_properties(triton PROPERTIES SUFFIX \".pyd\")\n+# set_target_properties(triton PROPERTIES PREFIX \"lib\")\n+# else()\n+# add_library(triton SHARED ${LIBTRITON_SRC} ${PYTHON_SRC})\n+# endif()\n+\n if(UNIX AND NOT APPLE)\n   set(CMAKE_SHARED_LINKER_FLAGS \"${CMAKE_SHARED_LINKER_FLAGS} -Wl,--exclude-libs,ALL\")\n endif()"}, {"filename": "python/setup.py", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "file_content_changes": "@@ -192,15 +192,16 @@ def build_extension(self, ext):\n         if not os.path.exists(self.build_temp):\n             os.makedirs(self.build_temp)\n         # python directories\n-        python_include_dir = sysconfig.get_path(\"platinclude\")\n+        prefix = sysconfig.get_config_var(\"prefix\")\n+        python_version = sysconfig.get_python_version()\n         cmake_args = [\n             \"-DLLVM_ENABLE_WERROR=ON\",\n             \"-DCMAKE_LIBRARY_OUTPUT_DIRECTORY=\" + extdir,\n             \"-DTRITON_BUILD_TUTORIALS=OFF\",\n             \"-DTRITON_BUILD_PYTHON_MODULE=ON\",\n-            \"-DPython3_EXECUTABLE:FILEPATH=\" + sys.executable,\n+            \"-DPython3_ROOT_DIR=\" + prefix,\n+            \"-DPYTHON_VERSION=\" + python_version,\n             \"-DCMAKE_VERBOSE_MAKEFILE:BOOL=ON\",\n-            \"-DPYTHON_INCLUDE_DIRS=\" + python_include_dir,\n         ]\n         if lit_dir is not None:\n             cmake_args.append(\"-DLLVM_EXTERNAL_LIT=\" + lit_dir)"}]