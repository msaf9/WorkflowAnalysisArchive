[{"filename": "python/triton/language/math.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "file_content_changes": "@@ -4,10 +4,12 @@\n from ..runtime import driver\n from . import core\n \n+\n @functools.lru_cache()\n def libdevice_path():\n     return os.getenv(\"TRITON_LIBDEVICE_PATH\", driver().libdevice_path)\n \n+\n @core.extern\n def clz(arg0, _builder=None):\n     return core.extern_elementwise(\"libdevice\", libdevice_path(), [arg0, ],"}, {"filename": "python/triton/runtime/driver.py", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "file_content_changes": "@@ -79,7 +79,7 @@ def get_libdevice_path(self):\n \n     def _build_utils(self) -> None:\n         return CudaUtils()\n-    \n+\n     def __init__(self):\n         self.backend = self.CUDA\n         self.libdevice_path = self.get_libdevice_path()\n@@ -131,7 +131,7 @@ def get_libdevice_path(self):\n \n     def _build_utils(self) -> None:\n         return HIPUtils()\n-    \n+\n     def __init__(self):\n         self.backend = self.HIP\n         self.libdevice_path = self.get_libdevice_path()\n@@ -146,7 +146,7 @@ def __new__(cls):\n \n     def _build_utils(self) -> None:\n         return None\n-    \n+\n     def __init__(self):\n         self.backend = None\n         self.libdevice_path = ''"}, {"filename": "python/triton/tools/build_extern.py", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "file_content_changes": "@@ -292,7 +292,6 @@ def _output_stubs(self) -> str:\n         import_str += \"from ..runtime import driver\\n\"\n         import_str += \"import os\\n\"\n         import_str += \"import functools\\n\"\n-        \n \n         header_str = \"\"\n         header_str += \"@functools.lru_cache()\\n\""}]