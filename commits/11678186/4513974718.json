[{"filename": ".gitignore", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "file_content_changes": "@@ -18,7 +18,3 @@ __pycache__\n # JetBrains project files\n .idea\n cmake-build-*\n-\n-\n-log_*\n-scripts\n\\ No newline at end of file"}, {"filename": "python/triton/compiler.py", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "file_content_changes": "@@ -19,9 +19,9 @@\n from typing import Any, Callable, Dict, Optional, Tuple, Type, Union\n \n import setuptools\n+import torch\n from filelock import FileLock\n \n-import torch\n import triton\n import triton._C.libtriton.triton as _triton\n from . import impl\n@@ -2107,7 +2107,7 @@ def _init_handles(self):\n             if self.shared > max_shared:\n                 raise OutOfResources(self.shared, max_shared, \"shared memory\")\n             mod, func, n_regs, n_spills = cuda_utils.load_binary(self.metadata[\"name\"], self.asm[\"cubin\"], self.shared, device)\n-        \n+\n         self.n_spills = n_spills\n         self.n_regs = n_regs\n         self.cu_module = mod"}]