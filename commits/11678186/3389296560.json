[{"filename": "lib/Conversion/TritonGPUToLLVM/TritonGPUToLLVM.cpp", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "file_content_changes": "@@ -722,7 +722,7 @@ class ConvertTritonGPUOpToLLVMPattern\n                                   ConversionPatternRewriter &rewriter) {\n     auto elems = getElementsFromStruct(loc, llvmStruct, rewriter);\n     return SharedMemoryObject(/*base=*/elems[0],\n-                              /*shape=*/{elems.begin() + 1, elems.end()});\n+                              /*strides=*/{elems.begin() + 1, elems.end()});\n   }\n \n   static Value\n@@ -3006,12 +3006,12 @@ struct DotOpMmaV1ConversionHelper {\n   }\n \n   // Loading $a from smem to registers, returns a LLVM::Struct.\n-  Value loadA(Value A, const SharedMemoryObject &smemObj, Value thread, Location loc,\n-              ConversionPatternRewriter &rewriter) const;\n+  Value loadA(Value A, const SharedMemoryObject &smemObj, Value thread,\n+              Location loc, ConversionPatternRewriter &rewriter) const;\n \n   // Loading $b from smem to registers, returns a LLVM::Struct.\n-  Value loadB(Value B, const SharedMemoryObject &smemObj, Value thread, Location loc,\n-              ConversionPatternRewriter &rewriter) const;\n+  Value loadB(Value B, const SharedMemoryObject &smemObj, Value thread,\n+              Location loc, ConversionPatternRewriter &rewriter) const;\n \n   // Loading $c to registers, returns a LLVM::Struct.\n   Value loadC(Value C, Value llC, ConversionPatternRewriter &rewriter) const;"}, {"filename": "lib/Dialect/Triton/IR/Traits.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -66,4 +66,4 @@ mlir::LogicalResult mlir::OpTrait::impl::verifyTensorSize(Operation *op) {\n     }\n   }\n   return success();\n-}\n\\ No newline at end of file\n+}"}]