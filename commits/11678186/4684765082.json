[{"filename": "python/triton/language/core.py", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "file_content_changes": "@@ -1255,9 +1255,10 @@ def _argreduce(input, axis, combine_fn, _builder=None, _generator=None):\n     index = arange(0, n, _builder=_builder)\n \n     if len(input.shape) > 1:\n-        new_shape = [constexpr(1)] * len(input.shape)\n-        new_shape[axis] = constexpr(n)\n-        index = view(index, new_shape, _builder=_builder)\n+        # Broadcast index across the non-reduced axes\n+        expand_dims_index = [None] * len(input.shape)\n+        expand_dims_index[axis] = slice(None)\n+        index = index.__getitem__(expand_dims_index, _builder=_builder)\n         index = broadcast_to(index, input.shape, _builder=_builder)\n \n     rvalue, rindices = reduction((input, index), axis, combine_fn,"}]