[{"filename": "lib/Dialect/TritonGPU/Transforms/AccelerateMatmul.cpp", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "file_content_changes": "@@ -128,10 +128,16 @@ class BlockedToMMA : public mlir::RewritePattern {\n       };\n       bool isARow = true;\n       bool isBRow = true;\n+      Operation *aOp = a.getDefiningOp();\n+      Operation *bOp = b.getDefiningOp();\n       if (!aBwdSlices.empty())\n-        isARow = getCvtArgOrder(aBwdSlices[0])[0] == 1;\n+        aOp = aBwdSlices[0];\n       if (!bBwdSlices.empty())\n-        isBRow = getCvtArgOrder(bBwdSlices[0])[0] == 1;\n+        bOp = bBwdSlices[0];\n+      if (aOp)\n+        isARow = getCvtArgOrder(aOp)[0] == 1;\n+      if (bOp)\n+        isBRow = getCvtArgOrder(bOp)[0] == 1;\n \n       mmaEnc = triton::gpu::MmaEncodingAttr::get(\n           oldRetType.getContext(), versionMajor, numWarps, oldAType.getShape(),"}, {"filename": "python/triton/compiler.py", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "file_content_changes": "@@ -1020,6 +1020,7 @@ def optimize_ttgir(mod, num_stages, compute_capability):\n     pm = _triton.ir.pass_manager(mod.context)\n     pm.enable_debug()\n     pm.add_tritongpu_coalesce_pass()\n+    pm.add_tritongpu_remove_layout_conversions_pass()\n     pm.add_tritongpu_accelerate_matmul_pass(compute_capability)\n     pm.add_tritongpu_remove_layout_conversions_pass()\n     pm.add_tritongpu_optimize_dot_operands_pass()"}]