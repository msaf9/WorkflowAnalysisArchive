[{"filename": "python/triton/compiler.py", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "file_content_changes": "@@ -734,10 +734,6 @@ def visit_BoolOp(self, node: ast.BoolOp):\n         assert len(node.values) == 2\n         lhs = self.visit(node.values[0])\n         rhs = self.visit(node.values[1])\n-        if isinstance(lhs, triton.language.constexpr):\n-            lhs = lhs.value\n-        if isinstance(rhs, triton.language.constexpr):\n-            rhs = rhs.value\n \n         fn = {\n             ast.And: 'logical_and',"}]