[{"filename": "python/triton/compiler/compiler.py", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "file_content_changes": "@@ -5,11 +5,10 @@\n import json\n import os\n import re\n-import subprocess\n import tempfile\n from collections import namedtuple\n from pathlib import Path\n-from typing import Any, Tuple\n+from typing import Any\n \n from .._C.libtriton.triton import (add_external_libs, compile_ptx_to_cubin,\n                                    get_shared_memory_size, ir,\n@@ -258,10 +257,6 @@ def _is_cuda(arch):\n \n \n def get_architecture_descriptor(capability):\n-    try:\n-        import torch\n-    except ImportError:\n-        raise ImportError(\"Triton requires PyTorch to be installed\")\n     if capability is None:\n         device = get_current_device()\n         capability = get_device_capability(device)"}, {"filename": "python/triton/compiler/make_launcher.py", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "file_content_changes": "@@ -3,6 +3,7 @@\n import tempfile\n \n from ..common import _build\n+from ..common.build import is_hip\n from ..runtime.cache import get_cache_manager\n from ..runtime.jit import version_key\n "}, {"filename": "python/triton/language/semantic.py", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "file_content_changes": "@@ -2,16 +2,13 @@\n \n import os\n from pathlib import Path\n-import re\n import warnings\n from functools import wraps\n from typing import List, Optional, Sequence, Tuple, TypeVar\n \n from .._C.libtriton.triton import ir\n from . import core as tl\n \n-import triton._C.libtriton.triton as _triton\n-\n from ..common.build import is_hip\n import importlib\n rocm_module_path = os.path.join(Path(__file__).parents[3],\"third_party\",\"amd_hip_backend\",\"python\", \"rocm.py\")"}]