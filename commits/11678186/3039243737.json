[{"filename": "python/test/unit/operators/test_matmul.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -80,7 +80,7 @@ def test_op(BLOCK_M, BLOCK_N, BLOCK_K, SPLIT_K, NWARP, NSTAGE, M, N, K, AT, BT,\n     kernel = triton.ops._matmul.kernel\n     kernel.run.configs = configs\n     # kernel.run = kernel.run.run.run\n-    \n+\n     # get matrix shape\n     M = BLOCK_M if M is None else M\n     N = BLOCK_N if N is None else N"}, {"filename": "python/triton/runtime/autotuner.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "file_content_changes": "@@ -165,6 +165,7 @@ def decorator(fn):\n         return fn\n     return decorator\n \n+\n class Heuristics:\n \n     def __init__(self, kernel, arg_names, values) -> None:\n@@ -177,6 +178,7 @@ def __call__(self, *args, **kwargs):\n             kwargs[v] = heur({**dict(zip(self.arg_names, args)), **kwargs})\n         return self.run(*args, **kwargs)\n \n+\n def heuristics(values):\n     \"\"\"\n     Decorator for specifying how the values of certain meta-parameters may be computed."}]