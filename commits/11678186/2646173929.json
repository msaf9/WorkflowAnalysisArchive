[{"filename": "python/setup.py", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "file_content_changes": "@@ -36,7 +36,7 @@ def get_llvm():\n     paths = [distutils.spawn.find_executable(cfg) for cfg in supported]\n     paths = [p for p in paths if p is not None]\n     if paths:\n-        return paths[0]\n+        return ''\n     if platform.system() == \"Windows\":\n         raise RuntimeError(\"Triton is not supported on Windows\")\n     # download if nothing is installed\n@@ -102,7 +102,10 @@ def run(self):\n             self.build_extension(ext, llvm_dir)\n \n     def build_external(self, ext, llvm_dir):\n-        llvm_dis_path = os.path.join(llvm_dir, \"bin\", \"llvm-dis\")\n+        if llvm_dir == \"\":\n+            llvm_dis_path = distutils.spawn.find_executable(\"llvm-dis\")\n+        else:\n+            llvm_dis_path = os.path.join(llvm_dir, \"bin\", \"llvm-dis\")\n         if self.enable_libdevice:\n             build_extern.build(llvm_dis_path, os.path.join(self.cuda_dir, \"nvvm\", \"libdevice\", \"libdevice.10.bc\"),\n                                \"libdevice\", ext.externlib_dir)\n@@ -114,8 +117,8 @@ def build_extension(self, ext, llvm_dir):\n             os.makedirs(self.build_temp)\n         # configuration\n         python_include_dirs = [distutils.sysconfig.get_python_inc()] + [self.cuda_dir + \"/include\"]\n-        llvm_include_dir = os.path.join(llvm_dir, \"include\")\n-        llvm_library_dir = os.path.join(llvm_dir, \"lib\")\n+        llvm_include_dir = os.path.join(llvm_dir, \"include\") if llvm_dir != \"\" else \"\"\n+        llvm_library_dir = os.path.join(llvm_dir, \"lib\") if llvm_dir != \"\" else \"\"\n         cmake_args = [\n             \"-DCMAKE_LIBRARY_OUTPUT_DIRECTORY=\" + extdir,\n             \"-DBUILD_TUTORIALS=OFF\","}]