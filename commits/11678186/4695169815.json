[{"filename": "docs/python-api/triton.language.rst", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -100,7 +100,7 @@ Reduction Ops\n     argmin\n     max\n     min\n-    reduction\n+    reduce\n     sum\n     xor_sum\n "}, {"filename": "python/test/unit/language/test_core.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -1355,7 +1355,7 @@ def var_mean_kernel(X, out_mean, out_var, BLOCK: tl.constexpr):\n         mean = x\n         m2 = tl.zeros_like(x)\n         weight = tl.full(x.shape, 1, x.dtype)\n-        (mean, m2, weight) = tl.reduction((mean, m2, weight), 0, _welford_combine)\n+        (mean, m2, weight) = tl.reduce((mean, m2, weight), 0, _welford_combine)\n         tl.store(out_mean, mean)\n         tl.store(out_var, m2 / weight)\n "}, {"filename": "python/triton/language/__init__.py", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "file_content_changes": "@@ -57,7 +57,7 @@\n     pointer_type,\n     program_id,\n     ravel,\n-    reduction,\n+    reduce,\n     reshape,\n     sigmoid,\n     sin,\n@@ -165,7 +165,7 @@\n     \"randn\",\n     \"randn4x\",\n     \"ravel\",\n-    \"reduction\",\n+    \"reduce\",\n     \"reshape\",\n     \"sigmoid\",\n     \"sin\","}, {"filename": "python/triton/language/core.py", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "file_content_changes": "@@ -1199,7 +1199,7 @@ def _insertion_guard(builder):\n \n \n @builtin\n-def reduction(input, axis, combine_fn, _builder=None, _generator=None):\n+def reduce(input, axis, combine_fn, _builder=None, _generator=None):\n     \"\"\"Applies the combine_fn to all elements in :code:`input` tensors along the provided :code:`axis`\n \n     :param input: the input tensor, or tuple of tensors\n@@ -1208,8 +1208,8 @@ def reduction(input, axis, combine_fn, _builder=None, _generator=None):\n \n     \"\"\"\n     if isinstance(input, tensor):\n-        return reduction((input,), axis, combine_fn,\n-                         _builder=_builder, _generator=_generator)[0]\n+        return reduce((input,), axis, combine_fn,\n+                      _builder=_builder, _generator=_generator)[0]\n \n     def make_combine_region(reduce_op):\n         in_scalar_tys = [t.type.scalar for t in input]\n@@ -1260,8 +1260,8 @@ def _argreduce(input, axis, combine_fn, _builder=None, _generator=None):\n         index = view(index, new_shape, _builder=_builder)\n         index = broadcast_to(index, input.shape, _builder=_builder)\n \n-    rvalue, rindices = reduction((input, index), axis, combine_fn,\n-                                 _builder=_builder, _generator=_generator)\n+    rvalue, rindices = reduce((input, index), axis, combine_fn,\n+                              _builder=_builder, _generator=_generator)\n     return rindices\n \n \n@@ -1274,7 +1274,7 @@ def _max_combine(a, b):\n @_add_reduction_docstr(\"maximum\")\n def max(input, axis):\n     input = _promote_reduction_input(input)\n-    return reduction(input, axis, _max_combine)\n+    return reduce(input, axis, _max_combine)\n \n \n @triton.jit\n@@ -1304,7 +1304,7 @@ def _min_combine(a, b):\n @_add_reduction_docstr(\"minimum\")\n def min(input, axis):\n     input = _promote_reduction_input(input)\n-    return reduction(input, axis, _min_combine)\n+    return reduce(input, axis, _min_combine)\n \n \n @triton.jit\n@@ -1333,7 +1333,7 @@ def _sum_combine(a, b):\n @_add_reduction_docstr(\"sum\")\n def sum(input, axis):\n     input = _promote_reduction_input(input)\n-    return reduction(input, axis, _sum_combine)\n+    return reduce(input, axis, _sum_combine)\n \n \n @triton.jit\n@@ -1349,8 +1349,8 @@ def xor_sum(input, axis, _builder=None, _generator=None):\n         raise ValueError(\"xor_sum only supported for integers\")\n \n     input = _promote_reduction_input(input, _builder=_builder)\n-    return reduction(input, axis, _xor_combine,\n-                     _builder=_builder, _generator=_generator)\n+    return reduce(input, axis, _xor_combine,\n+                  _builder=_builder, _generator=_generator)\n \n \n # -----------------------"}]