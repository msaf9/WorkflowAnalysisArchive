[{"filename": "lib/Dialect/TritonGPU/Transforms/AccelerateMatmul.cpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "file_content_changes": "@@ -47,7 +47,7 @@ SmallVector<unsigned, 2> warpsPerTileV2(triton::DotOp dotOp,\n   auto filter = [&dotOp](Operation *op) {\n     return op->getParentRegion() == dotOp->getParentRegion();\n   };\n-  auto slices = mlir::getSlice(dotOp, filter);\n+  auto slices = mlir::getSlice(dotOp, {filter});\n   for (Operation *op : slices)\n     if (isa<triton::DotOp>(op) && (op != dotOp))\n       return {(unsigned)numWarps, 1};\n@@ -113,8 +113,8 @@ class BlockedToMMA : public mlir::RewritePattern {\n     if (versionMajor == 1) {\n       SetVector<Operation *> aBwdSlices, bBwdSlices;\n       auto isCvt = [](Operation *op) { return isa<ConvertLayoutOp>(op); };\n-      getBackwardSlice(a, &aBwdSlices, isCvt);\n-      getBackwardSlice(b, &bBwdSlices, isCvt);\n+      getBackwardSlice(a, &aBwdSlices, {isCvt});\n+      getBackwardSlice(b, &bBwdSlices, {isCvt});\n       // get the source of the first conversion found in slices\n       auto getCvtArgOrder = [](Operation *op) {\n         return cast<ConvertLayoutOp>(op)"}, {"filename": "lib/Dialect/TritonGPU/Transforms/RemoveLayoutConversions.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -353,7 +353,7 @@ class RematerializeForward : public mlir::RewritePattern {\n              !(isa<triton::ReduceOp>(op) &&\n                !op->getResult(0).getType().isa<RankedTensorType>());\n     };\n-    mlir::getForwardSlice(cvt.getResult(), &cvtSlices, filter);\n+    mlir::getForwardSlice(cvt.getResult(), &cvtSlices, {filter});\n     if (cvtSlices.empty())\n       return failure();\n "}]