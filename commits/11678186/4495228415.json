[{"filename": "bin/triton-opt.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -4,8 +4,8 @@\n #include \"triton/Dialect/Triton/Transforms/Passes.h\"\n #include \"triton/Dialect/TritonGPU/Transforms/Passes.h\"\n \n-#include \"triton/Conversion/TritonToTritonGPU/Passes.h\"\n #include \"triton/Conversion/TritonGPUToLLVM/Passes.h\"\n+#include \"triton/Conversion/TritonToTritonGPU/Passes.h\"\n \n #include \"mlir/IR/Dialect.h\"\n #include \"mlir/InitAllPasses.h\""}, {"filename": "python/src/triton.cc", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "file_content_changes": "@@ -1490,12 +1490,8 @@ void init_triton_translation(py::module &m) {\n   });\n \n   m.def(\n-      \"set_rocm\", \n-      []() { \n-          setROCM(); \n-          }, \n-      ret::take_ownership);\n-      \n+      \"set_rocm\", []() { setROCM(); }, ret::take_ownership);\n+\n   m.def(\n       \"translate_triton_gpu_to_llvmir\",\n       [](mlir::ModuleOp op, int computeCapability) {"}, {"filename": "python/triton/compiler.py", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "file_content_changes": "@@ -1377,10 +1377,10 @@ def format_of(ty):\n         }}\n \n         ptr_info.dev_ptr = (hipDeviceptr_t)PyLong_AsUnsignedLongLong(ret);\n-        \n+\n         if (!ptr_info.dev_ptr)\n           return ptr_info;\n-        \n+\n         uint64_t dev_ptr;\n         hipError_t status = hipPointerGetAttribute(&dev_ptr, HIP_POINTER_ATTRIBUTE_DEVICE_POINTER, ptr_info.dev_ptr);\n         if (status == hipErrorInvalidValue) {{\n@@ -1398,7 +1398,7 @@ def format_of(ty):\n     }}\n \n     static PyObject* launch(PyObject* self, PyObject* args) {{\n-    \n+\n       int gridX, gridY, gridZ;\n       uint64_t _stream;\n       uint64_t _function;\n@@ -1426,7 +1426,7 @@ def format_of(ty):\n       if (PyErr_Occurred()) {{\n         return NULL;\n       }}\n-      \n+\n       // return None\n       Py_INCREF(Py_None);\n       return Py_None;"}]