[{"filename": "python/tests/test_ext_elemwise.py", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "file_content_changes": "@@ -1,9 +1,11 @@\n \n+import pytest\n import torch\n+from torch.testing import assert_close\n+\n import triton\n import triton.language as tl\n-import pytest\n-from torch.testing import assert_close\n+\n \n @pytest.mark.parametrize('num_warps, block_size, iter_size', [\n     [4, 256, 1],\n@@ -37,6 +39,7 @@ def kernel(x_ptr,\n     golden_y = torch.sin(x)\n     assert_close(y, golden_y, rtol=1e-7, atol=1e-7)\n \n+\n @pytest.mark.parametrize('num_warps, block_size, iter_size', [\n     [4, 256, 1],\n     [4, 1024, 256],\n@@ -75,6 +78,7 @@ def kernel(x_ptr,\n     golden_z = torch.minimum(x, y)\n     assert_close(z, golden_z, rtol=1e-7, atol=1e-7)\n \n+\n @pytest.mark.parametrize('num_warps, block_size, iter_size', [\n     [4, 256, 1],\n     [4, 1024, 256],\n@@ -117,4 +121,4 @@ def kernel(x_ptr,\n                  block_size=x.shape[0], iter_size=iter_size, num_warps=num_warps)\n \n     golden_w = x * y + z\n-    assert_close(w, golden_w, rtol=1e-7, atol=1e-7)\n\\ No newline at end of file\n+    assert_close(w, golden_w, rtol=1e-7, atol=1e-7)"}]