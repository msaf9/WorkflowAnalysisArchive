[{"filename": "python/src/triton.cc", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "file_content_changes": "@@ -129,11 +129,11 @@ void init_triton_ir(py::module &&m) {\n       .def(\"load_triton\", [](mlir::MLIRContext &self) {\n         self.getOrLoadDialect<mlir::triton::TritonDialect>();\n         self.getOrLoadDialect<mlir::index::IndexDialect>();\n+        self.getOrLoadDialect<mlir::triton::TritonDialect>();\n+        self.getOrLoadDialect<mlir::gpu::GPUDialect>();\n         // we load LLVM because the frontend uses LLVM.undef for\n         // some placeholders\n-        self.getOrLoadDialect<mlir::triton::TritonDialect>();\n         self.getOrLoadDialect<mlir::LLVM::LLVMDialect>();\n-        self.getOrLoadDialect<mlir::gpu::GPUDialect>();\n       });\n   // .def(py::init([](){\n   //   mlir::MLIRContext context;\n@@ -404,7 +404,8 @@ void init_triton_ir(py::module &&m) {\n                         mlir::triton::gpu::TritonGPUDialect,\n                         mlir::math::MathDialect, mlir::arith::ArithDialect,\n                         mlir::index::IndexDialect, mlir::func::FuncDialect,\n-                        mlir::scf::SCFDialect, mlir::cf::ControlFlowDialect>();\n+                        mlir::scf::SCFDialect, mlir::cf::ControlFlowDialect,\n+                        mlir::LLVM::LLVMDialect>();\n         context.appendDialectRegistry(registry);\n         context.loadAllAvailableDialects();\n "}]