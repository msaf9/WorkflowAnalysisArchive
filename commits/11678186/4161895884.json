[{"filename": "python/triton/language/semantic.py", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "file_content_changes": "@@ -780,6 +780,11 @@ def load(ptr: tl.tensor,\n          builder: ir.builder) -> tl.tensor:\n     if not ptr.type.scalar.is_ptr():\n         raise ValueError(\"Pointer argument of load instruction is \" + ptr.type.__repr__())\n+    if not ptr.type.is_block():\n+        if mask and mask.type.is_block():\n+            raise ValueError(\"Mask argument cannot be block type if pointer argument is not a block\")\n+        if other and other.type.is_block():\n+            raise ValueError(\"Other argument cannot be block type if pointer argument is not a block\")\n     if ptr.type.is_block():\n         if mask:\n             mask = broadcast_impl_shape(mask, ptr.type.get_block_shapes(), builder)\n@@ -830,6 +835,11 @@ def store(ptr: tl.tensor,\n           builder: ir.builder) -> tl.tensor:\n     if not ptr.type.scalar.is_ptr():\n         raise ValueError(\"Pointer argument of store instruction is \" + ptr.type.__repr__())\n+    if not ptr.type.is_block():\n+        if val.type.is_block():\n+            raise ValueError(\"Value argument cannot be block type if pointer argument is not a block\")\n+        if mask and mask.type.is_block():\n+            raise ValueError(\"Mask argument cannot be block type if pointer argument is not a block\")\n     if ptr.type.is_block():\n         val = broadcast_impl_shape(val, ptr.type.get_block_shapes(), builder)\n     if mask and ptr.type.is_block():"}]