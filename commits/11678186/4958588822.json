[{"filename": "python/triton/runtime/jit.py", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "file_content_changes": "@@ -299,13 +299,13 @@ def {self.fn.__name__}({', '.join(self.arg_names)}, grid, num_warps=4, num_stage\n         set_current_device(device)\n     if stream is None and not warmup:\n       stream = get_cuda_stream(device)\n-    try:\n-      bin = cache[device][key]\n+    bin = cache[device].get(key, None)\n+    if bin is not None:\n       if not warmup:\n           bin.c_wrapper(grid_0, grid_1, grid_2, bin.num_warps, bin.shared, stream, bin.cu_function, triton.compiler.CompiledKernel.launch_enter_hook, triton.compiler.CompiledKernel.launch_exit_hook, bin, {args})\n       return bin\n     # kernel not cached -- compile\n-    except KeyError:\n+    else:\n       # build dict of constant values\n       args = [{args}]\n       all_args = {', '.join([f'{arg}' for arg in self.arg_names])},"}]