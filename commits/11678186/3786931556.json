[{"filename": "lib/Dialect/TritonGPU/Transforms/Combine.cpp", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "file_content_changes": "@@ -1222,6 +1222,8 @@ class CollectMmaToUpdateForVolta : public mlir::RewritePattern {\n     auto AT = dotOp.a().getType().cast<RankedTensorType>();\n     auto BT = dotOp.b().getType().cast<RankedTensorType>();\n     auto DT = dotOp.d().getType().cast<RankedTensorType>();\n+    if (!DT.getEncoding())\n+      return failure();\n     auto mmaLayout = DT.getEncoding().dyn_cast<MmaEncodingAttr>();\n     if (!(mmaLayout && mmaLayout.isVolta()))\n       return failure();\n@@ -1412,14 +1414,17 @@ class RematerializeForloop : public RewritePattern {\n     auto resTypes = forOp->getResultTypes();\n     bool needRematerialize{};\n     for (auto type : resTypes)\n-      if (auto tensorTy = type.dyn_cast<RankedTensorType>())\n+      if (auto tensorTy = type.dyn_cast<RankedTensorType>()) {\n+        if (!tensorTy.getEncoding())\n+          continue;\n         if (auto mma = tensorTy.getEncoding().dyn_cast<MmaEncodingAttr>()) {\n           auto it = mmaToUpdate.find(mma);\n           if (it == mmaToUpdate.end())\n             return failure();\n           needRematerialize = true;\n           break;\n         }\n+      }\n \n     if (needRematerialize) {\n       auto res = rematerializeForLoop(rewriter, forOp);"}]