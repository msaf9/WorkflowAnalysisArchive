[{"filename": "lib/Target/LLVMIR/LLVMIRTranslation.cpp", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "file_content_changes": "@@ -140,9 +140,6 @@ translateTritonGPUToLLVMIR(llvm::LLVMContext *llvmContext,\n   pm.addPass(createConvertTritonGPUToLLVMPass());\n   // Conanicalize to eliminate the remaining UnrealizedConversionCastOp\n   pm.addPass(mlir::createCanonicalizerPass());\n-  pm.addPass(mlir::createCSEPass()); // Simplify the IR to improve readability.\n-  pm.addPass(mlir::createSymbolDCEPass());\n-  pm.addPass(mlir::createCanonicalizerPass());\n \n   if (failed(pm.run(module))) {\n     llvm::errs() << \"Pass execution failed\";"}, {"filename": "python/tests/test_gemm.py", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "file_content_changes": "@@ -84,18 +84,17 @@ def matmul_kernel(\n \n \n @pytest.mark.parametrize('SIZE_M,SIZE_N,SIZE_K,NUM_WARPS,BLOCK_SIZE_M,BLOCK_SIZE_N,BLOCK_SIZE_K', [\n-    # No forloop\n+    # Non-forloop\n     [64, 32, 64, 4, 64, 32, 64],\n     [128, 64, 128, 4, 128, 64, 128],\n-    # Simple forloop\n+    # K-Forloop\n     [64, 32, 128, 4, 64, 32, 64],\n     [128, 16, 128, 4, 128, 16, 32],\n     [32, 16, 128, 4, 32, 16, 32],\n     [32, 64, 128, 4, 32, 64, 32],\n     [32, 128, 256, 4, 32, 128, 64],\n-    [64, 128, 64, 4, 64, 128, 32],  # n can't be 128\n+    [64, 128, 64, 4, 64, 128, 32],\n     [128, 128, 64, 4, 128, 128, 32],\n-\n     [64, 64, 128, 4, 64, 64, 32],\n     [128, 128, 128, 4, 128, 128, 32],\n     [128, 128, 256, 4, 128, 128, 64],"}]