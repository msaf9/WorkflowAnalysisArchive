[{"filename": "lib/Analysis/Utility.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -361,7 +361,7 @@ bool supportMMA(triton::DotOp op, int version) {\n     int numWarps = triton::gpu::TritonGPUDialect::getNumWarps(mod);\n     if (!(numWarps % 4 == 0 && retShapePerCTA[0] % 64 == 0 &&\n           retShapePerCTA[1] % 8 == 0 &&\n-          (aElemTy.isFloat8E5M2() || aElemTy.isFloat8E4M3FN() ||\n+          (aElemTy.isFloat8E5M2() || aElemTy.isFloat8E4M3FNUZ() ||\n            aElemTy.isInteger(8) || aElemTy.isF16() || aElemTy.isBF16() ||\n            aElemTy.isF32()))) {\n       return false;"}, {"filename": "lib/Conversion/TritonGPUToLLVM/DotOpToLLVM/WGMMA.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -58,7 +58,7 @@ triton::nvgpu::WGMMAEltType getMmaOperandType(Value a, bool allowTF32) {\n     return triton::nvgpu::WGMMAEltType::s8;\n   } else if (aTy.isFloat8E5M2()) {\n     return triton::nvgpu::WGMMAEltType::e5m2;\n-  } else if (aTy.isFloat8E4M3FN()) {\n+  } else if (aTy.isFloat8E4M3FNUZ()) {\n     return triton::nvgpu::WGMMAEltType::e4m3;\n   } else {\n     llvm::report_fatal_error(\"Unsupported mma operand type found\");"}, {"filename": "lib/Conversion/TritonGPUToLLVM/TritonGPUToLLVMPass.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "file_content_changes": "@@ -833,9 +833,9 @@ class ConvertTritonGPUToLLVM\n                                       .dyn_cast<MmaEncodingAttr>();\n       if (mmaLayout) {\n         bool isNativeHopperFP8 =\n-            AElType.isFloat8E5M2() || AElType.isFloat8E4M3FN();\n+            AElType.isFloat8E5M2() || AElType.isFloat8E4M3FNUZ();\n         bool isFP8 = isNativeHopperFP8 || AElType.isFloat8E5M2FNUZ() ||\n-                     AElType.isFloat8E4M3FNUZ();\n+                     AElType.isFloat8E4M3FN();\n         if (!isFP8 || (isNativeHopperFP8 && mmaLayout.isHopper()))\n           return;\n         promoteType = builder.getF16Type();"}, {"filename": "lib/Dialect/TritonGPU/Transforms/Utility.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "file_content_changes": "@@ -81,8 +81,8 @@ SmallVector<unsigned, 3> mmaVersionToInstrShape(int version,\n     SmallVector<unsigned> validN;\n \n     // MMAv3 with larger instruction shape is preferred.\n-    if (eltType.isFloat8E5M2() || eltType.isFloat8E4M3FN() || eltType.isF16() ||\n-        eltType.isBF16() || eltType.isF32()) {\n+    if (eltType.isFloat8E5M2() || eltType.isFloat8E4M3FNUZ() ||\n+        eltType.isF16() || eltType.isBF16() || eltType.isF32()) {\n       validN.assign({256, 248, 240, 232, 224, 216, 208, 200, 192, 184, 176,\n                      168, 160, 152, 144, 136, 128, 120, 112, 104, 96,  88,\n                      80,  72,  64,  56,  48,  40,  32,  24,  16,  8});"}]