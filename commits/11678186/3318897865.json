[{"filename": "lib/Dialect/TritonGPU/Transforms/Combine.cpp", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "file_content_changes": "@@ -128,8 +128,10 @@ class SimplifyConversion : public mlir::RewritePattern {\n     }\n     // cvt(type2, x)\n     if (llvm::isa<triton::gpu::ConvertLayoutOp>(arg)) {\n+      auto argType = arg->getResult(0).getType().cast<RankedTensorType>();\n       if (srcType.getEncoding().isa<triton::gpu::SharedEncodingAttr>() &&\n-          !dstType.getEncoding().isa<triton::gpu::SharedEncodingAttr>())\n+          dstType.getEncoding().isa<triton::gpu::DotOperandEncodingAttr>() &&\n+          argType.getEncoding().isa<triton::gpu::BlockedEncodingAttr>())\n         return mlir::failure();\n       rewriter.replaceOpWithNewOp<triton::gpu::ConvertLayoutOp>(\n           op, op->getResultTypes().front(), arg->getOperand(0));\n@@ -576,7 +578,7 @@ class TritonGPUCombineOpsPass\n     mlir::RewritePatternSet patterns(context);\n \n     patterns.add<SimplifyConversion>(context);\n-    patterns.add<DecomposeDotOperand>(context);\n+    // patterns.add<DecomposeDotOperand>(context);\n     patterns.add<RematerializeBackward>(context);\n     patterns.add<RematerializeForward>(context);\n     patterns.add<MoveConvertOutOfLoop>(context);"}]