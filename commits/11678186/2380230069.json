[{"filename": "python/triton/code_gen.py", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "file_content_changes": "@@ -619,7 +619,9 @@ def continue_fn():\n         # promote it to right type\n         init_val = self.value_constructor.get_value(node.target.id)\n         promote = lambda a, b: triton.language.semantic.computation_type_impl(a, b, False)\n-        ty = promote(iter_args[0].type, iter_args[1].type) if len(iter_args) > 1 else iter_args[0].type\n+        start_ty = triton.language.core._to_tensor(iter_args[0], self.builder).type\n+        stop_ty = triton.language.core._to_tensor(iter_args[1], self.builder).type if len(iter_args) > 1 else None\n+        ty = promote(start_ty, stop_ty) if len(iter_args) > 1 else start_ty\n         casted = triton.language.semantic.cast(init_val, ty, self.builder)\n         self.value_constructor.set_value(node.target.id, casted)\n         # create cond"}]