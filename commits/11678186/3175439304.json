[{"filename": "python/test/unit/language/test_core.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -666,7 +666,7 @@ def change_value(Lock):\n     Lock = torch.zeros((1,), device='cuda', dtype=torch.int32)\n     change_value[(1,)](Lock)\n \n-    assert(Lock[0] == 1)\n+    assert (Lock[0] == 1)\n \n     # 2. only one block enters the critical section\n     @triton.jit"}, {"filename": "python/triton/compiler.py", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "file_content_changes": "@@ -1104,7 +1104,7 @@ def put(self, data, filename, binary=True):\n @functools.lru_cache()\n def libcuda_dirs():\n     locs = subprocess.check_output([\"whereis\", \"libcuda.so\"]).decode().strip().split()[1:]\n-    return [ os.path.dirname(loc) for loc in locs ]\n+    return [os.path.dirname(loc) for loc in locs]\n \n \n @contextlib.contextmanager\n@@ -1131,7 +1131,7 @@ def _build(name, src, srcdir):\n         cc = gcc if gcc is not None else clang\n     py_include_dir = get_paths()[\"include\"]\n     cc_cmd = [cc, src, \"-O3\", f\"-I{cu_include_dir}\", f\"-I{py_include_dir}\", f\"-I{srcdir}\", \"-shared\", \"-fPIC\", \"-lcuda\", \"-o\", so]\n-    cc_cmd += [ f\"-L{dir}\" for dir in cuda_lib_dirs ]\n+    cc_cmd += [f\"-L{dir}\" for dir in cuda_lib_dirs]\n     ret = subprocess.check_call(cc_cmd)\n     if ret == 0:\n         return so"}]