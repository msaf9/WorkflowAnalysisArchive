[{"filename": "lib/Conversion/TritonGPUToLLVM/ElementwiseOpToLLVM.cpp", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "file_content_changes": "@@ -472,8 +472,14 @@ struct FpToFpOpConversion\n         {{F32TyID, F8E5M2TyID}, convertFp32x4ToFp8E5M2x4},\n     };\n \n-    auto convertor =\n-        convertorMap.lookup({srcEltType.getTypeID(), dstEltType.getTypeID()});\n+    std::pair<TypeID, TypeID> key = {srcEltType.getTypeID(),\n+                                     dstEltType.getTypeID()};\n+    if (convertorMap.count(key) == 0) {\n+      llvm::errs() << \"Unsupported conversion from \" << srcEltType << \" to \"\n+                   << dstEltType << \"\\n\";\n+      llvm_unreachable(\"\");\n+    }\n+    auto convertor = convertorMap.lookup(key);\n \n     // Vectorized casting\n     assert(elems % 4 == 0 &&"}]