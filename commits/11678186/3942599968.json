[{"filename": "python/triton/compiler.py", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "file_content_changes": "@@ -164,8 +164,7 @@ def set_value(self, name: str,\n         self.lscope[name] = value\n         self.local_defs[name] = value\n \n-    @staticmethod\n-    def is_triton_tensor(value):\n+    def is_triton_tensor(self, value):\n         return isinstance(value, triton.language.tensor)\n \n     #\n@@ -750,16 +749,13 @@ def visit_BoolOp(self, node: ast.BoolOp):\n             return getattr(lhs, fn)(rhs)\n \n     if sys.version_info < (3, 8):\n-        @staticmethod\n-        def visit_NameConstant(node):\n+        def visit_NameConstant(self, node):\n             return triton.language.constexpr(node.value)\n \n-        @staticmethod\n-        def visit_Num(node):\n+        def visit_Num(self, node):\n             return triton.language.constexpr(node.n)\n \n-        @staticmethod\n-        def visit_Str(node):\n+        def visit_Str(self, node):\n             return triton.language.constexpr(ast.literal_eval(node))\n \n     def visit_Attribute(self, node):\n@@ -772,7 +768,6 @@ def visit_Attribute(self, node):\n     def visit_Expr(self, node):\n         ast.NodeVisitor.generic_visit(self, node)\n \n-    @staticmethod\n     def visit_NoneType(self, node):\n         return None\n "}]