[{"filename": "python/triton/compiler.py", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "file_content_changes": "@@ -987,22 +987,19 @@ def optimize_ttgir(mod, num_stages, compute_capability):\n     pm.enable_debug()\n     pm.add_tritongpu_coalesce_pass()\n     pm.add_tritongpu_accelerate_matmul_pass(compute_capability)\n+    pm.add_tritongpu_remove_layout_conversions_pass()\n+    pm.add_tritongpu_fuse_transpositions_pass()\n     pm.add_tritongpu_pipeline_pass(num_stages)\n-    # Prefetch pass relies on matmul operands being sliceable.\n-    # This may only be the case after the `pipeline` pass has run already\n     pm.add_tritongpu_prefetch_pass()\n     pm.add_tritongpu_remove_layout_conversions_pass()\n-    pm.add_tritongpu_fuse_transpositions_pass()\n-    pm.add_cse_pass()\n-    pm.add_licm_pass()\n     pm.add_tritongpu_decompose_conversions_pass()\n     if compute_capability // 10 == 7:\n         # The update_mma_for_volta pass helps to compute some information for MMA encoding specifically for MMAv1\n         # NOTE this pass should be placed after all the passes those modifies mma layout\n         pm.add_tritongpu_update_mma_for_volta_pass()\n+    pm.add_tritongpu_reorder_instructions_pass()\n     pm.add_cse_pass()\n     pm.add_symbol_dce_pass()\n-    pm.add_tritongpu_reorder_instructions_pass()\n     pm.run(mod)\n     return mod\n "}]