[{"filename": "python/test/unit/language/test_line_info.py", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "file_content_changes": "@@ -99,20 +99,20 @@ def test_line_info(func: str):\n \n     file_lines = extract_file_lines(kernel_info.asm[\"cubin\"])\n     if func == \"single\":\n+        assert (check_file_lines(file_lines, \"test_line_info.py\", 15))\n         assert (check_file_lines(file_lines, \"test_line_info.py\", 16))\n-        assert (check_file_lines(file_lines, \"test_line_info.py\", 17))\n     elif func == \"call\":\n-        assert (check_file_lines(file_lines, \"test_line_info.py\", 29))\n-        assert (check_file_lines(file_lines, \"test_line_info.py\", 22))\n-        assert (check_file_lines(file_lines, \"test_line_info.py\", 31))\n+        assert (check_file_lines(file_lines, \"test_line_info.py\", 28))\n+        assert (check_file_lines(file_lines, \"test_line_info.py\", 21))\n+        assert (check_file_lines(file_lines, \"test_line_info.py\", 30))\n     elif func == \"call_noinline\":\n-        assert (check_file_lines(file_lines, \"test_line_info.py\", 43))\n+        assert (check_file_lines(file_lines, \"test_line_info.py\", 42))\n+        assert (check_file_lines(file_lines, \"test_line_info.py\", 35))\n         assert (check_file_lines(file_lines, \"test_line_info.py\", 36))\n         assert (check_file_lines(file_lines, \"test_line_info.py\", 37))\n-        assert (check_file_lines(file_lines, \"test_line_info.py\", 38))\n     elif func == \"multi_files\":\n-        assert (check_file_lines(file_lines, \"test_line_info.py\", 48))\n-        assert (check_file_lines(file_lines, \"test_line_info.py\", 50))\n+        assert (check_file_lines(file_lines, \"test_line_info.py\", 47))\n+        assert (check_file_lines(file_lines, \"test_line_info.py\", 49))\n         assert (check_file_lines(file_lines, \"standard.py\", 33))\n         assert (check_file_lines(file_lines, \"standard.py\", 34))\n         assert (check_file_lines(file_lines, \"standard.py\", 36))"}]