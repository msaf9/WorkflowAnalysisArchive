[{"filename": ".github/workflows/integration-tests.yml", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "file_content_changes": "@@ -18,9 +18,9 @@ jobs:\n       id: set-matrix\n       run: |\n         if [ x\"${{ github.repository }}\" == x\"openai/triton\" ]; then\n-          echo '::set-output name=matrix::[[\"self-hosted\", \"A10\"], \"macos-11.6\"]'\n+          echo '::set-output name=matrix::[[\"self-hosted\", \"A10\"], \"macos-10.15\"]'\n         else\n-          echo '::set-output name=matrix::[\"ubuntu-latest\", \"macos-11.6\"]'\n+          echo '::set-output name=matrix::[\"ubuntu-latest\", \"macos-10.15\"]'\n         fi\n \n   Integration-Tests:\n@@ -42,26 +42,26 @@ jobs:\n           rm -rf ~/.triton/cache/\n \n       - name: Check imports\n-        if: ${{ matrix.runner != 'macos-11.6' }}\n+        if: ${{ matrix.runner != 'macos-10.15' }}\n         run: |\n           pip install isort\n           isort -c ./python || ( echo '::error title=Imports not sorted::Please run \\\"isort ./python\\\"' ; exit 1 )\n \n       - name: Check python style\n-        if: ${{ matrix.runner != 'macos-11.6' }}\n+        if: ${{ matrix.runner != 'macos-10.15' }}\n         run: |\n           pip install autopep8\n           autopep8 -a -r -d --exit-code ./python || ( echo '::error title=Style issues::Please run \\\"autopep8 -a -r -i ./python\\\"' ; exit 1 )\n \n       - name: Check cpp style\n-        if: ${{ matrix.runner != 'macos-11.6' }}\n+        if: ${{ matrix.runner != 'macos-10.15' }}\n         run: |\n           pip install clang-format\n           find . -regex '.*\\.\\(cpp\\|hpp\\|h\\|cc\\)' -not -path \"./python/build/*\" -not -path \"./include/triton/external/*\" -print0 | xargs -0 -n1 clang-format -style=file --dry-run -Werror -i ||\n           (echo '::error title=Style issues:: Please run `find . -regex \".*\\.\\(cpp\\|hpp\\|h\\|cc\\)\" -not -path \"./python/build/*\" -not -path \"./include/triton/external/*\" -print0 | xargs -0 -n1 clang-format -style=file -i`' ; exit 1)\n \n       - name: Flake8\n-        if: ${{ matrix.runner != 'macos-11.6' }}\n+        if: ${{ matrix.runner != 'macos-10.15' }}\n         run: |\n           pip install flake8\n           flake8 --config ./python/setup.cfg ./python || ( echo '::error::Flake8 failed; see logs for errors.' ; exit 1 )"}]