[{"filename": "include/triton/Conversion/TritonGPUToLLVM/PTXAsmFormat.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -149,7 +149,7 @@ struct PTXBuilder {\n   // Otherwise if the register is only used in the true branch or the false\n   // branch but not both, the register is undefined and ptxas can perform\n   // aggressive optimizations that may lead to incorrect results.\n-  Operand *newOperand(StringRef constraint, bool init = false, int numBits = 0);\n+  Operand *newOperand(StringRef constraint, bool init = false);\n \n   // Create a constant integer operand.\n   Operand *newConstantOperand(int64_t v);"}, {"filename": "lib/Conversion/TritonGPUToLLVM/PTXAsmFormat.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -40,7 +40,7 @@ void PTXBuilder::initOperand(Operand *opr) {\n \n PTXBuilder::Operand *PTXBuilder::newOperand(StringRef constraint, bool init) {\n   // Constraint should be something like \"=r\"\n-  assert(!constraint.empty() && constraint[0] == '=');\n+  assert(constraint.size() == 2 && constraint[0] == '=');\n   auto *opr = newOperand();\n   opr->idx = oprCounter++;\n   opr->constraint = constraint;"}]