[{"filename": "lib/Dialect/TritonGPU/Transforms/UpdateMmaForVolta.cpp", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "file_content_changes": "@@ -321,7 +321,11 @@ class UpdateMmaForVoltaPass\n     {\n       mlir::RewritePatternSet patterns(context);\n       patterns.add<CollectMmaToUpdateForVolta>(context, mmaToUpdate);\n-      if (applyPatternsAndFoldGreedily(m, std::move(patterns)).failed())\n+\n+      GreedyRewriteConfig config;\n+      config.enableRegionSimplification =\n+          false; // The pattern doesn't modify the IR\n+      if (applyPatternsAndFoldGreedily(m, std::move(patterns), config).failed())\n         signalPassFailure();\n     }\n \n@@ -330,6 +334,8 @@ class UpdateMmaForVoltaPass\n       patterns.add<UpdateMMAForMMAv1>(context, mmaToUpdate);\n \n       mlir::GreedyRewriteConfig config;\n+      // Make sure the slice and dot_operand layouts' parent mma are updated\n+      // before updating DotOp or it will get a mismatch parent-encoding.\n       config.useTopDownTraversal = true;\n \n       if (applyPatternsAndFoldGreedily(m, std::move(patterns), config).failed())"}, {"filename": "python/triton/compiler.py", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "file_content_changes": "@@ -891,8 +891,9 @@ def ttir_to_ttgir(mod, num_warps, num_stages, compute_capability):\n     # The combine pass converts blocked layout to mma layout\n     # for dot ops so that pipeline can get shared memory swizzled correctly.\n     pm.add_triton_gpu_combine_pass(compute_capability)\n-    # The update_mma_for_volta pass helps to compute some information for MMA encoding specifically for MMAv1\n-    pm.add_triton_gpu_update_mma_for_volta_pass()\n+    if compute_capability // 10 == 7:\n+        # The update_mma_for_volta pass helps to compute some information for MMA encoding specifically for MMAv1\n+        pm.add_triton_gpu_update_mma_for_volta_pass()\n     pm.add_tritongpu_pipeline_pass(num_stages)\n     # Prefetch must be done after pipeline pass because pipeline pass\n     # extracts slices from the original tensor."}]