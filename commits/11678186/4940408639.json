[{"filename": "include/triton/Analysis/Utility.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "file_content_changes": "@@ -39,6 +39,10 @@ class ReduceOpHelper {\n \n   unsigned getIntraWarpSize();\n \n+  unsigned getInterWarpSizeWithUniqueData();\n+\n+  unsigned getIntraWarpSizeWithUniqueData();\n+\n   unsigned getThreadsReductionAxis();\n \n   SmallVector<unsigned> getScratchConfigBasic();"}, {"filename": "lib/Analysis/Utility.cpp", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "file_content_changes": "@@ -16,12 +16,25 @@ bool ReduceOpHelper::isFastReduction() {\n unsigned ReduceOpHelper::getInterWarpSize() {\n   auto srcReduceDimSize = static_cast<unsigned>(srcShape[axis]);\n   unsigned sizeIntraWarps = getIntraWarpSize();\n+  return std::min(srcReduceDimSize / sizeIntraWarps,\n+                  triton::gpu::getWarpsPerCTA(getSrcLayout())[axis]);\n+}\n+\n+unsigned ReduceOpHelper::getIntraWarpSize() {\n+  auto srcReduceDimSize = static_cast<unsigned>(srcShape[axis]);\n+  return std::min(srcReduceDimSize,\n+                  triton::gpu::getThreadsPerWarp(getSrcLayout())[axis]);\n+}\n+\n+unsigned ReduceOpHelper::getInterWarpSizeWithUniqueData() {\n+  auto srcReduceDimSize = static_cast<unsigned>(srcShape[axis]);\n+  unsigned sizeIntraWarps = getIntraWarpSizeWithUniqueData();\n   return std::min(srcReduceDimSize / sizeIntraWarps,\n                   triton::gpu::getWarpsPerCTAWithUniqueData(\n                       getSrcLayout(), getSrcShape())[axis]);\n }\n \n-unsigned ReduceOpHelper::getIntraWarpSize() {\n+unsigned ReduceOpHelper::getIntraWarpSizeWithUniqueData() {\n   auto srcReduceDimSize = static_cast<unsigned>(srcShape[axis]);\n   return std::min(srcReduceDimSize,\n                   triton::gpu::getThreadsPerWarpWithUniqueData(\n@@ -31,9 +44,8 @@ unsigned ReduceOpHelper::getIntraWarpSize() {\n unsigned ReduceOpHelper::getThreadsReductionAxis() {\n   auto srcLayout = getSrcLayout();\n   auto srcShape = getSrcShape();\n-  return triton::gpu::getThreadsPerWarpWithUniqueData(srcLayout,\n-                                                      srcShape)[axis] *\n-         triton::gpu::getWarpsPerCTAWithUniqueData(srcLayout, srcShape)[axis];\n+  return triton::gpu::getThreadsPerWarp(srcLayout)[axis] *\n+         triton::gpu::getWarpsPerCTA(srcLayout)[axis];\n }\n \n SmallVector<unsigned> ReduceOpHelper::getScratchConfigBasic() {"}, {"filename": "lib/Conversion/TritonGPUToLLVM/ReduceOpToLLVM.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "file_content_changes": "@@ -336,8 +336,8 @@ struct ReduceOpConversion\n                   elemPtrTys[i]);\n     }\n \n-    unsigned sizeIntraWarps = helper.getIntraWarpSize();\n-    unsigned sizeInterWarps = helper.getInterWarpSize();\n+    unsigned sizeIntraWarps = helper.getIntraWarpSizeWithUniqueData();\n+    unsigned sizeInterWarps = helper.getInterWarpSizeWithUniqueData();\n \n     unsigned srcElems = getTotalElemsPerThread(srcTys[0]);\n     auto srcIndices = emitIndices(loc, rewriter, srcLayout, srcTys[0]);"}]