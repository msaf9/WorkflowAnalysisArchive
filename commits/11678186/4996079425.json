[{"filename": "python/triton/ops/cross_entropy.py", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "file_content_changes": "@@ -4,17 +4,6 @@\n import triton.language as tl\n \n \n-def next_power_of_2(n):\n-    n -= 1\n-    n |= n >> 1\n-    n |= n >> 2\n-    n |= n >> 4\n-    n |= n >> 8\n-    n |= n >> 16\n-    n += 1\n-    return n\n-\n-\n def num_warps(N):\n     if N < 2048:\n         return 4\n@@ -24,7 +13,7 @@ def num_warps(N):\n \n \n @triton.heuristics({'num_warps': lambda nargs: num_warps(nargs['N'])})\n-@triton.heuristics({'BLOCK': lambda nargs: next_power_of_2(nargs['N'])})\n+@triton.heuristics({'BLOCK': lambda nargs: triton.next_power_of_2(nargs['N'])})\n @triton.jit\n def _forward(LOGITS, PROBS, IDX, LOSS, N, BLOCK: tl.constexpr):\n     row = tl.program_id(0)\n@@ -49,7 +38,7 @@ def _forward(LOGITS, PROBS, IDX, LOSS, N, BLOCK: tl.constexpr):\n \n \n @triton.heuristics({'num_warps': lambda nargs: num_warps(nargs['N'])})\n-@triton.heuristics({'BLOCK': lambda nargs: next_power_of_2(nargs['N'])})\n+@triton.heuristics({'BLOCK': lambda nargs: triton.next_power_of_2(nargs['N'])})\n @triton.jit\n def _backward(PROBS, IDX, DPROBS, N, BLOCK: tl.constexpr):\n     row = tl.program_id(0)"}]