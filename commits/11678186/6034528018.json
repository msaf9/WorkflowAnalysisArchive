[{"filename": "lib/Conversion/TritonGPUToLLVM/LoadStoreOpToLLVM.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -749,7 +749,7 @@ struct StoreAsyncOpConversion\n         typeConverter->convertType(rewriter.getI8Type()), 3);\n \n     auto threadId = getThreadId(rewriter, loc);\n-    Value pred = int_val(1, 1);\n+    Value pred = uint_val(1, 1);\n \n     auto llCoord = getTypeConverter()->unpackLLElements(loc, llDst, rewriter,\n                                                         dst.getType());"}, {"filename": "lib/Conversion/TritonGPUToLLVM/Utility.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "file_content_changes": "@@ -34,8 +34,8 @@ Value createIndexConstant(OpBuilder &builder, Location loc,\n \n // Create an integer constant of \\param width bits.\n Value createLLVMIntegerConstant(OpBuilder &builder, Location loc, short width,\n-                                int64_t value) {\n-  Type ty = builder.getIntegerType(width);\n+                                int64_t value, bool isSigned) {\n+  Type ty = builder.getIntegerType(width, isSigned);\n   return builder.create<LLVM::ConstantOp>(loc, ty,\n                                           builder.getIntegerAttr(ty, value));\n }"}, {"filename": "lib/Conversion/TritonGPUToLLVM/Utility.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "file_content_changes": "@@ -116,7 +116,9 @@\n #define f64_val(...) LLVM::createConstantF64(loc, rewriter, __VA_ARGS__)\n #define i32_val(...) LLVM::createConstantI32(loc, rewriter, __VA_ARGS__)\n #define int_val(width, val)                                                    \\\n-  LLVM::createLLVMIntegerConstant(rewriter, loc, width, val)\n+  LLVM::createLLVMIntegerConstant(rewriter, loc, width, val, true)\n+#define uint_val(width, val)                                                   \\\n+  LLVM::createLLVMIntegerConstant(rewriter, loc, width, val, false)\n #define tid_val() getThreadId(rewriter, loc)\n \n // Attributes\n@@ -203,7 +205,7 @@ Value createIndexConstant(OpBuilder &builder, Location loc,\n \n /// Create an integer constant of \\param width bits.\n Value createLLVMIntegerConstant(OpBuilder &builder, Location loc, short width,\n-                                int64_t value);\n+                                int64_t value, bool isSigned);\n \n /// Usage of macro load_dsmem\n /// (1) load_dsmem(addr, ctaId)"}]