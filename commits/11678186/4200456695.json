[{"filename": "python/setup.py", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "file_content_changes": "@@ -57,10 +57,19 @@ def get_pybind11_package_info():\n def get_llvm_package_info():\n     # download if nothing is installed\n     system = platform.system()\n-    system_suffix = {\"Linux\": \"linux-gnu-ubuntu-18.04\", \"Darwin\": \"apple-darwin\"}[system]\n+    if system == \"Darwin\":\n+        system_suffix = \"apple-darwin\"\n+    elif system == \"Linux\":\n+        vglibc = tuple(map(int, platform.libc_ver()[1].split('.')))\n+        vglibc = vglibc[0] * 100 + vglibc[1]\n+        linux_suffix = 'ubuntu-18.04' if vglibc > 217 else 'centos-7'\n+        system_suffix = f\"linux-gnu-{linux_suffix}\"\n+    else:\n+        raise RuntimeError(f\"unsupported system: {system}\")\n     use_assert_enabled_llvm = check_env_flag(\"TRITON_USE_ASSERT_ENABLED_LLVM\", \"False\")\n-    name = 'llvm+mlir-15.0.7-x86_64-{}-{}'.format(system_suffix, \"assert\" if use_assert_enabled_llvm else \"release\")\n-    url = \"https://github.com/ptillet/triton-llvm-releases/releases/download/llvm-15.0.7-8dfdcc7b7bf6/{}.tar.xz\".format(name)\n+    release_suffix = \"assert\" if use_assert_enabled_llvm else \"release\"\n+    name = f'llvm+mlir-15.0.7-x86_64-{system_suffix}-{release_suffix}'\n+    url = f\"https://github.com/ptillet/triton-llvm-releases/releases/download/llvm-15.0.7-8dfdcc7b7bf6/{name}.tar.xz\"\n     return Package(\"llvm\", name, url, \"lib\", \"LLVM_INCLUDE_DIRS\", \"LLVM_LIBRARY_DIR\", \"LLVM_SYSPATH\")\n \n "}]