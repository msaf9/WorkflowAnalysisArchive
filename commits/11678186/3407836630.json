[{"filename": "lib/Target/LLVMIR/LLVMIRTranslation.cpp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "file_content_changes": "@@ -189,7 +189,7 @@ translateTritonGPUToLLVMIR(llvm::LLVMContext *llvmContext,\n \n   llvm::SMDiagnostic err;\n   for (auto &lib : externLibs) {\n-    if (!linkExternLib(*llvmir, lib.second))\n+    if (linkExternLib(*llvmir, lib.second))\n       return nullptr;\n   }\n \n@@ -223,7 +223,7 @@ bool linkExternLib(llvm::Module &module, llvm::StringRef path) {\n   auto extMod = llvm::parseIRFile(path, err, ctx);\n   if (!extMod) {\n     llvm::errs() << \"Failed to load \" << path;\n-    return false;\n+    return true;\n   }\n \n   extMod->setTargetTriple(module.getTargetTriple());\n@@ -232,10 +232,10 @@ bool linkExternLib(llvm::Module &module, llvm::StringRef path) {\n   if (llvm::Linker::linkModules(module, std::move(extMod),\n                                 llvm::Linker::Flags::LinkOnlyNeeded)) {\n     llvm::errs() << \"Failed to link \" << path;\n-    return false;\n+    return true;\n   }\n \n-  return true;\n+  return false;\n }\n \n } // namespace triton"}, {"filename": "lib/Target/PTX/PTXTranslation.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -80,7 +80,7 @@ static std::string llir_to_ptx(llvm::Module *module, int capability, int ptx) {\n                                           .parent_path() /\n                                       \"python\" / \"triton\" / \"language\" /\n                                       \"libdevice.10.bc\";\n-    if (!mlir::triton::linkExternLib(*module, libdevice.string()))\n+    if (mlir::triton::linkExternLib(*module, libdevice.string()))\n       llvm::errs() << \"link failed for: \" << libdevice.string();\n   }\n "}]