[{"filename": "include/triton/Dialect/Triton/IR/TritonOps.td", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -479,7 +479,7 @@ def TT_PrintOp : TT_Op<\"print\", [MemoryEffects<[MemWrite]>]>,\n     format are generated automatically from the arguments.\n   }];\n   let assemblyFormat = [{\n-    $prefix attr-dict `:` ($args^ `:` type($args))?\n+    $prefix attr-dict (`:` $args^ `:` type($args))?\n   }];\n }\n "}, {"filename": "test/Conversion/triton_ops.mlir", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "file_content_changes": "@@ -154,3 +154,12 @@ tt.func @dot_ops_infer(%ptr: !tt.ptr<f32>, %v : f32) {\n   tt.store %ptr1x1, %r4 : tensor<1x1xf32>\n   tt.return\n }\n+\n+// CHECK-LABEL: @print_no_arg\n+tt.func @print_no_arg(%arg0: !tt.ptr<f32>) {\n+// CHECK: tt.print \"test\"\n+  tt.print \"test\"\n+  %0 = tt.load %arg0 {cache = 1 : i32, evict = 1 : i32, isVolatile = false} : f32\n+  tt.store %arg0, %0 {cache = 1 : i32, evict = 1 : i32} : f32\n+  tt.return\n+}"}]