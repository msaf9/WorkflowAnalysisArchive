[{"filename": "python/triton/code_gen.py", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "file_content_changes": "@@ -509,16 +509,15 @@ def visit_UnaryOp(self, node):\n         if type(node.op) == ast.Not:\n             assert isinstance(op, triton.language.constexpr), \"`not` only supported for constexpr at the moment\"\n             return triton.language.constexpr(not op)\n-        if isinstance(op, triton.language.constexpr):\n-            op = op.value\n         fn = {\n             ast.USub: '__neg__',\n             ast.UAdd: '__pos__',\n             ast.Invert: '__invert__',\n         }[type(node.op)]\n-        if is_triton_tensor(op):\n-            return getattr(op, fn)(_builder=self.builder)\n-        return getattr(op, fn)()\n+        if isinstance(op, triton.language.constexpr):\n+            return triton.language.constexpr(getattr(op.value, fn)())\n+        assert is_triton_tensor(op)\n+        return getattr(op, fn)(_builder=self.builder)\n \n     def visit_While(self, node):\n         current_bb = self.builder.get_insert_block()"}]