[{"filename": "lib/Conversion/TritonGPUToLLVM/TritonGPUToLLVM.cpp", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "file_content_changes": "@@ -4420,6 +4420,7 @@ struct AtomicRMWOpConversion\n             rewriter, loc, getTypeConverter()->getIndexType(), ii);\n         rmwVal = insert_element(vecTy, rmwVal, valElements[i + ii], iiVal);\n       }\n+\n       Value rmwPtr = ptrElements[i];\n       Value rmwMask = maskElements[i];\n       rmwMask = and_(rmwMask, mask);\n@@ -4477,9 +4478,10 @@ struct AtomicRMWOpConversion\n       atom.o(rmwOp).o(sTy);\n       if (valueTy) {\n         atom(dstOpr, ptrOpr, valOpr).predicate(rmwMask);\n-        auto ret = ptxBuilderAtomicRMW.launch(rewriter, loc, valueElemTy);\n+        auto retType = vec == 1 ? valueElemTy : vecTy;\n+        auto ret = ptxBuilderAtomicRMW.launch(rewriter, loc, retType);\n         for (int ii = 0; ii < vec; ++ii) {\n-          resultVals[i * vec + ii] =\n+          resultVals[i + ii] =\n               vec == 1 ? ret : extract_element(valueElemTy, ret, idx_val(ii));\n         }\n       } else {"}]