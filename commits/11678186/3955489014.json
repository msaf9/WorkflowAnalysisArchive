[{"filename": "lib/Analysis/Allocation.cpp", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "file_content_changes": "@@ -60,22 +60,20 @@ bool isMmaToDotShortcut(MmaEncodingAttr &mmaLayout,\n          dotOperandLayout.getParent() == mmaLayout;\n }\n \n-\n-\n SmallVector<unsigned>\n getScratchConfigForCvtLayout(triton::gpu::ConvertLayoutOp op, unsigned &inVec,\n                              unsigned &outVec) {\n   auto srcTy = op.src().getType().cast<RankedTensorType>();\n   auto dstTy = op.result().getType().cast<RankedTensorType>();\n   Attribute srcLayout = srcTy.getEncoding();\n   Attribute dstLayout = dstTy.getEncoding();\n-  \n+\n   // MmaToDotShortcut doesn't use shared mem\n-  if(auto mmaLayout = srcLayout.dyn_cast<MmaEncodingAttr>())\n-    if(auto dotOperandLayout = dstLayout.dyn_cast<DotOperandEncodingAttr>())\n-      if(isMmaToDotShortcut(mmaLayout, dotOperandLayout))\n+  if (auto mmaLayout = srcLayout.dyn_cast<MmaEncodingAttr>())\n+    if (auto dotOperandLayout = dstLayout.dyn_cast<DotOperandEncodingAttr>())\n+      if (isMmaToDotShortcut(mmaLayout, dotOperandLayout))\n         return {};\n-        \n+\n   assert(srcLayout && dstLayout &&\n          \"Unexpect layout in getScratchConfigForCvtLayout()\");\n   auto [inOrd, outOrd] = getCvtOrder(srcLayout, dstLayout);"}]