[{"filename": "python/triton/compiler/make_launcher.py", "status": "modified", "additions": 7, "deletions": 13, "changes": 20, "file_content_changes": "@@ -202,17 +202,14 @@ def format_of(ty):\n         return NULL;\n       }}\n \n-      if (launch_enter_hook != Py_None) {{\n-        PyObject_CallObject(launch_enter_hook, args);\n+      if (launch_enter_hook != Py_None && !PyObject_CallObject(launch_enter_hook, args)) {{\n+        return NULL;\n       }}\n \n       // raise exception asap\n       {\"; \".join([f\"DevicePtrInfo ptr_info{i} = getPointer(_arg{i}, {i}); if (!ptr_info{i}.valid) return NULL;\" if ty[0] == \"*\" else \"\" for i, ty in signature.items()])};\n       _launch(gridX, gridY, gridZ, num_warps, shared_memory, (hipStream_t)_stream, (hipFunction_t)_function{', ' + ', '.join(f\"ptr_info{i}.dev_ptr\" if ty[0]==\"*\" else f\"_arg{i}\" for i, ty in signature.items()) if len(signature) > 0 else ''});\n-      if (launch_exit_hook != Py_None) {{\n-        PyObject_CallObject(launch_exit_hook, args);\n-      }}\n-      if (PyErr_Occurred()) {{\n+      if (launch_exit_hook != Py_None && !PyObject_CallObject(launch_exit_hook, args)) {{\n         return NULL;\n       }}\n \n@@ -386,22 +383,19 @@ def format_of(ty):\n     return NULL;\n   }}\n \n-  if (launch_enter_hook != Py_None) {{\n-    PyObject_CallObject(launch_enter_hook, args);\n+  if (launch_enter_hook != Py_None && !PyObject_CallObject(launch_enter_hook, args)) {{\n+    return NULL;\n   }}\n \n \n   // raise exception asap\n   {\"; \".join([f\"DevicePtrInfo ptr_info{i} = getPointer(_arg{i}, {i}); if (!ptr_info{i}.valid) return NULL;\" if ty[0] == \"*\" else \"\" for i, ty in signature.items()])};\n   _launch(gridX, gridY, gridZ, num_warps, num_ctas, clusterDimX, clusterDimY, clusterDimZ, shared_memory, (CUstream)_stream, (CUfunction)_function{', ' + ', '.join(f\"ptr_info{i}.dev_ptr\" if ty[0]==\"*\" else f\"_arg{i}\"for i, ty in signature.items()) if len(signature) > 0 else ''});\n \n-  if (launch_exit_hook != Py_None) {{\n-    PyObject_CallObject(launch_exit_hook, args);\n-  }}\n-\n-  if(PyErr_Occurred()) {{\n+  if (launch_exit_hook != Py_None && !PyObject_CallObject(launch_exit_hook, args)) {{\n     return NULL;\n   }}\n+\n   // return None\n   Py_INCREF(Py_None);\n   return Py_None;"}]