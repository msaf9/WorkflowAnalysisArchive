[{"filename": "include/triton/Analysis/Utility.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "file_content_changes": "@@ -61,8 +61,6 @@ class ReduceOpHelper {\n   int axis;\n };\n \n-bool isSharedEncoding(Value value);\n-\n bool maybeSharedAllocationOp(Operation *op);\n \n bool maybeAliasOp(Operation *op);"}, {"filename": "include/triton/Dialect/TritonGPU/IR/Dialect.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "file_content_changes": "@@ -74,6 +74,9 @@ bool isaDistributedLayout(Attribute layout);\n \n } // namespace gpu\n } // namespace triton\n+\n+bool isSharedEncoding(Value value);\n+\n } // namespace mlir\n \n #endif // TRITON_DIALECT_TRITONGPU_IR_DIALECT_H_"}, {"filename": "lib/Analysis/Allocation.cpp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "file_content_changes": "@@ -4,7 +4,6 @@\n #include \"mlir/Analysis/SliceAnalysis.h\"\n #include \"mlir/Dialect/Tensor/IR/Tensor.h\"\n #include \"triton/Analysis/Alias.h\"\n-#include \"triton/Analysis/Utility.h\"\n #include \"triton/Dialect/TritonGPU/IR/Dialect.h\"\n #include \"llvm/ADT/SmallVector.h\"\n "}, {"filename": "lib/Analysis/Utility.cpp", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "file_content_changes": "@@ -111,15 +111,6 @@ bool ReduceOpHelper::isSupportedLayout() {\n   return false;\n }\n \n-bool isSharedEncoding(Value value) {\n-  auto type = value.getType();\n-  if (auto tensorType = type.dyn_cast<RankedTensorType>()) {\n-    auto encoding = tensorType.getEncoding();\n-    return encoding && encoding.isa<triton::gpu::SharedEncodingAttr>();\n-  }\n-  return false;\n-}\n-\n bool maybeSharedAllocationOp(Operation *op) {\n   // TODO(Keren): This function can be replaced by adding\n   // MemoryEffectOpInterface. We can then use the MemoryEffectOpInterface to"}, {"filename": "lib/Dialect/TritonGPU/IR/Dialect.cpp", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "file_content_changes": "@@ -356,6 +356,16 @@ bool isaDistributedLayout(Attribute layout) {\n \n } // namespace gpu\n } // namespace triton\n+\n+bool isSharedEncoding(Value value) {\n+  auto type = value.getType();\n+  if (auto tensorType = type.dyn_cast<RankedTensorType>()) {\n+    auto encoding = tensorType.getEncoding();\n+    return encoding && encoding.isa<triton::gpu::SharedEncodingAttr>();\n+  }\n+  return false;\n+}\n+\n } // namespace mlir\n \n static LogicalResult parseIntAttrValue(AsmParser &parser, Attribute attr,"}, {"filename": "lib/Dialect/TritonGPU/IR/Traits.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -1,5 +1,5 @@\n+#include \"triton/Dialect/TritonGPU/IR/Dialect.h\"\n #include \"triton/Dialect/TritonGPU/IR/Traits.h\"\n-#include \"triton/Analysis/Utility.h\"\n \n mlir::LogicalResult\n mlir::OpTrait::impl::verifyResultsAreSharedEncoding(Operation *op) {"}, {"filename": "lib/Dialect/TritonGPU/Transforms/Prefetch.cpp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "file_content_changes": "@@ -27,7 +27,6 @@\n //===----------------------------------------------------------------------===//\n \n #include \"mlir/IR/IRMapping.h\"\n-#include \"triton/Analysis/Utility.h\"\n #include \"triton/Dialect/TritonGPU/IR/Dialect.h\"\n #include \"triton/Dialect/TritonGPU/Transforms/Passes.h\"\n "}, {"filename": "lib/Dialect/TritonGPU/Transforms/RemoveLayoutConversions.cpp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "file_content_changes": "@@ -13,7 +13,6 @@\n #include \"mlir/Transforms/GreedyPatternRewriteDriver.h\"\n #include \"mlir/Transforms/Passes.h\"\n #include \"mlir/Transforms/RegionUtils.h\"\n-#include \"triton/Analysis/Utility.h\"\n #include \"triton/Dialect/TritonGPU/IR/Dialect.h\"\n #include \"triton/Dialect/TritonGPU/Transforms/Passes.h\"\n #include \"triton/Dialect/TritonGPU/Transforms/TritonGPUConversion.h\""}]