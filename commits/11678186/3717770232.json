[{"filename": "CMakeLists.txt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "file_content_changes": "@@ -19,9 +19,9 @@ option(TRITON_BUILD_PYTHON_MODULE \"Build Python Triton bindings\" OFF)\n #  used conditionally in this file and by lit tests\n find_package(Python3 REQUIRED COMPONENTS Development Interpreter)\n \n-# Customized release build type with assertions\n-set(CMAKE_C_FLAGS_RELWITHDEBINFOANDASSERTIONS \"-O2 -g\")\n-set(CMAKE_CXX_FLAGS_RELWITHDEBINFOANDASSERTIONS \"-O2 -g\")\n+# Customized release build type with assertions: TritonRelBuildWithAsserts\n+set(CMAKE_C_FLAGS_TRITONRELBUILDWITHASSERTS \"-O2 -g\")\n+set(CMAKE_CXX_FLAGS_TRITONRELBUILDWITHASSERTS \"-O2 -g\")\n \n # Default build type\n if(NOT CMAKE_BUILD_TYPE)"}, {"filename": "lib/Conversion/TritonToTritonGPU/TritonToTritonGPU.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -230,7 +230,7 @@ struct TritonDotPattern : public OpConversionPattern<triton::DotOp> {\n                   ConversionPatternRewriter &rewriter) const override {\n     RankedTensorType origType = op.getType().cast<RankedTensorType>();\n     auto origShape = origType.getShape();\n-    auto typeConverter = static_cast<TritonGPUTypeConverter*>(getTypeConverter());\n+    auto typeConverter = getTypeConverter<TritonGPUTypeConverter>();\n     int numWarps = typeConverter->getNumWarps();\n \n     SmallVector<unsigned> retSizePerThread = {1, 1};"}, {"filename": "python/setup.py", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "file_content_changes": "@@ -24,11 +24,11 @@ def get_build_type():\n         return \"Debug\"\n     elif check_env_flag(\"REL_WITH_DEB_INFO\"):\n         return \"RelWithDebInfo\"\n-    elif check_env_flag(\"REL_WITH_DEB_INFO_AND_ASSERTIONS\"):\n-        return \"RelWithDebInfoAndAssertions\"\n+    elif check_env_flag(\"TRITON_REL_BUILD_WITH_ASSERTS\"):\n+        return \"TritonRelBuildWithAsserts\"\n     else:\n         # TODO: change to release when stable enough\n-        return \"RelWithDebInfoAndAssertions\"\n+        return \"TritonRelBuildWithAsserts\"\n \n \n # --- third party packages -----"}]