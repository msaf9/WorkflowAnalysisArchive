[{"filename": "python/setup.py", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "file_content_changes": "@@ -20,6 +20,7 @@\n def check_env_flag(name: str, default: str = \"\") -> bool:\n     return os.getenv(name, default).upper() in [\"ON\", \"1\", \"YES\", \"TRUE\", \"Y\"]\n \n+\n def get_build_type():\n     if check_env_flag(\"DEBUG\"):\n         return \"Debug\"\n@@ -39,11 +40,13 @@ class Package(NamedTuple):\n     include_flag: str\n     lib_flag: str\n \n+\n def get_pybind11_package_info():\n     name = \"pybind11-2.10.0\"\n     url = \"https://github.com/pybind/pybind11/archive/refs/tags/v2.10.0.tar.gz\"\n     return Package(\"pybind11\", name, url, \"include/pybind11/pybind11.h\", \"PYBIND11_INCLUDE_DIR\", \"\")\n \n+\n def get_llvm_package_info():\n     # download if nothing is installed\n     system = platform.system()\n@@ -57,6 +60,7 @@ def get_llvm_package_info():\n         url = \"https://github.com/llvm/llvm-project/releases/download/llvmorg-14.0.0/{}.tar.xz\".format(name)\n     return Package(\"llvm\", name, url, \"lib\", \"LLVM_INCLUDE_DIRS\", \"LLVM_LIBRARY_DIR\")\n \n+\n def get_thirdparty_packages(triton_cache_path):\n     packages = [get_pybind11_package_info(), get_llvm_package_info()]\n     thirdparty_cmake_args = []\n@@ -82,6 +86,7 @@ def get_thirdparty_packages(triton_cache_path):\n \n # ---- cmake extension ----\n \n+\n class CMakeExtension(Extension):\n     def __init__(self, name, path, sourcedir=\"\"):\n         Extension.__init__(self, name, sources=[])"}]