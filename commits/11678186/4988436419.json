[{"filename": "lib/Dialect/TritonGPU/Transforms/AccelerateMatmul.cpp", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "file_content_changes": "@@ -44,11 +44,13 @@ SmallVector<int64_t, 2> mmaVersionToShapePerWarp(int version) {\n SmallVector<unsigned, 2> warpsPerTileV2(triton::DotOp dotOp,\n                                         const ArrayRef<int64_t> shape,\n                                         int numWarps) {\n-  auto slices = mlir::getSlice(dotOp);\n-  if (llvm::find_if(slices, [](Operation *op) {\n-        return isa<triton::DotOp>(op);\n-      }) != slices.end())\n-    return {(unsigned)numWarps, 1};\n+  auto filter = [&dotOp](Operation *op) {\n+    return op->getParentRegion() == dotOp->getParentRegion();\n+  };\n+  auto slices = mlir::getSlice(dotOp, filter);\n+  for (Operation *op : slices)\n+    if (isa<triton::DotOp>(op) && (op != dotOp))\n+      return {(unsigned)numWarps, 1};\n \n   SmallVector<unsigned, 2> ret = {1, 1};\n   SmallVector<int64_t, 2> shapePerWarp = {16, 8};"}]