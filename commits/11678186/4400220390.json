[{"filename": "lib/Dialect/TritonGPU/Transforms/RemoveLayoutConversions.cpp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "file_content_changes": "@@ -312,7 +312,8 @@ class RematerializeForward : public mlir::RewritePattern {\n     auto dstEncoding =\n         cvt.getResult().getType().cast<RankedTensorType>().getEncoding();\n     // XXX: why is this needed?\n-    if (srcEncoding.isa<triton::gpu::SliceEncodingAttr>())\n+    if (srcEncoding.isa<triton::gpu::SliceEncodingAttr>() ||\n+        srcEncoding.isa<triton::gpu::MmaEncodingAttr>())\n       return failure();\n     // Step 1: Find all the operations that are forward slices of the\n     // conversion.\n@@ -326,9 +327,6 @@ class RematerializeForward : public mlir::RewritePattern {\n     };\n     auto filter = [&](Operation *op) { return !stop(op); };\n     mlir::getForwardSlice(cvt.getResult(), &cvtSlices, filter);\n-    if (cvtSlices.empty()) {\n-      return failure();\n-    }\n     // Step 2: Check if the conversion can be pushed forward.\n     for (Operation *op : cvtSlices) {\n       if (stop(op)) {\n@@ -374,6 +372,8 @@ class RematerializeForward : public mlir::RewritePattern {\n       if (!stop(op))\n         candidates.insert(op);\n     }\n+    if (candidates.empty())\n+      return failure();\n     // Step 4: Push the conversion forward.\n     pushConversionForward(cvt, candidates, rewriter);\n     return success();"}]