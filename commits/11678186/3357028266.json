[{"filename": "python/src/triton.cc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "file_content_changes": "@@ -158,7 +158,6 @@ void init_triton_ir(py::module &&m) {\n       .def(\"is_fp16\", &mlir::Type::isF16);\n \n   py::class_<mlir::Value>(m, \"value\")\n-      .def(py::init<>())\n       .def(\"set_attr\",\n            [](mlir::Value &self, std::string &name,\n               mlir::Attribute &attr) -> void {\n@@ -379,10 +378,7 @@ void init_triton_ir(py::module &&m) {\n       .def(\"ret\",\n            [](mlir::OpBuilder &self, std::vector<mlir::Value> &vals) -> void {\n              auto loc = self.getUnknownLoc();\n-             if (vals.empty()) {\n-               self.create<mlir::ReturnOp>(loc);\n-             } else\n-               self.create<mlir::ReturnOp>(loc, vals);\n+             self.create<mlir::ReturnOp>(loc, vals);\n            })\n       .def(\"call\",\n            [](mlir::OpBuilder &self, mlir::FuncOp &func,"}]