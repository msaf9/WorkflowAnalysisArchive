[{"filename": "lib/Conversion/TritonGPUToLLVM/TritonGPUToLLVM.cpp", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "file_content_changes": "@@ -1782,7 +1782,6 @@ struct PrintfOpConversion\n                   ConversionPatternRewriter &rewriter) const override {\n     auto loc = op->getLoc();\n     SmallVector<Value, 16> operands;\n-    operands.push_back(getThreadId(rewriter, loc));\n     for (auto operand : adaptor.getOperands()) {\n       auto sub_operands = getElementsFromStruct(loc, operand, rewriter);\n       for (auto elem : sub_operands) {\n@@ -1797,7 +1796,7 @@ struct PrintfOpConversion\n     }\n \n     for (size_t i = 1; i < operands.size(); ++i) {\n-      os << getFormatSubstr(operands[i]) << \", \";\n+      os << \", \" << getFormatSubstr(operands[i]);\n     }\n     llPrintf(formatStr, operands, rewriter);\n     rewriter.eraseOp(op);"}, {"filename": "lib/Dialect/TritonGPU/Transforms/Combine.cpp", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "file_content_changes": "@@ -59,6 +59,11 @@ class DecomposeDotOperand : public mlir::RewritePattern {\n       if(dstParentMma.getVersion() == 1 ||\n          dstParentMma.getWarpsPerCTA()[1] > 1)\n         return mlir::failure();\n+      SetVector<Operation*> bwdSlices;\n+      mlir::getBackwardSlice(convert.getResult(), &bwdSlices);\n+      if(llvm::find_if(bwdSlices, [](Operation *op) { return isa<triton::DotOp>(op); }) == bwdSlices.end())\n+        return mlir::failure();\n+      \n       auto tmpType =\n           RankedTensorType::get(dstType.getShape(), dstType.getElementType(), dstParentMma);\n       auto tmp = rewriter.create<triton::gpu::ConvertLayoutOp>("}]