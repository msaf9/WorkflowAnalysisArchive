[{"filename": "lib/Conversion/TritonGPUToLLVM/TritonGPUToLLVM.cpp", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "file_content_changes": "@@ -1024,18 +1024,18 @@ struct LoadOpConversion\n           ptxBuilder.newAddrOperand(ptrElems[vecStart], \"l\", in_off);\n \n       // Define the instruction opcode\n-      auto &ld = *ptxBuilder.create<>(\"ld\")\n-                      ->o(\"volatile\", op.isVolatile())\n-                      .global()\n-                      .o(\"ca\", op.cache() == triton::CacheModifier::CA)\n-                      .o(\"cg\", op.cache() == triton::CacheModifier::CG)\n-                      .o(\"L1::evict_first\",\n-                         op.evict() == triton::EvictionPolicy::EVICT_FIRST)\n-                      .o(\"L1::evict_last\",\n-                         op.evict() == triton::EvictionPolicy::EVICT_LAST)\n-                      .o(\"L1::cache_hint\", hasL2EvictPolicy)\n-                      .v(nWords)\n-                      .b(width);\n+      auto &ld = ptxBuilder.create<>(\"ld\")\n+                     ->o(\"volatile\", op.isVolatile())\n+                     .global()\n+                     .o(\"ca\", op.cache() == triton::CacheModifier::CA)\n+                     .o(\"cg\", op.cache() == triton::CacheModifier::CG)\n+                     .o(\"L1::evict_first\",\n+                        op.evict() == triton::EvictionPolicy::EVICT_FIRST)\n+                     .o(\"L1::evict_last\",\n+                        op.evict() == triton::EvictionPolicy::EVICT_LAST)\n+                     .o(\"L1::cache_hint\", hasL2EvictPolicy)\n+                     .v(nWords)\n+                     .b(width);\n \n       PTXBuilder::Operand *evictOpr{};\n \n@@ -1051,7 +1051,7 @@ struct LoadOpConversion\n       if (other) {\n         for (size_t ii = 0; ii < nWords; ++ii) {\n           PTXInstr &mov =\n-              *ptxBuilder.create<>(\"mov\")->o(\"u\" + std::to_string(width));\n+              ptxBuilder.create<>(\"mov\")->o(\"u\" + std::to_string(width));\n \n           size_t size = width / valueElemNbits;\n "}]