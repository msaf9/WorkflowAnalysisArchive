[{"filename": "lib/Conversion/TritonGPUToLLVM/ConvertLayoutOpToLLVM.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -346,7 +346,7 @@ struct ConvertLayoutOpConversion\n     SmallVector<unsigned> numCTAsEachRep(rank, 1);\n     SmallVector<unsigned> shapePerCTATile = getShapePerCTATile(layout, shape);\n     SmallVector<int64_t> shapePerCTA = getShapePerCTA(layout, shape);\n-    auto elemTy = type.getElementType();\n+    auto elemTy = getTypeConverter()->convertType(type.getElementType());\n \n     int ctaId = 0;\n "}, {"filename": "lib/Dialect/TritonGPU/Transforms/OptimizeDotOperands.cpp", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "file_content_changes": "@@ -247,7 +247,8 @@ class TritonGPUOptimizeDotOperandsPass\n \n     mlir::RewritePatternSet patterns(context);\n     patterns.add<ConvertTransConvert>(context);\n-    patterns.add<MoveOpAfterLayoutConversion>(context);\n+    if (triton::gpu::TritonGPUDialect::getComputeCapability(m) >= 80)\n+      patterns.add<MoveOpAfterLayoutConversion>(context);\n     patterns.add<FuseTransHopper>(context);\n     if (applyPatternsAndFoldGreedily(m, std::move(patterns)).failed())\n       signalPassFailure();"}]