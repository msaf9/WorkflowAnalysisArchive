[{"filename": "python/test/unit/hopper/test_gemm.py", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "file_content_changes": "@@ -29,7 +29,6 @@\n \n import triton\n import triton.language as tl\n-from .utils import get_proper_err, get_variant_golden\n \n \n @triton.jit\n@@ -127,14 +126,12 @@ def test_gemm_no_scf(M, N, K, NUM_CTAS, NUM_WARPS, TRANS_A, TRANS_B, OUTPUT_TYPE\n     a_f32 = a.to(torch.float32)\n     b_f32 = b.to(torch.float32)\n     golden = torch.matmul(a_f32, b_f32)\n-    golden_variant = get_variant_golden(a_f32, b_f32)\n-    golden_abs_err, golden_rel_err = get_proper_err(golden, golden_variant)\n     torch.set_printoptions(profile=\"full\")\n     assert_close(\n         c,\n         golden,\n-        rtol=max(1e-2, 1.1 * golden_rel_err),\n-        atol=max(1e-3, 1.1 * golden_abs_err),\n+        rtol=1e-2,\n+        atol=1e-3,\n         check_dtype=False)\n \n \n@@ -342,9 +339,6 @@ def test_gemm(BLOCK_M, BLOCK_N, BLOCK_K, NUM_WARPS, NUM_CTAS, M, N, K, TRANS_A,\n     ]:\n         pytest.skip('Tensor-likes are not close!')\n \n-    if NUM_CTAS > 1 and NUM_WARPS == 8:\n-        pytest.skip('Tensor-likes are not close!')\n-\n     # with ENABLE_TMA=1 and ENABLE_MMA_V3=1\n     if ENABLE_WS:\n         # example:"}]