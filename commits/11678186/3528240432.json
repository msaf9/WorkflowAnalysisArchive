[{"filename": "lib/Conversion/TritonGPUToLLVM/TritonGPUToLLVM.cpp", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "file_content_changes": "@@ -4249,14 +4249,9 @@ struct MMA16816ConversionHelper {\n     auto aTensorTy = tensor.getType().cast<RankedTensorType>();\n     auto layout = aTensorTy.getEncoding().cast<SharedEncodingAttr>();\n     auto order = layout.getOrder();\n-    bool needTrans = order[0] != 1;\n-    llvm::outs() << \"transA.order: \" << needTrans << \"\\n\";\n \n     SmallVector<int64_t> shape(aTensorTy.getShape().begin(),\n                                aTensorTy.getShape().end());\n-    if (needTrans)\n-      std::swap(shape[0], shape[1]);\n-\n     ValueTable ha;\n     std::function<void(int, int)> loadFn;\n     auto [matShapeM, matShapeN, matShapeK] = getMmaMatShape(aTensorTy);\n@@ -4296,13 +4291,9 @@ struct MMA16816ConversionHelper {\n     auto tensorTy = tensor.getType().cast<RankedTensorType>();\n     auto layout = tensorTy.getEncoding().cast<SharedEncodingAttr>();\n     auto order = layout.getOrder();\n-    bool needTrans = order[0] != 1;\n-    llvm::outs() << \"transB.order: \" << needTrans << \"\\n\";\n \n     SmallVector<int64_t> shape(tensorTy.getShape().begin(),\n                                tensorTy.getShape().end());\n-    if (needTrans)\n-      std::swap(shape[0], shape[1]);\n \n     auto [matShapeM, matShapeN, matShapeK] = getMmaMatShape(tensorTy);\n     auto [mmaInstrM, mmaInstrN, mmaInstrK] = getMmaInstrShape(tensorTy);"}]