[{"filename": "lib/Target/LLVMIR/LLVMIRTranslation.cpp", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "file_content_changes": "@@ -260,15 +260,6 @@ translateLLVMToLLVMIR(llvm::LLVMContext *llvmContext, mlir::ModuleOp module) {\n       return nullptr;\n   }\n \n-  auto optPipeline = mlir::makeOptimizingTransformer(\n-      /*optLevel=*/3, /*sizeLevel=*/0,\n-      /*targetMachine=*/nullptr);\n-\n-  if (auto err = optPipeline(llvmModule.get())) {\n-    llvm::errs() << \"Failed to optimize LLVM IR \" << err << \"\\n\";\n-    return nullptr;\n-  }\n-\n   for (auto &func : llvmModule->functions()) {\n     auto it = nvvmMetadata.find(func.getName());\n     if (it != nvvmMetadata.end())\n@@ -310,7 +301,6 @@ translateTritonGPUToLLVMIR(llvm::LLVMContext *llvmContext,\n     return nullptr;\n   }\n \n-  // llvm::outs() << module << \"\\n\";\n   auto llvmIR = translateLLVMToLLVMIR(llvmContext, module);\n   if (!llvmIR) {\n     llvm::errs() << \"Translate to LLVM IR failed\";"}, {"filename": "python/test/regression/test_performance.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -56,7 +56,7 @@ def nvsmi(attrs):\n     'a100': {\n         (512, 512, 512): {'float16': 0.08, 'float32': 0.13, 'int8': 0.05},\n         (1024, 1024, 1024): {'float16': 0.33, 'float32': 0.35, 'int8': 0.169},\n-        (2048, 2048, 2048): {'float16': 0.64, 'float32': 0.57, 'int8': 0.34},\n+        (2048, 2048, 2048): {'float16': 0.59, 'float32': 0.57, 'int8': 0.34},\n         (4096, 4096, 4096): {'float16': 0.81, 'float32': 0.75, 'int8': 0.46},\n         (8192, 8192, 8192): {'float16': 0.77, 'float32': 0.85, 'int8': 0.51},\n         # tall-skinny"}]