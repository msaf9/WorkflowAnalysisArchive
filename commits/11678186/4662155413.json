[{"filename": "python/test/unit/language/test_core.py", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "file_content_changes": "@@ -1260,11 +1260,14 @@ def kernel(X, Z, BLOCK_M: tl.constexpr, BLOCK_N: tl.constexpr, AXIS: tl.constexp\n         else:\n             np.testing.assert_equal(z_ref, z_tri)\n \n+\n layouts = [\n     BlockedLayout([1, 4], [8, 4], [4, 1], [1, 0]),\n     BlockedLayout([1, 4], [8, 4], [4, 1], [0, 1]),\n-    MmaLayout(version=(2, 0), warps_per_cta=[4,1])\n+    MmaLayout(version=(2, 0), warps_per_cta=[4, 1])\n ]\n+\n+\n @pytest.mark.parametrize(\"M, N\", [[128, 16]])\n @pytest.mark.parametrize(\"src_layout\", layouts)\n @pytest.mark.parametrize(\"axis\", [0, 1])\n@@ -1351,7 +1354,7 @@ def test_reduce_layouts(M, N, src_layout, axis, device='cuda'):\n     else:\n         zeros = [[0] for j in range(M)]\n     z = np.array(zeros).astype('float32')\n-    \n+\n     x_tri = torch.tensor(x, device=device)\n     z_tri = torch.tensor(z, device=device)\n "}]