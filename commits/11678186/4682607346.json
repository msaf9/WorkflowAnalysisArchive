[{"filename": "python/triton/testing.py", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "file_content_changes": "@@ -19,8 +19,8 @@ def nvsmi(attrs):\n \n def do_bench(fn, warmup=25, rep=100, grad_to_none=None,\n              quantiles=None,\n-             fast_flush=False,\n-             return_mode=\"min\"):\n+             fast_flush=True,\n+             return_mode=\"mean\"):\n     assert return_mode in [\"min\", \"max\", \"mean\", \"median\"]\n     import torch\n     \"\"\"\n@@ -85,7 +85,10 @@ def do_bench(fn, warmup=25, rep=100, grad_to_none=None,\n     torch.cuda.synchronize()\n     times = torch.tensor([s.elapsed_time(e) for s, e in zip(start_event, end_event)])\n     if quantiles is not None:\n-        return torch.quantile(times, torch.tensor(quantiles)).tolist()\n+        ret = torch.quantile(times, torch.tensor(quantiles)).tolist()\n+        if len(ret) == 1:\n+            ret = ret[0]\n+        return ret\n     return getattr(torch, return_mode)(times).item()\n \n "}]