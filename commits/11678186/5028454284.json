[{"filename": ".github/workflows/integration-tests.yml", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "file_content_changes": "@@ -174,7 +174,14 @@ jobs:\n             unzip reference.zip\n             tar -xzf artifacts.tar.gz\n             mv home/phil/.triton/cache reference\n+            echo \"-----------------------------------------------\"\n+            pwd\n+            echo \"-----------------------------------------------\"\n             ls reference\n+            echo \"-----------------------------------------------\"\n+            ls ~/.triton/cache\n+            echo \"-----------------------------------------------\"\n+            python test/tools/compare_files.py --path1 /home/phil/.triton/cache --path2 reference --hash /home/phil/code/triton/python/test/kernel_comparison/kernels.yml\n           else\n             echo \"No artifact found with the name: $ARTIFACT_NAME\"\n           fi"}, {"filename": "python/test/kernel_comparison/kernels.yml", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "file_content_changes": "@@ -0,0 +1,3 @@\n+hashes_and_extensions:\n+  - hash: dae598764ad4ffa8e3ff4b8d77739677\n+    extension: ptx"}, {"filename": "python/test/tools/compare_files.py", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "file_content_changes": "@@ -0,0 +1,74 @@\n+import argparse\n+import glob\n+import os\n+\n+import yaml\n+\n+\n+def list_files_with_extension(path, extension):\n+    files = glob.glob(os.path.join(path, f'*.{extension}'))\n+    return files\n+\n+\n+def load_yaml_file(file_path):\n+    with open(file_path, 'r') as file:\n+        content = yaml.safe_load(file)\n+    return content\n+\n+\n+def compare_files(file1, file2):\n+    with open(file1, 'rb') as f1, open(file2, 'rb') as f2:\n+        content1 = f1.read()\n+        content2 = f2.read()\n+\n+    assert content1 == content2, f\"Files {file1} and {file2} are not identical.\"\n+\n+\n+def main(args):\n+    yaml_file_path = args.hash\n+    assert os.path.exists(yaml_file_path), f\"Path {yaml_file_path} does not exist!\"\n+    hashes_and_extensions = load_yaml_file(yaml_file_path)[\"hashes_and_extensions\"]\n+\n+    assert args.path1 != args.path2, \"Cannot compare files in the same directory!\"\n+\n+    for d in hashes_and_extensions:\n+        hash = d[\"hash\"]\n+        extension = d[\"extension\"]\n+        full_path1 = os.path.join(args.path1, hash)\n+        full_path2 = os.path.join(args.path2, hash)\n+        assert os.path.exists(full_path1), f\"Path {full_path1} does not exist!\"\n+        assert os.path.exists(full_path2), f\"Path {full_path2} does not exist!\"\n+        files1 = list_files_with_extension(full_path1, extension)\n+        files2 = list_files_with_extension(full_path2, extension)\n+        assert len(files1) == 1, f\"Found {len(files1)} files in {full_path1} with extension {extension}!\"\n+        assert len(files2) == 1, f\"Found {len(files2)} files in {full_path2} with extension {extension}!\"\n+        file1 = os.path.join(full_path1, files1[0])\n+        file2 = os.path.join(full_path2, files2[0])\n+        compare_files(file1, file2)\n+\n+\n+if __name__ == \"__main__\":\n+    parser = argparse.ArgumentParser()\n+    parser.add_argument(\n+        \"--path1\",\n+        type=str,\n+        default=None,\n+        required=True,\n+        help=(\"Path to first cache directory\"),\n+    )\n+    parser.add_argument(\n+        \"--path2\",\n+        type=str,\n+        default=None,\n+        required=True,\n+        help=(\"Path to second cache directory\"),\n+    )\n+    parser.add_argument(\n+        \"--hash\",\n+        type=str,\n+        default=None,\n+        required=True,\n+        help=(\"Path to hash file\"),\n+    )\n+    args = parser.parse_args()\n+    main(args)"}]