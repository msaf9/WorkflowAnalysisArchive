[{"filename": "lib/Dialect/TritonGPU/Transforms/Combine.cpp", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "file_content_changes": "@@ -1499,23 +1499,23 @@ class TritonGPUCombineOpsPass\n         signalPassFailure();\n     }\n     {\n-      mlir::RewritePatternSet ps(context);\n-      ps.add<UpdateMMAVersionMinorForVolta>(context, DotOp::getOperationName(),\n-                                            mmaToUpdate);\n-      ps.add<UpdateMMAVersionMinorForVolta>(\n+      mlir::RewritePatternSet patterns(context);\n+      patterns.add<UpdateMMAVersionMinorForVolta>(\n+          context, DotOp::getOperationName(), mmaToUpdate);\n+      patterns.add<UpdateMMAVersionMinorForVolta>(\n           context, ConvertLayoutOp::getOperationName(), mmaToUpdate);\n-      ps.add<UpdateMMAVersionMinorForVolta>(\n+      patterns.add<UpdateMMAVersionMinorForVolta>(\n           context, arith::ConstantOp::getOperationName(), mmaToUpdate);\n       mlir::GreedyRewriteConfig config;\n       config.useTopDownTraversal = true;\n \n-      if (applyPatternsAndFoldGreedily(m, std::move(ps), config).failed())\n+      if (applyPatternsAndFoldGreedily(m, std::move(patterns), config).failed())\n         signalPassFailure();\n     }\n     {\n-      mlir::RewritePatternSet ps(context);\n-      ps.add<RematerializeForloopForVolta>(context, mmaToUpdate);\n-      if (applyPatternsAndFoldGreedily(m, std::move(ps)).failed())\n+      mlir::RewritePatternSet patterns(context);\n+      patterns.add<RematerializeForloopForVolta>(context, mmaToUpdate);\n+      if (applyPatternsAndFoldGreedily(m, std::move(patterns)).failed())\n         signalPassFailure();\n     }\n "}]