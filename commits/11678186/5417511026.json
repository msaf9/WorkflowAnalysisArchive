[{"filename": "lib/Dialect/TritonGPU/Transforms/RemoveLayoutConversions.cpp", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "file_content_changes": "@@ -345,10 +345,14 @@ class RematerializeForward : public mlir::RewritePattern {\n     // heuristics for flash attention\n     if (srcEncoding.isa<triton::gpu::SliceEncodingAttr>())\n       return failure();\n-    // Check if number of users is 1, if not, it's not worth rematerializing\n-    // because it will introduce a new conversion\n-    if (std::distance(cvt->user_begin(), cvt->user_end()) != 1)\n+    // For cases like:\n+    // %0 = convert_layout %arg0\n+    // We should try to move %0 out of scf.for first, if it couldn't be moved\n+    // out additional conversions will be added to the loop body.\n+    if (!cvt.getOperand().getDefiningOp() &&\n+        isa<scf::ForOp>(cvt->getParentOp()))\n       return failure();\n+\n     SetVector<Operation *> cvtSlices;\n     auto filter = [&](Operation *op) {\n       return op->getBlock() == cvt->getBlock() &&\n@@ -434,8 +438,8 @@ class RematerializeBackward : public mlir::RewritePattern {\n \n     IRMapping mapping;\n     rematerializeConversionChain(toConvert, rewriter, processed, mapping);\n-\n     rewriter.replaceOp(cvt, mapping.lookup(cvt->getOperand(0)));\n+\n     return mlir::success();\n   }\n };"}]