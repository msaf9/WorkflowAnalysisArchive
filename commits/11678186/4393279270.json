[{"filename": "python/triton/testing.py", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "file_content_changes": "@@ -454,10 +454,12 @@ def get_max_simd_tflops(dtype: torch.dtype, backend=None, device=None):\n         backend = _triton.runtime.backend.CUDA\n     if not device:\n         device = torch.cuda.current_device()\n-    num_subcores = _triton.runtime.num_sm(backend, device) * 4  # on recent GPUs\n-    clock_rate = _triton.runtime.clock_rate(backend, device)  # in kHz\n-    cc = _triton.runtime.cc(backend, device)\n-    if cc < 80:\n+\n+    triton.compiler.init_cuda_utils()\n+    num_subcores = triton.compiler.cuda_utils.get_device_properties(device)[\"multiprocessor_count\"] * 4\n+    clock_rate = triton.compiler.cuda_utils.get_device_properties(device)[\"sm_clock_rate\"]  # in kHz\n+    capability = torch.cuda.get_device_capability()\n+    if capability[0] < 8:\n         if dtype == torch.float32:\n             ops_per_sub_core = 32  # 2*16\n         elif dtype == torch.float16:"}]