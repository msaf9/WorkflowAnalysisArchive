[{"filename": "python/setup.py", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "file_content_changes": "@@ -10,6 +10,7 @@\n import urllib.request\n from distutils.version import LooseVersion\n from typing import NamedTuple\n+from pathlib import Path\n \n from setuptools import Extension, setup\n from setuptools.command.build_ext import build_ext\n@@ -38,7 +39,6 @@ class Package(NamedTuple):\n     package: str\n     name: str\n     url: str\n-    test_file: str\n     include_flag: str\n     lib_flag: str\n     syspath_var_name: str\n@@ -49,11 +49,12 @@ class Package(NamedTuple):\n def get_pybind11_package_info():\n     name = \"pybind11-2.10.0\"\n     url = \"https://github.com/pybind/pybind11/archive/refs/tags/v2.10.0.tar.gz\"\n-    return Package(\"pybind11\", name, url, \"include/pybind11/pybind11.h\", \"PYBIND11_INCLUDE_DIR\", \"\", \"PYBIND11_SYSPATH\")\n+    return Package(\"pybind11\", name, url, \"PYBIND11_INCLUDE_DIR\", \"\", \"PYBIND11_SYSPATH\")\n \n # llvm\n \n \n+\n def get_llvm_package_info():\n     # download if nothing is installed\n     system = platform.system()\n@@ -65,12 +66,13 @@ def get_llvm_package_info():\n         linux_suffix = 'ubuntu-18.04' if vglibc > 217 else 'centos-7'\n         system_suffix = f\"linux-gnu-{linux_suffix}\"\n     else:\n-        return Package(\"llvm\", \"LLVM-C.lib\", \"\", \"lib\", \"LLVM_INCLUDE_DIRS\", \"LLVM_LIBRARY_DIR\", \"LLVM_SYSPATH\")\n+        return Package(\"llvm\", \"LLVM-C.lib\", \"\", \"LLVM_INCLUDE_DIRS\", \"LLVM_LIBRARY_DIR\", \"LLVM_SYSPATH\")\n     use_assert_enabled_llvm = check_env_flag(\"TRITON_USE_ASSERT_ENABLED_LLVM\", \"False\")\n     release_suffix = \"assert\" if use_assert_enabled_llvm else \"release\"\n     name = f'llvm+mlir-17.0.0-x86_64-{system_suffix}-{release_suffix}'\n-    url = f\"https://github.com/ptillet/triton-llvm-releases/releases/download/llvm-17.0.0-8e5a41e8271f/{name}.tar.xz\"\n-    return Package(\"llvm\", name, url, \"lib\", \"LLVM_INCLUDE_DIRS\", \"LLVM_LIBRARY_DIR\", \"LLVM_SYSPATH\")\n+    version = \"llvm-17.0.0-8e5a41e8271f\"\n+    url = f\"https://github.com/ptillet/triton-llvm-releases/releases/download/{version}/{name}.tar.xz\"\n+    return Package(\"llvm\", name, url, \"LLVM_INCLUDE_DIRS\", \"LLVM_LIBRARY_DIR\", \"LLVM_SYSPATH\")\n \n \n def get_thirdparty_packages(triton_cache_path):\n@@ -81,8 +83,9 @@ def get_thirdparty_packages(triton_cache_path):\n         package_dir = os.path.join(package_root_dir, p.name)\n         if p.syspath_var_name in os.environ:\n             package_dir = os.environ[p.syspath_var_name]\n-        test_file_path = os.path.join(package_dir, p.test_file)\n-        if not os.path.exists(test_file_path):\n+        version_file_path = os.path.join(package_dir, \"version.txt\")\n+        if not os.path.exists(version_file_path) or\\\n+           Path(version_file_path).read_text() != p.url:\n             try:\n                 shutil.rmtree(package_root_dir)\n             except Exception:\n@@ -92,6 +95,9 @@ def get_thirdparty_packages(triton_cache_path):\n             ftpstream = urllib.request.urlopen(p.url)\n             file = tarfile.open(fileobj=ftpstream, mode=\"r|*\")\n             file.extractall(path=package_root_dir)\n+            # write version url to package_root_dir\n+            with open(os.path.join(package_root_dir, \"version.txt\"), \"w\") as f:\n+                f.write(p.url)\n         if p.include_flag:\n             thirdparty_cmake_args.append(f\"-D{p.include_flag}={package_dir}/include\")\n         if p.lib_flag:"}]