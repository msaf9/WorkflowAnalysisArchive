[{"filename": "lib/Conversion/TritonGPUToLLVM/TritonGPUToLLVM.cpp", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "file_content_changes": "@@ -1494,11 +1494,12 @@ struct CmpIOpConversion\n \n #undef __PRED_ENUM\n     }\n+    return LLVM::ICmpPredicate::eq;\n   }\n };\n \n struct CmpFOpConversion\n-    : public BinaryOpConversionBase<triton::gpu::CmpFOp, LLVM::ICmpOp,\n+    : public BinaryOpConversionBase<triton::gpu::CmpFOp, LLVM::FCmpOp,\n                                     CmpFOpConversion> {\n   explicit CmpFOpConversion(LLVMTypeConverter &typeConverter,\n                             PatternBenefit benefit = 1)\n@@ -1542,6 +1543,7 @@ struct CmpFOpConversion\n \n #undef __PRED_ENUM\n     }\n+    return LLVM::FCmpPredicate::_true;\n   }\n };\n "}, {"filename": "python/tests/test_vecadd.py", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "file_content_changes": "@@ -213,10 +213,3 @@ def test_vecadd_no_scf_masked_randomly():\n ])\n def test_vecadd_fcmp_no_scf_masked(num_warps, block_size, shape):\n     vecadd_fcmp_no_scf_tester(num_warps, block_size, shape)\n-\n-\n-if __name__ == '__main__':\n-    test_vecadd_scf_mask(shape=(128, 3),\n-                         num_warps=2,\n-                         block_size=128,\n-                         iter_size=1)"}]