[{"filename": "python/triton/language/semantic.py", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "file_content_changes": "@@ -649,12 +649,12 @@ def cast(input: tl.tensor,\n     if src_sca_ty.is_int() and dst_sca_ty.is_int() and \\\n        (src_sca_ty.int_bitwidth != dst_sca_ty.int_bitwidth or src_sca_ty.int_signedness != dst_sca_ty.int_signedness):\n         sign_extend = src_sca_ty.is_int_signed() and not src_sca_ty.is_bool()\n-        if(dst_sca_ty.is_bool()):\n-          return not_equal(input, tl._to_tensor(0, builder), builder)\n+        if dst_sca_ty.is_bool():\n+            return not_equal(input, tl._to_tensor(0, builder), builder)\n         else:\n-          return tl.tensor(builder.create_int_cast(input.handle,\n-                                                   dst_ty.to_ir(builder), sign_extend),\n-                           dst_ty)\n+            return tl.tensor(builder.create_int_cast(input.handle,\n+                                                     dst_ty.to_ir(builder), sign_extend),\n+                             dst_ty)\n \n     # Float to Int\n     if src_sca_ty.is_floating() and dst_sca_ty.is_int():"}]