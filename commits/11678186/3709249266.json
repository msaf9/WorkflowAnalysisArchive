[{"filename": "lib/Conversion/TritonGPUToLLVM/TritonGPUToLLVM.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "file_content_changes": "@@ -3332,7 +3332,7 @@ struct DotOpConversion : public ConvertTritonGPUOpToLLVMPattern<triton::DotOp> {\n                                     .cast<RankedTensorType>()\n                                     .getEncoding()\n                                     .dyn_cast<MmaEncodingAttr>();\n-    if (!isOuter && mmaLayout && supportMMA(op, mmaLayout.getVersion())) {\n+    if (!isOuter && mmaLayout && supportMMA(op, mmaLayout.getVersionMajor())) {\n       if (mmaLayout.isVolta())\n         return convertMMA884(op, adaptor, rewriter);\n       if (mmaLayout.isAmpere())\n@@ -3371,7 +3371,7 @@ Value ConvertLayoutOpConversion::lowerSharedToDotOperandMMA(\n   auto loc = op.getLoc();\n   Value src = op.src();\n   Value dst = op.result();\n-  bool isHMMA = supportMMA(dst, mmaLayout.getVersion());\n+  bool isHMMA = supportMMA(dst, mmaLayout.getVersionMajor());\n \n   auto smemObj = getSharedMemoryObjectFromStruct(loc, adaptor.src(), rewriter);\n   Value res;"}, {"filename": "lib/Dialect/TritonGPU/Transforms/Combine.cpp", "status": "modified", "additions": 38, "deletions": 10, "changes": 48, "file_content_changes": "@@ -792,24 +792,52 @@ class BlockedToMMA : public mlir::RewritePattern {\n     if (oldRetType.getEncoding().isa<triton::gpu::MmaEncodingAttr>())\n       return failure();\n \n-    auto A = dotOp.getOperand(0).getType().cast<RankedTensorType>();\n-    auto B = dotOp.getOperand(1).getType().cast<RankedTensorType>();\n+    auto AType = dotOp.getOperand(0).getType().cast<RankedTensorType>();\n+    auto BType = dotOp.getOperand(1).getType().cast<RankedTensorType>();\n \n     // for FMA, should retain the blocked layout.\n-    int version = computeCapabilityToMMAVersion(computeCapability);\n-    if (!supportMMA(dotOp, version))\n+    int versionMajor = computeCapabilityToMMAVersion(computeCapability);\n+    if (!supportMMA(dotOp, versionMajor))\n       return failure();\n \n+    auto AOrder = AType.getEncoding()\n+                         .cast<triton::gpu::DotOperandEncodingAttr>()\n+                         .getParent()\n+                         .cast<triton::gpu::BlockedEncodingAttr>()\n+                         .getOrder();\n+    auto BOrder = BType.getEncoding()\n+                         .cast<triton::gpu::DotOperandEncodingAttr>()\n+                         .getParent()\n+                         .cast<triton::gpu::BlockedEncodingAttr>()\n+                         .getOrder();\n+\n+\n     // get MMA encoding for the given number of warps\n     auto retShape = oldRetType.getShape();\n     auto mod = op->getParentOfType<mlir::ModuleOp>();\n     int numWarps = triton::gpu::TritonGPUDialect::getNumWarps(mod);\n \n-    auto newRetType = RankedTensorType::get(\n-        retShape, oldRetType.getElementType(),\n-        triton::gpu::MmaEncodingAttr::get(\n-            oldRetType.getContext(), version,\n-            getWarpsPerTile(dotOp, retShape, version, numWarps)));\n+    auto warpsPerTile =\n+        getWarpsPerTile(dotOp, retShape, versionMajor, numWarps);\n+    triton::gpu::MmaEncodingAttr mmaEnc;\n+    if (versionMajor == 1) {\n+      auto shapeA = AType.getShape();\n+      auto shapeB = BType.getShape();\n+      bool isARow = AOrder[0] != 0;\n+      bool isBRow = BOrder[0] != 0;\n+      mmaEnc = triton::gpu::MmaEncodingAttr::get(\n+          oldRetType.getContext(), versionMajor, warpsPerTile, shapeA, shapeB,\n+          isARow, isBRow);\n+    } else if (versionMajor == 2) {\n+      mmaEnc = triton::gpu::MmaEncodingAttr::get(\n+          oldRetType.getContext(), versionMajor, 0 /*versionMinor*/,\n+          warpsPerTile);\n+    } else {\n+      assert(false && \"Mma layout only support versionMajor of 1 or 2\");\n+    }\n+    auto newRetType =\n+        RankedTensorType::get(retShape, oldRetType.getElementType(), mmaEnc);\n+\n     // convert accumulator\n     auto oldAcc = dotOp.getOperand(2);\n     auto newAcc = rewriter.create<triton::gpu::ConvertLayoutOp>(\n@@ -830,7 +858,7 @@ class BlockedToMMA : public mlir::RewritePattern {\n                          .getOrder();\n     Attribute isMMAv1RowA;\n     Attribute isMMAv1RowB;\n-    if (version == 1) {\n+    if (versionMajor == 1) {\n       isMMAv1RowA = BoolAttr::get(getContext(), oldAOrder[0] == 1);\n       isMMAv1RowB = BoolAttr::get(getContext(), oldBOrder[0] == 1);\n     }"}]