[{"filename": "include/triton/Analysis/Utility.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "file_content_changes": "@@ -77,9 +77,8 @@ SmallVector<RES_T> reorder(ArrayRef<T> input, ArrayRef<unsigned> order) {\n   return result;\n }\n \n-bool isMmaToDotShortcut(\n-    triton::gpu::MmaEncodingAttr &mmaLayout,\n-    triton::gpu::DotOperandEncodingAttr &dotOperandLayout);\n+bool isMmaToDotShortcut(triton::gpu::MmaEncodingAttr &mmaLayout,\n+                        triton::gpu::DotOperandEncodingAttr &dotOperandLayout);\n \n } // namespace mlir\n "}, {"filename": "lib/Analysis/Allocation.cpp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "file_content_changes": "@@ -6,7 +6,6 @@\n #include \"triton/Analysis/Utility.h\"\n #include \"triton/Dialect/TritonGPU/IR/Dialect.h\"\n #include \"llvm/ADT/SmallVector.h\"\n-#include \"triton/Analysis/Utility.h\"\n \n #include <algorithm>\n #include <limits>"}, {"filename": "lib/Analysis/Utility.cpp", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "file_content_changes": "@@ -152,9 +152,8 @@ std::string getValueOperandName(Value value, AsmState &state) {\n   return opName;\n }\n \n-bool isMmaToDotShortcut(\n-    triton::gpu::MmaEncodingAttr &mmaLayout,\n-    triton::gpu::DotOperandEncodingAttr &dotOperandLayout) {\n+bool isMmaToDotShortcut(triton::gpu::MmaEncodingAttr &mmaLayout,\n+                        triton::gpu::DotOperandEncodingAttr &dotOperandLayout) {\n   // dot_op<opIdx=0, parent=#mma> = #mma\n   // when #mma = MmaEncoding<version=2, warpsPerCTA=[..., 1]>\n   return mmaLayout.getWarpsPerCTA()[1] == 1 &&"}, {"filename": "lib/Conversion/TritonGPUToLLVM/ConvertLayoutOpToLLVM.cpp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "file_content_changes": "@@ -18,7 +18,6 @@ using ::mlir::triton::gpu::getSizePerThread;\n using ::mlir::triton::gpu::isaDistributedLayout;\n using ::mlir::triton::gpu::SharedEncodingAttr;\n \n-\n struct ConvertLayoutOpConversion\n     : public ConvertTritonGPUOpToLLVMPattern<triton::gpu::ConvertLayoutOp> {\n public:"}]