[{"filename": "lib/Conversion/TritonGPUToLLVM/TritonGPUToLLVM.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "file_content_changes": "@@ -404,7 +404,7 @@ struct GetProgramIdOpConversion\n     sreg.append(1, 'x' + op.getAxisAsInt()); // 0 -> 'x', 1 -> 'y', 2 -> 'z'\n \n     Value programId = getSRegValue(rewriter, loc, sreg);\n-    rewriter.replaceOpWithNewOp<arith::IndexCastOp>(op, i32_ty, programId);\n+    rewriter.replaceOp(op, programId);\n     return success();\n   }\n };\n@@ -431,7 +431,7 @@ struct GetNumProgramsOpConversion\n     sreg.append(1, 'x' + op.getAxis()); // 0 -> 'x', 1 -> 'y', 2 -> 'z'\n \n     Value numPrograms = getSRegValue(rewriter, loc, sreg);\n-    rewriter.replaceOpWithNewOp<arith::IndexCastOp>(op, i32_ty, numPrograms);\n+    rewriter.replaceOp(op, numPrograms);\n     return success();\n   }\n };"}, {"filename": "lib/Conversion/TritonGPUToLLVM/Utility.cpp", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "file_content_changes": "@@ -295,10 +295,7 @@ Value getSRegValue(OpBuilder &b, Location loc, const std::string &sRegStr) {\n   auto *sRegOpr = builder.newConstantOperand(sRegStr);\n   mov(destOpr, sRegOpr);\n   Value val = builder.launch(b, loc, b.getIntegerType(32), false);\n-\n-  auto cast = b.create<UnrealizedConversionCastOp>(\n-      loc, TypeRange{b.getIntegerType(32)}, ValueRange{val});\n-  return cast.getResult(0);\n+  return val;\n }\n \n Value addStringToModule(Location loc, ConversionPatternRewriter &rewriter,"}]