[{"filename": "lib/Conversion/TritonGPUToLLVM/DotHelpers.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "file_content_changes": "@@ -1410,7 +1410,7 @@ Value DotOpMmaV1ConversionHelper::loadA(\n     ld(has, m, k, ha00, ha01);\n \n     if (vecA > 4) {\n-      assert(false) << \"vecA > 4 is not supported yet\";\n+      assert(false && \"vecA > 4 is not supported yet\");\n       Value ha10 = bitcast(extract_element(ha, i32_val(2)), f16x2Ty);\n       Value ha11 = bitcast(extract_element(ha, i32_val(3)), f16x2Ty);\n       if (isARow)\n@@ -1518,7 +1518,7 @@ Value DotOpMmaV1ConversionHelper::loadB(\n     Value hb01 = bitcast(extract_element(hb, i32_val(1)), f16x2Ty);\n     ld(hbs, n, K, hb00, hb01);\n     if (vecB > 4) {\n-      assert(false) << \"vecA > 4 is not supported yet\";\n+      assert(false && \"vecB > 4 is not supported yet\");\n       Value hb10 = bitcast(extract_element(hb, i32_val(2)), f16x2Ty);\n       Value hb11 = bitcast(extract_element(hb, i32_val(3)), f16x2Ty);\n       if (isBRow)"}, {"filename": "lib/Conversion/TritonGPUToLLVM/TritonGPUToLLVM.cpp", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "file_content_changes": "@@ -3935,15 +3935,8 @@ class TritonGPUToLLVMTypeConverter : public LLVMTypeConverter {\n         if (mmaLayout.getVersion() == 1) {\n           DotOpMmaV1ConversionHelper helper(mmaLayout);\n \n-          // TODO[Superjomn]: Both transA and transB are not available here.\n-          bool trans = false;\n           // TODO[Superjomn]: The order of A and B are not available here.\n           SmallVector<unsigned> order({1, 0});\n-          if (trans) {\n-            std::swap(shape[0], shape[1]);\n-            std::swap(order[0], order[1]);\n-          }\n-\n           // TODO[Superjomn] vec is not available here, but currently the vec\n           // seems always no greater than 4, so we simply assign 4 here.\n           bool vec = 4;"}]