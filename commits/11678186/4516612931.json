[{"filename": "lib/Conversion/TritonGPUToLLVM/ElementwiseOpToLLVM.cpp", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "file_content_changes": "@@ -1040,7 +1040,8 @@ struct AbsFOpConversion\n                      ValueRange operands, Location loc) const {\n     if (llvm::isa<IntegerType>(elemTy)) {\n       // Mask out the sign bit\n-      auto num_bits = getElementTypeOrSelf(op.getType()).getIntOrFloatBitWidth();\n+      auto num_bits =\n+          getElementTypeOrSelf(op.getType()).getIntOrFloatBitWidth();\n       assert(num_bits <= 16);\n       auto mask = (1u << (num_bits - 1u)) - 1u;\n       auto maskAttr = rewriter.getIntegerAttr(elemTy, mask);"}]