[{"filename": "lib/Conversion/TritonGPUToLLVM/PtxAsmFormat.cpp", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "file_content_changes": "@@ -162,15 +162,8 @@ std::string PTXInstrExecution::dump() const {\n \n   std::string argsRepr = strJoin(argReprs, \", \");\n \n-  os << instrRepr;\n+  os << instrRepr << \" \" << argsRepr << \";\";\n   os.flush();\n-  // No need for block or complete instruction\n-  if (osStr.back() != '}' && osStr.back() != ';') {\n-     os << \" \" << argsRepr << \";\";\n-     os.flush();\n-  } else {\n-    assert(argReprs.empty());\n-  }\n   return osStr;\n }\n "}, {"filename": "lib/Conversion/TritonGPUToLLVM/TritonGPUToLLVM.cpp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "file_content_changes": "@@ -2134,7 +2134,7 @@ struct FpToFpOpConversion\n     auto *o0 = builder.newOperand(\"=r\");\n     auto *o1 = builder.newOperand(\"=r\");\n     auto *i = builder.newOperand(fp8x4Vec, \"r\");\n-    call();\n+    call({}, /* onlyAttachMLIRArgs */ true);\n \n     auto fp16x2VecTy = vec_ty(f16_ty, 2);\n     auto fp16x2x2StructTy =\n@@ -2186,7 +2186,7 @@ struct FpToFpOpConversion\n     auto *o = builder.newOperand(\"=r\");\n     auto *i0 = builder.newOperand(fp16x2Vec0, \"r\");\n     auto *i1 = builder.newOperand(fp16x2Vec1, \"r\");\n-    call();\n+    call({}, /* onlyAttachMLIRArgs */ true);\n \n     auto fp8x4VecTy = vec_ty(i8_ty, 4);\n     auto fp8x4Vec = builder.launch(rewriter, loc, fp8x4VecTy, false);\n@@ -2232,7 +2232,7 @@ struct FpToFpOpConversion\n     auto *o0 = builder.newOperand(\"=r\");\n     auto *o1 = builder.newOperand(\"=r\");\n     auto *i = builder.newOperand(fp8x4Vec, \"r\");\n-    call();\n+    call({}, /* onlyAttachMLIRArgs */ true);\n \n     auto bf16x2VecTy = vec_ty(bf16_ty, 2);\n     auto bf16x2x2StructTy =\n@@ -2308,7 +2308,7 @@ struct FpToFpOpConversion\n     auto *o = builder.newOperand(\"=r\");\n     auto *i0 = builder.newOperand(bf16x2Vec0, \"r\");\n     auto *i1 = builder.newOperand(bf16x2Vec1, \"r\");\n-    call();\n+    call({}, /* onlyAttachMLIRArgs */ true);\n \n     auto fp8x4VecTy = vec_ty(i8_ty, 4);\n     auto fp8x4Vec = builder.launch(rewriter, loc, fp8x4VecTy, false);"}]