[{"filename": "python/src/triton.cc", "status": "modified", "additions": 47, "deletions": 43, "changes": 90, "file_content_changes": "@@ -1583,54 +1583,58 @@ void init_triton_translation(py::module &m) {\n   m.def(\"compile_ptx_to_cubin\",\n         [](const std::string &ptxCode, const std::string &ptxasPath,\n            int capability) -> py::object {\n-          py::gil_scoped_release allow_threads;\n+          std::string cubin;\n+          {\n+            py::gil_scoped_release allow_threads;\n \n-          // compile ptx with ptxas\n-          llvm::SmallString<64> fsrc;\n-          llvm::SmallString<64> flog;\n-          llvm::sys::fs::createTemporaryFile(\"compile-ptx-src\", \"\", fsrc);\n-          llvm::sys::fs::createTemporaryFile(\"compile-ptx-log\", \"\", flog);\n-          std::string fbin = std::string(fsrc) + \".o\";\n-          llvm::FileRemover logRemover(flog);\n-          llvm::FileRemover binRemover(fbin);\n-          const char *_fsrc = fsrc.c_str();\n-          const char *_flog = flog.c_str();\n-          const char *_fbin = fbin.c_str();\n-          std::ofstream ofs(_fsrc);\n-          ofs << ptxCode << std::endl;\n-          ofs.close();\n-          std::string cmd;\n-          int err;\n-          cmd = ptxasPath + \" -v --gpu-name=sm_\" + std::to_string(capability) +\n-                (capability == 90 ? \"a \" : \" \") + _fsrc + \" -o \" + _fsrc +\n-                \".o 2> \" + _flog;\n+            // compile ptx with ptxas\n+            llvm::SmallString<64> fsrc;\n+            llvm::SmallString<64> flog;\n+            llvm::sys::fs::createTemporaryFile(\"compile-ptx-src\", \"\", fsrc);\n+            llvm::sys::fs::createTemporaryFile(\"compile-ptx-log\", \"\", flog);\n+            std::string fbin = std::string(fsrc) + \".o\";\n+            llvm::FileRemover logRemover(flog);\n+            llvm::FileRemover binRemover(fbin);\n+            const char *_fsrc = fsrc.c_str();\n+            const char *_flog = flog.c_str();\n+            const char *_fbin = fbin.c_str();\n+            std::ofstream ofs(_fsrc);\n+            ofs << ptxCode << std::endl;\n+            ofs.close();\n+            std::string cmd;\n+            int err;\n+            cmd = ptxasPath + \" -v --gpu-name=sm_\" + std::to_string(capability) +\n+                  (capability == 90 ? \"a \" : \" \") + _fsrc + \" -o \" + _fsrc +\n+                  \".o 2> \" + _flog;\n \n-          err = system(cmd.c_str());\n-          if (err != 0) {\n-            err >>= 8;\n-            std::ifstream _log(_flog);\n-            std::string log(std::istreambuf_iterator<char>(_log), {});\n-            if (err == 255) {\n-              throw std::runtime_error(\"Internal Triton PTX codegen error: \\n\" +\n-                                       log);\n-            } else if (err == 128 + SIGSEGV) {\n-              throw std::runtime_error(\"Please run `ptxas \" + fsrc.str().str() +\n-                                       \"` to confirm that this is a \"\n-                                       \"bug in `ptxas`\\n\" +\n-                                       log);\n+            err = system(cmd.c_str());\n+            if (err != 0) {\n+              err >>= 8;\n+              std::ifstream _log(_flog);\n+              std::string log(std::istreambuf_iterator<char>(_log), {});\n+              if (err == 255) {\n+                throw std::runtime_error(\"Internal Triton PTX codegen error: \\n\" +\n+                                         log);\n+              } else if (err == 128 + SIGSEGV) {\n+                throw std::runtime_error(\"Please run `ptxas \" + fsrc.str().str() +\n+                                         \"` to confirm that this is a \"\n+                                         \"bug in `ptxas`\\n\" +\n+                                         log);\n+              } else {\n+                throw std::runtime_error(\"`ptxas` failed with error code \" +\n+                                         std::to_string(err) + \": \\n\" + log);\n+              }\n+              return {};\n             } else {\n-              throw std::runtime_error(\"`ptxas` failed with error code \" +\n-                                       std::to_string(err) + \": \\n\" + log);\n+              llvm::FileRemover srcRemover(fsrc);\n+              std::ifstream _cubin(_fbin, std::ios::binary);\n+              cubin = std::string(std::istreambuf_iterator<char>(_cubin), {});\n+              _cubin.close();\n+              // Do not return here, exit the gil scope and return below\n             }\n-            return {};\n-          } else {\n-            llvm::FileRemover srcRemover(fsrc);\n-            std::ifstream _cubin(_fbin, std::ios::binary);\n-            std::string cubin(std::istreambuf_iterator<char>(_cubin), {});\n-            _cubin.close();\n-            py::bytes bytes(cubin);\n-            return std::move(bytes);\n           }\n+          py::bytes bytes(cubin);\n+          return std::move(bytes);\n         });\n \n   m.def(\"add_external_libs\","}]