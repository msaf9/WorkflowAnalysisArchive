[{"filename": "python/src/triton.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -1302,7 +1302,7 @@ void init_triton_translation(py::module &m) {\n \n   m.def(\n       \"translate_triton_gpu_to_llvmir\",\n-      [](mlir::ModuleOp op) {\n+      [](mlir::ModuleOp op, int computeCapability) {\n         llvm::LLVMContext llvmContext;\n         auto llvmModule =\n             ::mlir::triton::translateTritonGPUToLLVMIR(&llvmContext, op);"}, {"filename": "python/triton/compiler.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -908,7 +908,7 @@ def add_external_libs(mod, libs):\n def ttgir_to_llir(mod, extern_libs, compute_capability):\n     if extern_libs:\n         add_external_libs(mod, extern_libs)\n-    return _triton.translate_triton_gpu_to_llvmir(mod)\n+    return _triton.translate_triton_gpu_to_llvmir(mod, compute_capability)\n \n \n def llir_to_ptx(mod: Any, compute_capability: int, ptx_version: int = None) -> Tuple[str, int]:"}, {"filename": "python/triton/tools/aot.py", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "file_content_changes": "@@ -37,20 +37,21 @@\n         print(module.str())\n         exit(0)\n \n+    if not args.sm:\n+        raise argparse.ArgumentError(None, \"Must specify --sm for PTX compilation\")\n+\n     # triton-ir -> triton-gpu-ir\n-    module = triton.compiler.ttir_to_ttgir(module, num_warps=4, num_stages=3)\n+    module = triton.compiler.ttir_to_ttgir(module, num_warps=4, num_stages=3, compute_capability=args.sm)\n     if args.target == 'triton-gpu-ir':\n         print(module.str())\n         exit(0)\n \n     # triton-gpu-ir -> llvm-ir\n-    module = triton.compiler.ttgir_to_llir(module, extern_libs=None)\n+    module = triton.compiler.ttgir_to_llir(module, extern_libs=None, compute_capability=args.sm)\n     if args.target == 'llvm-ir':\n         print(module)\n         exit(0)\n \n-    if not args.sm:\n-        raise argparse.ArgumentError(None, \"Must specify --sm for PTX compilation\")\n     if not args.ptx_version:\n         raise argparse.ArgumentError(None, \"Must specify --ptx-version for PTX compilation\")\n "}]