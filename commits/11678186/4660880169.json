[{"filename": "lib/Target/LLVMIR/LLVMIRTranslation.cpp", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "file_content_changes": "@@ -7,6 +7,7 @@\n #include \"mlir/IR/Dialect.h\"\n #include \"mlir/Pass/Pass.h\"\n #include \"mlir/Pass/PassManager.h\"\n+#include \"mlir/Target/LLVMIR/Dialect/Builtin/BuiltinToLLVMIRTranslation.h\"\n #include \"mlir/Target/LLVMIR/Dialect/LLVMIR/LLVMToLLVMIRTranslation.h\"\n #include \"mlir/Target/LLVMIR/Dialect/NVVM/NVVMToLLVMIRTranslation.h\"\n #include \"mlir/Target/LLVMIR/Dialect/ROCDL/ROCDLToLLVMIRTranslation.h\"\n@@ -245,6 +246,7 @@ std::unique_ptr<llvm::Module>\n translateLLVMToLLVMIR(llvm::LLVMContext *llvmContext, mlir::ModuleOp module,\n                       bool isROCM) {\n   DialectRegistry registry;\n+  mlir::registerBuiltinDialectTranslation(registry);\n   mlir::registerLLVMDialectTranslation(registry);\n   mlir::registerROCDLDialectTranslation(registry);\n   mlir::registerNVVMDialectTranslation(registry);\n@@ -296,7 +298,11 @@ translateTritonGPUToLLVMIR(llvm::LLVMContext *llvmContext,\n                            mlir::ModuleOp module, int computeCapability,\n                            bool isROCM) {\n   mlir::PassManager pm(module->getContext());\n-  applyPassManagerCLOptions(pm);\n+  mlir::registerPassManagerCLOptions();\n+  if (failed(applyPassManagerCLOptions(pm))) {\n+    llvm::errs() << \"failed to apply pass manager CL options\\n\";\n+    return nullptr;\n+  }\n   auto printingFlags = mlir::OpPrintingFlags();\n   printingFlags.elideLargeElementsAttrs(16);\n   pm.enableIRPrinting("}]