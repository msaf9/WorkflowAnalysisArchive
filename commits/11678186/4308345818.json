[{"filename": "lib/Conversion/TritonGPUToLLVM/TritonGPUToLLVMPass.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "file_content_changes": "@@ -156,6 +156,8 @@ class ConvertTritonGPUToLLVM\n       funcPatterns.add<FuncOpConversion>(typeConverter, numWarps,\n                                          /*benefit=*/1);\n       funcPatterns.add<ReturnOpConversion>(typeConverter);\n+      mlir::cf::populateControlFlowToLLVMConversionPatterns(typeConverter,\n+                                                            funcPatterns);\n       if (failed(\n               applyPartialConversion(mod, funcTarget, std::move(funcPatterns))))\n         return signalPassFailure();\n@@ -192,8 +194,6 @@ class ConvertTritonGPUToLLVM\n     populatePatterns1(populateReduceOpToLLVMPatterns);\n     populatePatterns2(populateViewOpToLLVMPatterns);\n     // Native lowering patterns\n-    mlir::cf::populateControlFlowToLLVMConversionPatterns(typeConverter,\n-                                                          patterns);\n     mlir::populateGpuToNVVMConversionPatterns(typeConverter, patterns);\n     if (failed(applyPartialConversion(mod, target, std::move(patterns))))\n       return signalPassFailure();"}]