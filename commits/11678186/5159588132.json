[{"filename": "lib/Conversion/TritonGPUToLLVM/ConvertLayoutOpToLLVM/SharedToDotOperandMMAv2.cpp", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "file_content_changes": "@@ -128,7 +128,6 @@ MMA16816SmemLoader::computeLdmatrixMatOffs(Value warpId, Value lane,\n   Value cMatOff = matOff[order[0]];\n   Value sMatOff = matOff[order[1]];\n   Value cSwizzleMatOff = udiv(cSwizzleOffset, i32_val(cMatShape));\n-  cMatOff = add(cMatOff, cSwizzleMatOff);\n \n   // row offset inside a matrix, each matrix has 8 rows.\n   Value sOffInMat = c;\n@@ -142,11 +141,12 @@ MMA16816SmemLoader::computeLdmatrixMatOffs(Value warpId, Value lane,\n   //          ~~~~~~~ out-of-bound access\n   Value sOff = urem(add(sOffInMat, mul(sMatOff, i32_val(sMatShape))),\n                     i32_val(tileShape[order[1]]));\n-  auto totalNumMats = tileShape[order[0]] / matShape[order[0]];\n-  Value maxMatOffIndex = add(cSwizzleMatOff, i32_val(totalNumMats));\n+  auto totalNumMats = i32_val(tileShape[order[0]] / matShape[order[0]]);\n+\n   for (int i = 0; i < numPtrs; ++i) {\n     Value cMatOffI = add(cMatOff, i32_val(i * pLoadStrideInMat));\n-    cMatOffI = urem(cMatOffI, maxMatOffIndex);\n+    cMatOffI = urem(cMatOffI, totalNumMats);\n+    cMatOffI = add(cMatOffI, cSwizzleMatOff);\n     cMatOffI = xor_(cMatOffI, phase);\n     offs[i] = add(mul(cMatOffI, i32_val(cMatShape)), mul(sOff, sStride));\n   }"}]