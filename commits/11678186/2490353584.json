[{"filename": "lib/codegen/selection/generator.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "file_content_changes": "@@ -3130,7 +3130,8 @@ void generator::visit_layout_scanline(analysis::scanline_layout* layout) {\n     full_thread_id = udiv(full_thread_id, dim_k);\n     thread_id[order[k]] = rem;\n   }\n-  thread_id[order[dim - 1]] = full_thread_id;\n+  Constant *dim_k = i32(layout->mts(order[dim - 1]));\n+  thread_id[order[dim - 1]] = urem(full_thread_id, dim_k);\n   // Create axes\n   for(unsigned k = 0; k < dim; k++) {\n     int nts = layout->nts(k);"}, {"filename": "python/test/unit/language/test_core.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -687,7 +687,7 @@ def copy_kernel(input_ptr, output_ptr, n_elements, BLOCK_SIZE: tl.constexpr):\n @pytest.mark.parametrize(\"dtype_str, shape\",\n                          [(dtype, shape)\n                           for dtype in dtypes\n-                          for shape in [128, 512]])\n+                          for shape in [32, 64, 128, 512]])\n def test_reduce1d(dtype_str, shape, device='cuda'):\n \n     # triton kernel"}]