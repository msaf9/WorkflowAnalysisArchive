[{"filename": ".github/workflows/integration-tests.yml", "status": "modified", "additions": 13, "deletions": 16, "changes": 29, "file_content_changes": "@@ -8,20 +8,19 @@ on:\n       - triton-mlir\n \n jobs:\n-\n   Runner-Preparation:\n     runs-on: ubuntu-latest\n     outputs:\n       matrix: ${{ steps.set-matrix.outputs.matrix }}\n     steps:\n-    - name: Prepare runner matrix\n-      id: set-matrix\n-      run: |\n-        if [ x\"${{ github.repository }}\" == x\"openai/triton\" ]; then\n-          echo '::set-output name=matrix::[[\"self-hosted\", \"A10\"], \"macos-latest\"]'\n-        else\n-          echo '::set-output name=matrix::[\"ubuntu-latest\", \"macos-latest\"]'\n-        fi\n+      - name: Prepare runner matrix\n+        id: set-matrix\n+        run: |\n+          if [ x\"${{ github.repository }}\" == x\"openai/triton\" ]; then\n+            echo '::set-output name=matrix::[[\"self-hosted\", \"A10\"], \"macos-10.15\"]'\n+          else\n+            echo '::set-output name=matrix::[\"ubuntu-latest\", \"macos-10.15\"]'\n+          fi\n \n   Integration-Tests:\n     needs: Runner-Preparation\n@@ -33,7 +32,6 @@ jobs:\n         runner: ${{fromJson(needs.Runner-Preparation.outputs.matrix)}}\n \n     steps:\n-\n       - name: Checkout\n         uses: actions/checkout@v2\n \n@@ -42,33 +40,32 @@ jobs:\n           rm -rf ~/.triton/cache/\n \n       - name: Check imports\n-        if: ${{ matrix.runner != 'macos-latest' }}\n+        if: startsWith(matrix.runner, 'ubuntu')\n         run: |\n           pip install isort\n           isort -c ./python || ( echo '::error title=Imports not sorted::Please run \\\"isort ./python\\\"' ; exit 1 )\n \n       - name: Check python style\n-        if: ${{ matrix.runner != 'macos-latest' }}\n+        if: startsWith(matrix.runner, 'ubuntu')\n         run: |\n           pip install autopep8\n           autopep8 -a -r -d --exit-code ./python || ( echo '::error title=Style issues::Please run \\\"autopep8 -a -r -i ./python\\\"' ; exit 1 )\n \n       - name: Check cpp style\n-        if: ${{ matrix.runner != 'macos-latest' }}\n+        if: startsWith(matrix.runner, 'ubuntu')\n         run: |\n           pip install clang-format\n           find . -regex '.*\\.\\(cpp\\|hpp\\|h\\|cc\\)' -not -path \"./python/build/*\" -not -path \"./include/triton/external/*\" -print0 | xargs -0 -n1 clang-format -style=file --dry-run -Werror -i ||\n           (echo '::error title=Style issues:: Please run `find . -regex \".*\\.\\(cpp\\|hpp\\|h\\|cc\\)\" -not -path \"./python/build/*\" -not -path \"./include/triton/external/*\" -print0 | xargs -0 -n1 clang-format -style=file -i`' ; exit 1)\n \n       - name: Flake8\n-        if: ${{ matrix.runner != 'macos-latest' }}\n+        if: startsWith(matrix.runner, 'ubuntu')\n         run: |\n           pip install flake8\n           flake8 --config ./python/setup.cfg ./python || ( echo '::error::Flake8 failed; see logs for errors.' ; exit 1 )\n \n       - name: Install Triton\n         run: |\n-          alias python='python3'\n           cd python\n           TRITON_USE_ASSERT_ENABLED_LLVM=TRUE pip3 install -e '.[tests]'\n \n@@ -82,7 +79,7 @@ jobs:\n           lit -v \"$LIT_TEST_DIR\"\n \n       - name: Run python tests\n-        if: ${{ matrix.runner[0] == 'self-hosted' }}\n+        if: ${{matrix.runner[0] == 'self-hosted'}}\n         run: |\n           cd python/tests\n           pytest"}]