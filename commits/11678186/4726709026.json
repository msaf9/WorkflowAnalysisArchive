[{"filename": "python/test/unit/operators/test_inductor.py", "status": "modified", "additions": 103, "deletions": 0, "changes": 103, "file_content_changes": "@@ -53,3 +53,106 @@ def triton_(in_out_ptr0, in_out_ptr1, in_ptr0, in_ptr1, in_ptr2, in_ptr3, xnumel\n     arg9_1 = torch.rand(64, device=\"cuda\")\n     triton_[(512,)](buf14, buf16, arg114_1, arg115_1, arg8_1, arg9_1, 512, 4096, 1, 2048)\n     torch.testing.assert_allclose(buf16.mean().item(), buf14.mean().item(), atol=1e-7, rtol=0)\n+\n+def test_avg_pool_bw():\n+\n+    @triton.jit\n+    def triton_(in_ptr0, out_ptr0, xnumel, XBLOCK : tl.constexpr):\n+        xnumel = 1048576\n+        xoffset = tl.program_id(0) * XBLOCK\n+        xindex = xoffset + tl.arange(0, XBLOCK)[:]\n+        xmask = xindex < xnumel\n+        x1 = (xindex // 8) % 8\n+        x0 = xindex % 8\n+        x2 = (xindex // 64)\n+        x5 = xindex\n+        tmp0 = (-1) + x1\n+        tmp1 = (-1) + x0\n+        tmp2 = 2 + x1\n+        tmp3 = 2 + x0\n+        tmp4 = 0\n+        tmp5 = tl.where(tmp0 != tmp0, tmp0, tl.where(tmp0 > tmp4, tmp0, tmp4))\n+        tmp6 = tl.where(tmp1 != tmp1, tmp1, tl.where(tmp1 > tmp4, tmp1, tmp4))\n+        tmp7 = 8\n+        tmp8 = tl.where(tmp2 != tmp2, tmp2, tl.where(tmp2 < tmp7, tmp2, tmp7))\n+        tmp9 = tl.where(tmp3 != tmp3, tmp3, tl.where(tmp3 < tmp7, tmp3, tmp7))\n+        tmp10 = tmp5 + tmp4\n+        tmp11 = tmp6 + tmp4\n+        tmp12 = 1\n+        tmp13 = tmp8 - tmp12\n+        tmp14 = tl.where(tmp10 != tmp10, tmp10, tl.where(tmp10 < tmp13, tmp10, tmp13))\n+        tmp15 = tmp9 - tmp12\n+        tmp16 = tl.where(tmp11 != tmp11, tmp11, tl.where(tmp11 < tmp15, tmp11, tmp15))\n+        tmp17 = tl.load(in_ptr0 + (tmp16 + (8*tmp14) + (64*x2)), None).to(tl.float32)\n+        tmp18 = tmp17 / 9\n+        tmp19 = tmp10 < tmp8\n+        tmp20 = tmp11 < tmp9\n+        tmp21 = tmp19 & tmp20\n+        tmp22 = 0.0\n+        tmp23 = tl.where(tmp21, tmp18, tmp22)\n+        tmp24 = tmp6 + tmp12\n+        tmp25 = tl.where(tmp24 != tmp24, tmp24, tl.where(tmp24 < tmp15, tmp24, tmp15))\n+        tmp26 = tl.load(in_ptr0 + (tmp25 + (8*tmp14) + (64*x2)), None).to(tl.float32)\n+        tmp27 = tmp26 / 9\n+        tmp28 = tmp24 < tmp9\n+        tmp29 = tmp19 & tmp28\n+        tmp30 = tmp23 + tmp27\n+        tmp31 = tl.where(tmp29, tmp30, tmp23)\n+        tmp32 = 2\n+        tmp33 = tmp6 + tmp32\n+        tmp34 = tl.where(tmp33 != tmp33, tmp33, tl.where(tmp33 < tmp15, tmp33, tmp15))\n+        tmp35 = tl.load(in_ptr0 + (tmp34 + (8*tmp14) + (64*x2)), None).to(tl.float32)\n+        tmp36 = tmp35 / 9\n+        tmp37 = tmp33 < tmp9\n+        tmp38 = tmp19 & tmp37\n+        tmp39 = tmp31 + tmp36\n+        tmp40 = tl.where(tmp38, tmp39, tmp31)\n+        tmp41 = tmp5 + tmp12\n+        tmp42 = tl.where(tmp41 != tmp41, tmp41, tl.where(tmp41 < tmp13, tmp41, tmp13))\n+        tmp43 = tl.load(in_ptr0 + (tmp16 + (8*tmp42) + (64*x2)), None).to(tl.float32)\n+        tmp44 = tmp43 / 9\n+        tmp45 = tmp41 < tmp8\n+        tmp46 = tmp45 & tmp20\n+        tmp47 = tmp40 + tmp44\n+        tmp48 = tl.where(tmp46, tmp47, tmp40)\n+        tmp49 = tl.load(in_ptr0 + (tmp25 + (8*tmp42) + (64*x2)), None).to(tl.float32)\n+        tmp50 = tmp49 / 9\n+        tmp51 = tmp45 & tmp28\n+        tmp52 = tmp48 + tmp50\n+        tmp53 = tl.where(tmp51, tmp52, tmp48)\n+        tmp54 = tl.load(in_ptr0 + (tmp34 + (8*tmp42) + (64*x2)), None).to(tl.float32)\n+        tmp55 = tmp54 / 9\n+        tmp56 = tmp45 & tmp37\n+        tmp57 = tmp53 + tmp55\n+        tmp58 = tl.where(tmp56, tmp57, tmp53)\n+        tmp59 = tmp5 + tmp32\n+        tmp60 = tl.where(tmp59 != tmp59, tmp59, tl.where(tmp59 < tmp13, tmp59, tmp13))\n+        tmp61 = tl.load(in_ptr0 + (tmp16 + (8*tmp60) + (64*x2)), None).to(tl.float32)\n+        tmp62 = tmp61 / 9\n+        tmp63 = tmp59 < tmp8\n+        tmp64 = tmp63 & tmp20\n+        tmp65 = tmp58 + tmp62\n+        tmp66 = tl.where(tmp64, tmp65, tmp58)\n+        tmp67 = tl.load(in_ptr0 + (tmp25 + (8*tmp60) + (64*x2)), None).to(tl.float32)\n+        tmp68 = tmp67 / 9\n+        tmp69 = tmp63 & tmp28\n+        tmp70 = tmp66 + tmp68\n+        tmp71 = tl.where(tmp69, tmp70, tmp66)\n+        tmp72 = tl.load(in_ptr0 + (tmp34 + (8*tmp60) + (64*x2)), None).to(tl.float32)\n+        tmp73 = tmp72 / 9\n+        tmp74 = tmp63 & tmp37\n+        tmp75 = tmp71 + tmp73\n+        tmp76 = tl.where(tmp74, tmp75, tmp71)\n+        tl.store(out_ptr0 + (x5 + tl.zeros([XBLOCK], tl.int32)), tmp76, None)\n+\n+    inp = torch.ones(8, 2048, 8, 8, device=\"cuda\", dtype=torch.half)\n+    out = torch.ones_like(inp) * 3\n+    numel = inp.numel()\n+    triton_[(numel//1024,)](inp, out, numel, 1024)\n+    out_ref = torch.ones_like(inp)\n+    out_ref[:, :, 1:7, 0::7] = 2/3\n+    out_ref[:, :, 0::7, 1:7] = 2/3\n+    out_ref[:, :, 0::7, 0::7] = 4/9\n+    torch.testing.assert_allclose(out, out_ref)\n+\n+"}]