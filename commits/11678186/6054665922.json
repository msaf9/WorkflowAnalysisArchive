[{"filename": "lib/Conversion/NVGPUToLLVM/NVGPUToLLVMPass.cpp", "status": "modified", "additions": 18, "deletions": 28, "changes": 46, "file_content_changes": "@@ -22,6 +22,7 @@ using ::mlir::LLVM::getSRegValue;\n namespace {\n \n using OperandsAndConstraints = std::vector<std::pair<mlir::Value, std::string>>;\n+typedef std::vector<std::string> Constraints;\n \n const std::string Reg_Alloc_Op = \"setmaxnreg.inc.sync.aligned.u32 #regCount;\";\n const std::string Wgmma_Fence_Op = \"wgmma.fence.sync.aligned;\";\n@@ -1059,8 +1060,8 @@ class ConvertNVGPUToLLVM : public ConvertNVGPUToLLVMBase<ConvertNVGPUToLLVM> {\n     RewritePatternSet patterns(context);\n \n #define POPULATE_NVGPU_OP(SRC_OP, ASM)                                         \\\n-  patterns.add<NVGPUOpGenericPattern<SRC_OP>>(                                 \\\n-      context, ASM, std::vector<std::string>(), std::vector<std::string>());\n+  patterns.add<NVGPUOpGenericPattern<SRC_OP>>(context, ASM, Constraints(),     \\\n+                                              Constraints());\n     POPULATE_NVGPU_OP(ttn::RegAllocOp, Reg_Alloc_Op)\n     POPULATE_NVGPU_OP(ttn::WGMMAFenceOp, Wgmma_Fence_Op)\n     POPULATE_NVGPU_OP(ttn::CGABarrierSyncOp, Cga_Barrier_Sync_op)\n@@ -1073,38 +1074,27 @@ class ConvertNVGPUToLLVM : public ConvertNVGPUToLLVMBase<ConvertNVGPUToLLVM> {\n     POPULATE_NVGPU_OP(ttn::RegDeallocOp, Reg_Dealloc_Op)\n #undef POPULATE_NVGPU_OP\n     patterns.add<NVGPUOpGenericPattern<ttn::MBarrierInitOp>>(\n-        context, Mbarrier_Init_Op, std::vector<std::string>(),\n-        std::vector<std::string>({\"r\", \"b\"}));\n+        context, Mbarrier_Init_Op, Constraints(), Constraints({\"r\", \"b\"}));\n     patterns.add<NVGPUOpGenericPattern<ttn::MBarrierWaitOp>>(\n-        context, Mbarrier_Wait_Op, std::vector<std::string>(),\n-        std::vector<std::string>({\"r\", \"r\"}));\n+        context, Mbarrier_Wait_Op, Constraints(), Constraints({\"r\", \"r\"}));\n     patterns.add<NVGPUOpGenericPattern<ttn::NamedBarrierArriveOp>>(\n-        context, Named_Barrier_Arrive_Op, std::vector<std::string>(),\n-        std::vector<std::string>({\"r\", \"r\"}));\n+        context, Named_Barrier_Arrive_Op, Constraints(),\n+        Constraints({\"r\", \"r\"}));\n     patterns.add<NVGPUOpGenericPattern<ttn::NamedBarrierWaitOp>>(\n-        context, Named_Barrier_Wait_Op, std::vector<std::string>(),\n-        std::vector<std::string>({\"r\", \"r\"}));\n+        context, Named_Barrier_Wait_Op, Constraints(), Constraints({\"r\", \"r\"}));\n     patterns.add<NVGPUOpGenericPattern<ttn::Sts64Op>>(\n-        context, Sts64_Op, std::vector<std::string>(),\n-        std::vector<std::string>({\"r\", \"r\", \"r\"}));\n+        context, Sts64_Op, Constraints(), Constraints({\"r\", \"r\", \"r\"}));\n     patterns.add<NVGPUOpGenericPattern<ttn::ClusterCTAIdOp>>(\n-        context, Cluster_Cta_Id_Op, std::vector<std::string>({\"=r\"}),\n-        std::vector<std::string>());\n+        context, Cluster_Cta_Id_Op, Constraints({\"=r\"}), Constraints());\n     patterns.add<NVGPUOpGenericPattern<ttn::WGMMADescCreateOp>>(\n-        context, Wgmma_Desc_Create_op, std::vector<std::string>({\"=l\"}),\n-        std::vector<std::string>({\"l\", \"l\"}));\n-\n-    patterns.add<FenceAsyncSharedOpPattern>(context);\n-    patterns.add<StoreMatrixOpPattern>(context);\n-    patterns.add<OffsetOfStmatrixV4OpPattern>(context);\n-    patterns.add<MBarrierArriveOpPattern>(context);\n-    patterns.add<ClusterArriveOpPattern>(context);\n-    patterns.add<TMALoadTiledOpPattern>(context);\n-    patterns.add<TMAStoreTiledOpPattern>(context);\n-    patterns.add<LoadDSmemOpPattern>(context);\n-    patterns.add<WGMMAOpPattern>(context);\n-    patterns.add<StoreDSmemOpPattern>(context);\n-    patterns.add<OffsetOfSts64OpPattern>(context);\n+        context, Wgmma_Desc_Create_op, Constraints({\"=l\"}),\n+        Constraints({\"l\", \"l\"}));\n+\n+    patterns.add<FenceAsyncSharedOpPattern, StoreMatrixOpPattern,\n+                 OffsetOfStmatrixV4OpPattern, MBarrierArriveOpPattern,\n+                 ClusterArriveOpPattern, TMALoadTiledOpPattern,\n+                 TMAStoreTiledOpPattern, LoadDSmemOpPattern, WGMMAOpPattern,\n+                 StoreDSmemOpPattern, OffsetOfSts64OpPattern>(context);\n \n     if (applyPatternsAndFoldGreedily(mod, std::move(patterns)).failed())\n       signalPassFailure();"}]