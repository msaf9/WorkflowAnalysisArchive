[{"filename": "lib/Dialect/TritonGPU/Transforms/FuseTranspositions.cpp", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "file_content_changes": "@@ -5,6 +5,7 @@\n #include \"triton/Analysis/Utility.h\"\n #include \"triton/Dialect/TritonGPU/IR/Dialect.h\"\n #include \"triton/Dialect/TritonGPU/Transforms/Passes.h\"\n+#include \"Utility.h\"\n #include <memory>\n \n using namespace mlir;\n@@ -142,6 +143,8 @@ class TritonGPUFuseTranspositionsPass\n     patterns.add<ConvertTransConvert>(context);\n     if (applyPatternsAndFoldGreedily(m, std::move(patterns)).failed())\n       signalPassFailure();\n+    if (fixupLoops(m).failed())\n+      signalPassFailure();\n   }\n };\n "}, {"filename": "python/triton/compiler.py", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "file_content_changes": "@@ -991,6 +991,7 @@ def optimize_ttgir(mod, num_stages, compute_capability):\n     pm.add_tritongpu_fuse_transpositions_pass()\n     pm.add_tritongpu_pipeline_pass(num_stages)\n     pm.add_tritongpu_prefetch_pass()\n+    pm.add_tritongpu_fuse_transpositions_pass()\n     pm.add_tritongpu_remove_layout_conversions_pass()\n     pm.add_tritongpu_decompose_conversions_pass()\n     if compute_capability // 10 == 7:"}]