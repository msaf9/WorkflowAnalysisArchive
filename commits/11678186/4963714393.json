[{"filename": "python/triton/compiler/code_generator.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "file_content_changes": "@@ -700,6 +700,8 @@ def visit_For(self, node):\n         ub = language.core._to_tensor(ub, self.builder)\n         step = language.core._to_tensor(step, self.builder)\n         # induction variable type\n+        if not lb.dtype.is_int() or not ub.dtype.is_int() or not step.dtype.is_int():\n+            raise TypeError(f\"For loop bounds and step must all be ints, are ({lb.dtype}, {ub.dtype}, {step.dtype})\")\n         iv_type = language.semantic.integer_promote_impl(lb.dtype, ub.dtype)\n         iv_type = language.semantic.integer_promote_impl(iv_type, step.dtype)\n         iv_ir_type = iv_type.to_ir(self.builder)"}]