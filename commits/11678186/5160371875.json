[{"filename": "docs/backend/ldmatrixOperand0.svg", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "file_content_changes": "@@ -0,0 +1,16 @@\n+<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 424.7028750949101 355.06120236065\" width=\"849.4057501898202\" height=\"710.1224047213\">\n+  <!-- svg-source:excalidraw -->\n+  <!-- payload-type:application/vnd.excalidraw+json --><!-- payload-version:2 --><!-- payload-start --><!-- payload-end -->\n+  <defs>\n+    <style class=\"style-fonts\">\n+      @font-face {\n+        font-family: \"Virgil\";\n+        src: url(\"https://excalidraw.com/Virgil.woff2\");\n+      }\n+      @font-face {\n+        font-family: \"Cascadia\";\n+        src: url(\"https://excalidraw.com/Cascadia.woff2\");\n+      }\n+    </style>\n+  </defs>\n+  <rect x=\"0\" y=\"0\" width=\"424.7028750949101\" height=\"355.06120236065\" fill=\"#ffffff\"></rect><g stroke-linecap=\"round\" transform=\"translate(79.93831190187882 110.72018858431511) rotate(0 80 80)\"><path d=\"M0.55 -0.53 C35.65 -0.56, 70.89 -2.53, 159 1.35 M-0.99 -0.11 C55.76 -1.57, 112.28 -0.79, 160.37 -0.01 M158.04 -0.43 C160.66 33.27, 158.02 66.76, 161.23 161.5 M160.74 -0.86 C158.22 50.66, 160.04 102.31, 160.78 159.69 M158.04 158.86 C101.94 160.66, 46.43 158.64, -0.54 161.56 M160.98 159.8 C108.71 161.14, 56.49 161.13, -0.83 159.87 M0.33 161.22 C1.47 109.75, 0.1 55.84, 1.64 0.9 M-0.21 159.69 C-0.2 126.71, 0.8 95.3, 0.86 1\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g><g stroke-linecap=\"round\" transform=\"translate(155.88831652581894 111.25974058139036) rotate(0 20 20)\"><path d=\"M-1.73 0.19 C9.99 -0.74, 23.31 -0.22, 39.23 -1 M-0.55 0.4 C13.73 0.9, 26.57 0.36, 40.95 -0.96 M38.35 0.2 C41.98 15.81, 40.45 29.13, 40.28 40.97 M39.23 0.16 C40.03 15.91, 40.52 29.71, 39.28 40.95 M40.13 39.9 C31.59 41.29, 21.9 38.34, -1.12 38.64 M39.11 39.37 C29.18 39.67, 20.54 39.34, 0.96 39.36 M-0.37 41.59 C0.07 27.47, 0.79 18, -1.77 -0.74 M-0.43 39.86 C-0.73 26.58, -0.98 12.57, 0.53 0.94\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g><g stroke-linecap=\"round\" transform=\"translate(155.88831652581894 151.25974058139036) rotate(0 20 20)\"><path d=\"M0 0 C0 0, 0 0, 0 0 M0 0 C0 0, 0 0, 0 0 M0.54 6.57 C1.41 5.81, 1.95 3.62, 5.76 0.58 M-0.46 6.54 C2.2 4.22, 3.58 1.54, 5.14 0.46 M0.68 13.53 C3.49 9.1, 3.83 7.42, 10.39 0.09 M0.8 12.53 C4.4 7.04, 7.99 3.88, 11.29 0.57 M0.65 18.12 C4.61 13.28, 5.38 10.97, 15.46 0.55 M0.79 17.93 C3.8 14.94, 5.9 10.55, 14.64 0.94 M0.75 24.87 C7.11 15.33, 12.45 10.64, 23.06 0.28 M0.82 24.76 C7.27 17.52, 12.17 8.8, 21.76 0.8 M-1.95 29.4 C5.23 22.31, 13.15 16.58, 27.95 -1.5 M-0.62 31.05 C6.16 24.4, 10.15 18.29, 25.49 -0.08 M-1.83 36.85 C8.6 25.99, 18.04 15.23, 31.12 -1.2 M0.19 36.61 C8.5 25.9, 18 16.58, 32.16 -0.57 M1.55 40.21 C12.33 32.03, 21.34 18.88, 37.13 0.39 M2.35 41.19 C9.16 31.06, 16.5 22.9, 37.19 -0.66 M8.19 39.89 C18.11 30.15, 26.52 19.62, 40.86 2.88 M6.98 42.2 C19.82 26.66, 33.89 10.42, 41.64 1.39 M13.17 40.68 C20.06 31.85, 28.43 21.21, 41.67 8.76 M12.61 41.8 C22.02 29.33, 32.52 18.06, 42.2 7.73 M18.61 43.01 C20.92 36.85, 27.3 30.12, 39.95 13.37 M16.99 42.29 C25.94 30.38, 34.94 19.73, 41.71 12.94 M21.76 42.67 C28.75 34.27, 33.86 28.99, 42.72 20.71 M23.1 41.91 C27.03 36.11, 31.52 30.38, 40.56 20.01 M28.48 42.11 C31.22 34.13, 38.67 30.27, 40.99 25.65 M28.45 40.33 C31.82 36.4, 37.56 30.54, 41.98 24.67 M33.29 41.34 C34.92 37.73, 37.23 34.95, 42.01 32.81 M33.15 40.31 C35.74 37.19, 39.73 33.86, 40.87 31.35 M37.91 41.62 C39.99 39.9, 40.93 38.74, 42.02 37.06 M38.39 41.25 C39.49 40.04, 40.77 38.55, 41.69 37.53\" stroke=\"#b2f2bb\" stroke-width=\"0.5\" fill=\"none\"></path><path d=\"M0.09 -0.77 C7.52 0.65, 15.73 0.01, 38.9 0.79 M0.36 0.95 C13.03 0.83, 28.42 -0.98, 39.17 0.1 M38.13 0.28 C41.03 17.25, 40.04 32.36, 38.46 40.32 M39.19 -0.72 C41.21 11.56, 41.23 25.04, 40.07 39.95 M38.03 38.88 C24.01 39.3, 11.76 41.45, -1.78 38.74 M39.11 40.96 C30.42 39.92, 21.77 40.62, -0.18 40.79 M-0.71 38.23 C-0.37 29.05, 1.88 16.68, -0.86 -0.29 M0.22 40.53 C0.78 29.95, -0.84 20.36, -0.88 0.67\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g><g stroke-linecap=\"round\" transform=\"translate(155.88831652581894 191.25974058139036) rotate(0 20 20)\"><path d=\"M0 0 C0 0, 0 0, 0 0 M0 0 C0 0, 0 0, 0 0 M-0.53 6 C1.69 5.09, 3.56 1.69, 4.88 0.67 M-0.24 6.54 C1.86 4.67, 3.16 2.19, 5.21 0.3 M-1.09 13.38 C4.27 9.39, 5.09 5.26, 11.63 1.29 M0.23 12.35 C4.03 7.91, 7.72 2.22, 11.02 -0.1 M-0.4 20.27 C3.91 13.71, 10.72 5.36, 15.7 -1.63 M0.17 18.68 C6 12.35, 10.36 5.51, 15.74 1.22 M2 25.19 C8.27 17.73, 15.56 7.04, 20.53 0.94 M-0.33 23.1 C8.05 14.61, 15.75 6.45, 20.64 0.78 M0.34 29.24 C6.98 25.97, 11.38 17.09, 26.11 -1.23 M0.43 29.69 C6.91 22.3, 13.81 14.44, 26.2 -0.1 M-0.88 37.77 C7.19 27.7, 13.67 20.05, 31.53 0.43 M-1.08 36.92 C7.57 27.97, 17.09 18.23, 31.91 0.02 M2.92 42.8 C13.01 28.9, 21.93 15.61, 36.75 0.89 M2.36 41.89 C8.12 33.36, 16.54 24.08, 37.68 0.08 M5.13 42.45 C20.78 25.67, 33.53 11.65, 41.29 2.23 M7.37 41.91 C16.93 29.44, 27.62 17.66, 40.42 1.41 M11.46 42.03 C25.01 27.49, 34.71 15.01, 42.38 8.21 M11.35 41.75 C24.15 27.45, 35.03 15.34, 42.08 6.32 M15.91 41.19 C26 32.51, 29.97 24.07, 39.54 14.14 M16.3 40.86 C24.01 34.23, 29.3 26.75, 42.12 14.23 M20.86 41.73 C31.11 33.18, 35.79 25.93, 40.17 18.77 M22.81 41.33 C28.92 33.67, 33.5 28.29, 40.94 19.57 M26.56 42.82 C29.97 35.62, 36.78 32.99, 40.92 26.46 M27.39 41.26 C31.1 37.08, 33.44 33.49, 41.11 26.11 M34.4 40.52 C35.08 36.39, 38.72 35.05, 40.76 31.17 M32.77 40.41 C35.38 39.42, 36.77 37.02, 41.73 32.35 M38.74 41.39 C38.96 40.33, 40.14 39.62, 41.91 37.67 M38.08 41.45 C39.11 40.03, 40.58 38.77, 41.54 37.41\" stroke=\"#a5d8ff\" stroke-width=\"0.5\" fill=\"none\"></path><path d=\"M0.21 0.72 C15.48 -2.29, 28.92 0.5, 38.12 -1.65 M0.14 -0.93 C12.55 0.42, 25.62 -0.07, 40.56 -0.77 M41.05 -1.63 C38.58 14.53, 38.88 27.23, 41.56 40.13 M40.68 -0.99 C39.7 11.11, 39.78 24.09, 40.59 39.11 M41.31 38.22 C32.42 38.49, 20.35 39.06, 0.71 39.63 M40.32 39.65 C23.94 39.25, 10.1 40.37, 0.21 39.57 M-1.37 40.44 C1.22 30.46, 0.66 15.8, 1.9 -1.76 M0.3 39.85 C-1.3 25.59, -0.51 10.58, -0.4 0.57\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g><g stroke-linecap=\"round\" transform=\"translate(155.88831652581894 231.25974058139036) rotate(0 20 20)\"><path d=\"M0 0 C0 0, 0 0, 0 0 M0 0 C0 0, 0 0, 0 0 M-1.06 6.29 C1.77 4.54, 2.65 2.39, 5.03 0.64 M-0.53 6.63 C1.7 4.06, 4.07 2.03, 4.68 0.69 M0.88 13.04 C5.16 8.97, 6.56 4.84, 10.81 0.59 M-0.53 12.43 C2.98 8.75, 5.38 5.08, 10.52 0.7 M-1.96 18.52 C1.77 15.09, 7.29 8.8, 16.21 0.81 M0.01 18.57 C6.04 12.61, 10.53 6.7, 16.48 0.88 M-1.36 23.35 C8.82 16.73, 13.77 5.11, 20.07 -2.02 M1.2 23.46 C6.34 17.45, 9.66 12.51, 21.43 -0.69 M-0.64 30.35 C7.58 18.94, 18.27 9.5, 27.1 -1.28 M-0.1 30.44 C7.5 20.93, 15.45 12.36, 25.94 0.74 M1.02 36.52 C9.08 26.16, 16.83 18.78, 30.24 -0.01 M0.1 36.9 C7.95 27.02, 15.37 18.29, 32.63 0.79 M1.4 40.89 C13.19 26.5, 23.58 15.39, 38.69 2.01 M1.47 41.82 C8.94 32.46, 18.01 21.79, 36.23 0.8 M6.5 41.46 C20.78 25.87, 32.5 10.02, 43.07 2.46 M6.78 40.58 C16.36 30.82, 26.68 18.88, 40.9 1.9 M12.52 41.75 C24.6 29.43, 33.12 16.97, 40.14 8.56 M11.96 41.46 C22.93 27.7, 35.68 14.29, 41.02 6.94 M16.35 39.53 C27.47 29.54, 36.79 20.8, 39.81 12.46 M16.78 42.12 C27.24 30.99, 35.24 19.01, 40.42 13.8 M22.15 40.03 C29.03 32.93, 38.13 22.77, 41.28 20.6 M23.48 40.8 C28.86 34.01, 35.69 27.59, 40.51 20.57 M29.32 40.75 C31.55 36.48, 33.46 35.31, 40.87 25.36 M26.94 40.94 C33.1 36.82, 37.8 30.55, 42.36 25.13 M34.36 40.46 C34.33 38.12, 37.74 36.15, 40.08 30.85 M33.3 41.43 C36.7 37.01, 39.58 34.32, 41.71 32 M38.3 41.57 C39.47 40.21, 40.62 39.49, 41.11 37.85 M38.23 41.2 C38.94 40.69, 39.93 39.46, 41.37 37.65\" stroke=\"#ffec99\" stroke-width=\"0.5\" fill=\"none\"></path><path d=\"M0.86 -1.88 C14.13 -0.15, 33.38 -0.04, 40.27 -1.87 M-0.01 0.56 C11.8 -0.17, 25.16 0.32, 40.53 -0.81 M41.95 1.56 C40.51 9.03, 41.69 19.25, 41.35 38.03 M40.5 0.59 C38.84 9.14, 38.96 18.96, 40.65 39.11 M39.29 40.71 C23.81 41.45, 8.29 37.98, 0.65 39.29 M40.75 40.21 C31.1 40.04, 22.64 40.59, -0.69 40.22 M-1.36 41.9 C-2.14 27.24, 1.58 10.06, 0.59 -0.3 M-0.04 39.6 C0.46 31.03, 0.02 23.82, -0.91 0.32\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g><g transform=\"translate(177.88831652581894 111.25974058139036) rotate(0 6.133514404296875 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">0</text></g><g transform=\"translate(157.88831652581894 131.25974058139036) rotate(0 6.133514404296875 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">0</text></g><g transform=\"translate(177.88831652581894 131.25974058139036) rotate(0 6.133514404296875 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">0</text></g><g transform=\"translate(157.88831652581894 151.25974058139036) rotate(0 2.4159622192382812 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">1</text></g><g transform=\"translate(177.88831652581894 151.25974058139036) rotate(0 2.4159622192382812 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">1</text></g><g transform=\"translate(157.88831652581894 171.25974058139036) rotate(0 2.4159622192382812 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">1</text></g><g transform=\"translate(177.88831652581894 171.25974058139036) rotate(0 2.4159622192382812 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">1</text></g><g transform=\"translate(157.88831652581894 191.25974058139036) rotate(0 6.34747314453125 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">2</text></g><g transform=\"translate(177.88831652581894 191.25974058139036) rotate(0 6.34747314453125 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">2</text></g><g transform=\"translate(157.88831652581894 211.25974058139036) rotate(0 6.34747314453125 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">2</text></g><g transform=\"translate(177.88831652581894 211.25974058139036) rotate(0 6.34747314453125 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">2</text></g><g transform=\"translate(157.88831652581894 231.25974058139036) rotate(0 6.071113586425781 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">3</text></g><g transform=\"translate(177.88831652581894 231.25974058139036) rotate(0 6.071113586425781 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">3</text></g><g transform=\"translate(157.88831652581894 251.25974058139036) rotate(0 6.071113586425781 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">3</text></g><g transform=\"translate(177.88831652581894 251.25974058139036) rotate(0 6.071113586425781 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">3</text></g><g stroke-linecap=\"round\"><g transform=\"translate(215.71287003334896 190.398310646764) rotate(0 -0.4813601946590751 19.60698575153947)\"><path d=\"M-1.93 -0.19 C2.32 9.13, 1.14 22.1, -0.69 39.34 M-0.51 -0.73 C-0.93 11.88, -0.28 23.26, 0.89 39.95\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(207.86931890450052 189.77980455425495) rotate(0 6.163633934859973 -0.8799388702173019)\"><path d=\"M-1.2 -0.46 C3.72 -1.12, 8.99 0.46, 13.53 -1.46 M0.17 -0.38 C3.07 -0.18, 6.68 -0.4, 12.83 -0.74\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(208.16837108258932 232.57017260596876) rotate(0 6.40554426095413 -0.6995449279083914)\"><path d=\"M0.47 -0.46 C4.13 -0.58, 8.83 -1.75, 12.67 -1.36 M0.15 0.04 C4.66 -0.27, 8.26 -0.83, 12.47 -0.97\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g transform=\"translate(192.08837724826452 204.48331526172296) rotate(270.04899893767623 36.4482421875 5.743276743836759)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"9.572127906394257px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">warpMatStride</text></g><g stroke-linecap=\"round\"><g transform=\"translate(204.40562464403547 153.05414994355488) rotate(0 -0.22235998715225946 8.11600589547379)\"><path d=\"M-1.26 0.18 C-0.55 6.93, 0.72 12.25, 0.82 16.45 M0.02 -0.22 C-0.37 4.25, -0.07 8.07, 0.35 15.76\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(201.1730329551815 152.79924274382938) rotate(0 2.478843485528472 -0.20424734881271434)\"><path d=\"M-0.2 0.15 C1.47 -0.28, 2.79 -0.17, 4.83 -0.61 M-0.09 0.2 C1.68 0.17, 3.47 -0.41, 5.16 -0.07\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(201.29628243358013 170.43459513137532) rotate(0 2.6787531413121997 -0.1259014179904625)\"><path d=\"M0.2 -0.2 C1.89 -0.12, 2.84 -0.5, 5.35 -0.3 M0.01 0.26 C1.55 -0.35, 2.78 0.03, 5.23 -0.51\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g transform=\"translate(170.75108725831223 131.00333909401525) rotate(270.04899893767623 42.0556640625 5.743276743836759)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"9.572127906394257px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">inWarpMatStride</text></g><g transform=\"translate(93.88624769790528 325.86120236064926) rotate(0 60.9375 9.600000000000364)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"16px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">order = [1,0]</text></g><g transform=\"translate(46.84903545185722 177.95598122012962) rotate(0 4.6875 9.600000000000364)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"16px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">M</text></g><g transform=\"translate(147.85865172652103 296.1549432870015) rotate(0 4.6875 9.600000000000364)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"16px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">K</text></g><g stroke-linecap=\"round\"><g transform=\"translate(11.809029217696434 31.37379988193061) rotate(0 77.91551148433487 -1.7680472187557825)\"><path d=\"M1.6 -1.82 C47.91 -0.09, 92.98 -2.15, 156.73 -3.3 M-0.9 -0.24 C46.46 -1.6, 94.11 -0.66, 154.61 -1.21\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g><g transform=\"translate(11.809029217696434 31.37379988193061) rotate(0 77.91551148433487 -1.7680472187557825)\"><path d=\"M128.05 7.34 C136.09 6.81, 142.82 2.06, 156.25 -3.05 M125.56 8.92 C134.48 5.26, 143.73 3.51, 154.13 -0.96\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g><g transform=\"translate(11.809029217696434 31.37379988193061) rotate(0 77.91551148433487 -1.7680472187557825)\"><path d=\"M127.97 -13.18 C135.86 -7.51, 142.62 -6.06, 156.25 -3.05 M125.48 -11.6 C134.53 -9.05, 143.81 -4.6, 154.13 -0.96\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g transform=\"translate(35.82070621765763 10) rotate(0 46.875 9.600000000000364)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"16px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">Major axis</text></g><g stroke-linecap=\"round\"><g transform=\"translate(10.61758429184556 28.099582860324517) rotate(0 0.6885733015975575 79.56700252496648)\"><path d=\"M1.43 1.28 C3.07 61.26, 0.71 125.47, -0.09 155.83 M-0.62 0.59 C0.46 59.24, -0.7 118.58, 0.51 158.55\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g><g transform=\"translate(10.61758429184556 28.099582860324517) rotate(0 0.6885733015975575 79.56700252496648)\"><path d=\"M-8.72 131.78 C-4 140.34, -2.14 153.16, 0.42 156.6 M-10.76 131.09 C-5.52 140.96, -2.67 151.44, 1.02 159.32\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g><g transform=\"translate(10.61758429184556 28.099582860324517) rotate(0 0.6885733015975575 79.56700252496648)\"><path d=\"M11.8 131.49 C8.39 140.24, 2.12 153.17, 0.42 156.6 M9.76 130.8 C7.27 140.62, 2.39 151.21, 1.02 159.32\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g transform=\"translate(-20.648818913817593 86.82111942361553) rotate(270 46.875 9.600000000000364)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"16px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">Minor axis</text></g><g stroke-linecap=\"round\" transform=\"translate(154.74847610250004 110.96843053859266) rotate(0 9.318317843373706 10.337138646445055)\"><path d=\"M0 0 C0 0, 0 0, 0 0 M0 0 C0 0, 0 0, 0 0 M0.21 6.82 C1.09 4.53, 3.14 1.69, 4.19 0.34 M0.08 6.56 C1.24 5.18, 2.11 3.18, 5.12 0.32 M-0.49 10.6 C1.36 9.17, 6.22 5.86, 10.25 -1.35 M0.18 11.91 C2.92 9.17, 4.02 7.52, 10.32 -0.27 M-1.57 20.09 C3.09 13.7, 9.55 8.57, 14.24 -1.08 M0.33 19.31 C5.09 10.76, 11.05 3.84, 16.15 -0.67 M2.4 22.19 C7.25 16.48, 14.13 11.02, 21.59 -0.5 M0.81 23 C8.07 15.66, 13.93 7.83, 19.24 1.24 M6.41 21.86 C10.52 17.25, 11.63 15.38, 19.5 7.88 M7.91 22.04 C11.85 16.97, 15.79 11.85, 21.12 8 M12.83 21.36 C13.47 20.46, 16.43 18.91, 20.53 12.7 M12.68 22.8 C14.97 19.32, 17.63 16.37, 19.6 13.16\" stroke=\"#ffc9c9\" stroke-width=\"0.5\" fill=\"none\"></path><path d=\"M-1.62 -1.52 C7.79 1.27, 12.78 0.46, 17.58 1.48 M-0.52 0.2 C7.5 0.73, 13.77 0.75, 18.24 0.29 M19.63 0.03 C19.42 6.33, 19.05 10.26, 18.17 19.72 M18.19 -0.35 C18.42 7.67, 18.92 16.2, 17.69 20.57 M19.43 18.81 C12.46 20.05, 7.67 20.78, 1.38 19.84 M19.43 20.32 C12.75 19.93, 6.67 20.78, -0.26 20.74 M-0.7 19 C-0.86 15.28, -1.76 12.25, -0.9 0.77 M0.6 19.81 C0.82 13.93, 0.36 5.89, -0.33 -0.92\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g><g transform=\"translate(157.8815469523766 111.22363618969757) rotate(0 6.133514404296875 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">0</text></g><g stroke-linecap=\"round\" transform=\"translate(279.9383119018788 110.59336162086038) rotate(0 40 40)\"><path d=\"M0 0 C0 0, 0 0, 0 0 M0 0 C0 0, 0 0, 0 0 M0.44 5.72 C1.08 5.1, 2.69 2.63, 5.65 -0.26 M-0.4 6.23 C0.85 4.75, 2.75 3.83, 4.7 0.01 M-0.69 11.15 C3.08 7.6, 8.39 3.13, 11.1 0.78 M0.82 11.68 C2.9 8.41, 5.9 4.39, 10.9 0.49 M1.4 17.86 C4.72 16.14, 7.87 11.84, 14.4 0.87 M0.69 18.87 C5.58 11.63, 11.09 5, 15.61 -0.62 M1.67 23.98 C4.54 16.5, 12.93 11.29, 19.41 0.91 M0.56 23.59 C3.92 18.53, 8.58 13.88, 20.63 -0.75 M1.31 30.94 C6.45 24.92, 10.73 15.93, 26.33 1.95 M-0.52 30.67 C8.83 19.73, 17.87 8.22, 26.87 1.24 M1.19 35.49 C12.42 20.27, 25.49 5.83, 32.13 -1.57 M0.36 36.28 C11.34 22.43, 24.77 8.38, 31.49 -0.77 M-1.57 41.03 C14.43 26.02, 28.78 7.18, 36.11 1.72 M0.8 43.44 C12.22 28.68, 21.94 15.42, 37.36 -0.65 M-0.84 49.12 C13.72 36.81, 25.26 19.76, 43.97 -0.71 M-0.25 49.69 C16.96 29.8, 33.61 9.1, 42.88 -0.68 M1.87 55.4 C19.44 34.84, 36.29 12.24, 49.26 2.01 M0.73 55.16 C10.71 43.31, 21.33 30.02, 47.44 -0.09 M-1.06 60.93 C18.98 35.39, 39.87 11.83, 53.4 -0.64 M-0.79 60.02 C12.91 45.68, 25.83 32.93, 53.21 0.19 M-0.05 68.15 C22.48 43.95, 40.16 18.3, 59.2 -1.27 M-0.21 66.51 C17.4 46.01, 34.3 27.07, 58.56 1.05 M0.46 72.36 C17.24 55.33, 33.12 38.91, 62.79 0.63 M0.91 72.66 C15.66 54.96, 31.97 37.65, 63.93 0.45 M-1.17 81.28 C22.88 51.76, 44.87 27.28, 67.21 1.95 M-0.51 79.85 C23.38 50.82, 49.72 21.6, 69.2 0.88 M2.13 83.95 C26.15 57.37, 49.05 32.49, 74.35 -0.78 M2.73 81.93 C29.28 51.55, 56.05 20.57, 73.58 0.66 M6.45 84.11 C31.07 56.87, 51.22 33.04, 78.46 -0.15 M8.32 82.66 C35.25 52.01, 62.46 19.66, 78.94 -0.61 M12.85 83.34 C37.45 53.58, 63.86 23.66, 83.55 4.39 M14.23 81.06 C39.94 51.97, 66.73 22.34, 83.12 2.3 M18.15 82.41 C37.54 59.45, 61.07 32.74, 82.77 7.03 M19.39 82.73 C42.82 54.52, 68.29 26.08, 83.17 8.85 M24.29 83.4 C39.82 64.26, 55.1 46.01, 83.13 14.55 M24.91 82.3 C46.86 56.7, 70.01 28.7, 81.96 13.86 M27.8 81.07 C50.93 58.65, 69.33 36.33, 80.98 19.4 M29.47 82.76 C46.02 61.98, 63.63 41.13, 83.52 20.63 M35.2 82.8 C43.98 72.76, 54.07 60.99, 82.8 27.14 M34.54 83.57 C51.3 64.29, 67.94 44.95, 81.69 26.63 M39.74 84.09 C54.21 67.1, 68.5 48.7, 80.51 32.49 M39.03 82.34 C47.95 72.24, 57.46 62.01, 83.35 33.54 M46.19 84.09 C56.03 72.57, 65.6 60.03, 84.29 38.78 M43.94 82.43 C60.51 66.3, 72.97 50.05, 83.08 38.91 M50.2 81.58 C64.56 66.16, 75.97 54.57, 83.33 45.49 M49.59 83.04 C62.68 66.48, 74.49 52.56, 81.8 45.83 M55.76 82.22 C60.46 76.01, 65.79 70.23, 81.2 52.21 M55.01 82.65 C66.02 70.61, 77.59 57, 81.98 50.95 M59.26 81.8 C66.49 77.83, 73.15 69.55, 81.33 57.94 M61.75 82.33 C66.63 76.11, 71.69 70.68, 83.07 57.97 M66.95 81.49 C70.56 76.61, 76.55 68.32, 82.35 65.05 M65.36 83.19 C71.54 75.69, 77.26 70.25, 82.63 63.67 M71.04 82.97 C74.97 77.63, 77.07 74.54, 82.9 70.57 M71.24 81.73 C75.31 77.05, 79.23 72.65, 83.05 69.56 M75.76 83.34 C79.13 80.52, 80.17 78.33, 82.49 75.31 M76.22 82.72 C77.65 80.83, 79.43 78.96, 82.45 75.71\" stroke=\"#ffc9c9\" stroke-width=\"0.5\" fill=\"none\"></path><path d=\"M1.93 -1.9 C20.46 0.38, 41.83 -0.73, 79.16 1.11 M-0.82 -0.75 C25.26 0.13, 50.85 -0.17, 80.87 0.57 M80.65 1.9 C79.43 19.63, 81.99 34.34, 80.65 79.21 M79.06 0.11 C79.83 21.77, 78.64 44.36, 79.69 79.81 M81.71 79.86 C54.95 79.99, 28.62 80.63, 0 81.51 M79.71 79.1 C58.71 79.74, 38.86 81.55, -0.23 80.18 M0.62 78.08 C-1.42 54.42, 1.13 32.07, -1.09 1.81 M0.05 79.53 C-0.34 60.57, -0.58 40.88, 0.24 0.84\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g><g transform=\"translate(265.5849722613434 144.7434184025078) rotate(0 4.6875 9.600000000000364)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"16px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">8</text></g><g transform=\"translate(312.6368653465985 91.17955435785007) rotate(0 4.6875 9.600000000000364)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"16px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">8</text></g><g transform=\"translate(313.6856933884464 139.86223699139373) rotate(0 6.133514404296875 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">0</text></g><g transform=\"translate(366.24949172486396 145.54750080521444) rotate(270 41.8564453125 6.5969380575452305)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"10.994896762575022px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">matMinorShape</text></g><g transform=\"translate(278.15232343570773 222.24574999684046) rotate(0 41.8564453125 6.5969380575452305)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"10.994896762575022px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">matMajorShape</text></g><g stroke-linecap=\"round\"><g transform=\"translate(114.40690244201551 59.274793935768685) rotate(89.99999999999994 0.46020199046310495 35.12560267093704)\"><path d=\"M1.21 1.98 C-1.14 21.09, -1.44 42.67, 1.54 69.63 M0.69 -0.84 C0.83 18.81, -0.39 37.04, -0.05 71.09\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(143.34133837340505 95.15037996665706) rotate(89.99999999999994 6.523669514097534 -0.02764936668518203)\"><path d=\"M-0.46 -0.19 C3.12 -0.28, 8.55 -0.76, 12.39 0.17 M0.37 0.34 C2.78 0.34, 6.36 0.44, 13.51 -0.37\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(73.51176435958843 95.06061422279527) rotate(89.99999999999994 6.342675707007288 -0.46409428332481184)\"><path d=\"M0.88 -0.29 C3.6 -0.25, 8.09 -1.32, 12.2 -0.77 M-0.15 -0.56 C5.16 0.39, 9.92 -0.04, 12.84 -0.62\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(318.31129802998373 171.26968026540635) rotate(89.99999999999994 0.4052247926592827 36.165514284105484)\"><path d=\"M-0.34 -1.58 C0.79 23.47, 0.69 43.48, 1.15 72.24 M0.21 0.62 C-0.07 23.7, -0.31 46.57, -0.14 73.91\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(349.8767330084058 206.93332216411727) rotate(89.99999999999994 8.276647408843221 0.4612819473086347)\"><path d=\"M0.74 1.29 C6.1 -0.2, 11.81 -1.09, 16.33 0.4 M-0.33 0.46 C5.54 0.02, 12.01 0, 16.89 0.19\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(273.9022030562296 208.84306456270315) rotate(89.99999999999994 8.400400245853312 -0.13512166701457318)\"><path d=\"M0.66 -0.21 C4.48 -1.18, 7.36 0.47, 17.33 -0.03 M-0.53 0.25 C5.71 0.15, 12.44 0.19, 16.08 -0.5\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(381.69746482574715 114.2862341564487) rotate(179.9999999999999 0.24983211452485676 36.62254913459856)\"><path d=\"M-0.13 0.8 C2.02 28.43, -1.21 56.63, 0.27 71.81 M0.24 -0.36 C1.04 20.68, 0.1 43.81, 0.33 73.6\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(374.28685081933736 190.47082389130628) rotate(179.9999999999999 8.432895546592626 0.18645781023042218)\"><path d=\"M1.24 0.66 C3.76 0.97, 10.45 -1.62, 16 1.14 M0.28 -0.77 C4.56 0.38, 10.32 -0.05, 16.58 -0.49\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(373.26744533105716 113.4864782886034) rotate(179.9999999999999 7.4828192661773105 0.24619718034045945)\"><path d=\"M-1.36 1.15 C5.69 -1.51, 10.85 1.19, 16.29 0.02 M-0.47 0.43 C4.52 0.18, 9 -0.16, 16.32 -0.66\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g transform=\"translate(59.097061930108225 74.33975329980603) rotate(0 45.9228515625 4.954826242058516)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"8.258043736764487px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">sliceMajorMatOffset</text></g><g stroke-linecap=\"round\" transform=\"translate(80.10253566001609 109.65473273012685) rotate(0 36.538489372767316 80.67815846243957)\"><path d=\"M0 0 C0 0, 0 0, 0 0 M0 0 C0 0, 0 0, 0 0 M0.26 6.22 C1.55 4.57, 3.78 1.26, 5.76 0.14 M-0.25 6 C1.49 3.98, 3.1 2.71, 4.93 0.02 M1.61 13.11 C2 8.91, 3.23 5.41, 9.33 0.16 M-0.17 12.42 C4.13 6.92, 8.54 2.79, 9.98 0.33 M1.73 17.56 C2.1 12.47, 7.12 8.49, 16.77 -0.03 M-0.79 17.87 C4.7 13.24, 8.17 7.97, 15.9 0.4 M1.09 24.45 C8.61 13.35, 16.18 4.03, 20.47 -0.28 M0.61 23.77 C7.21 15.29, 15.18 7.22, 20.55 -0.28 M-0.15 28.51 C8.29 21.9, 15.13 14.63, 24.6 1.37 M-0.8 29.61 C4.74 24.46, 11.46 16.92, 26.34 -0.64 M-1.32 38.21 C8.22 27.9, 13.25 20.11, 30.42 0.79 M-1.07 37.21 C9.73 26.09, 17.37 15.2, 31.6 -0.38 M-1.64 40.97 C13.7 27.88, 26.98 10.5, 35.95 0.62 M-0.14 41.69 C14.23 26.98, 28.2 10.57, 36.51 0.75 M-0.88 48.25 C12.84 31.9, 27.92 19.98, 42.46 -1.04 M-0.4 48.4 C12.76 33.94, 25.99 17.52, 41.76 -0.48 M-1.59 52.97 C18.03 32.97, 34.84 14.66, 46.49 2.18 M1.24 54.22 C11.33 41.93, 22.55 29.2, 46.67 -0.05 M-1.06 62.3 C12.83 46.47, 23.76 36.82, 54.34 1.63 M-0.51 60.25 C19.13 39.91, 38.61 17.25, 53.78 -0.16 M-1.44 67.17 C17.19 51.4, 30.23 32.48, 58.04 -1.6 M0.66 67.14 C22.44 42.46, 43.7 15.81, 59.02 -0.55 M1.45 71.22 C21.31 51.36, 39.2 29.48, 61.92 0.09 M0.04 73.98 C14.17 56.55, 26.76 41.04, 64.32 0.08 M1.5 79.86 C15.46 60.71, 32.93 40.25, 70.53 1.52 M-0.65 79.19 C24.54 52.13, 47.23 25.62, 69.72 0.76 M0.08 85.72 C21.97 60.72, 45.26 33.72, 74.55 2.26 M0.66 85.87 C29.78 52.09, 58.38 18.87, 73.35 -0.44 M-1.92 89.45 C27.23 60.38, 51.4 33.15, 72.11 6.42 M0.54 90.44 C22.67 65.07, 46.57 39.49, 72.94 7.28 M1.73 97.16 C30.06 64.33, 56.28 30.18, 75.16 13.75 M0.03 98.01 C23.1 69.64, 47.12 44.11, 74.23 12.46 M1.9 105.47 C22.73 78.02, 48.55 48.37, 72.28 19.56 M0.02 103.26 C15.67 85.12, 33.06 66.04, 74.01 19.14 M1.38 110.51 C22.22 85.77, 44.48 60.37, 75.83 26.14 M0.71 109.3 C20.96 83.24, 43.58 57.73, 73.29 24.14 M0.72 117.35 C15.2 96.82, 35.42 77.13, 73.93 31.52 M-0.48 115.08 C21.19 90.24, 43.81 65.52, 73.48 31.77 M-1.8 120.86 C24.24 92.48, 52.74 61.91, 72.28 38.98 M-0.74 121.96 C28.12 91.74, 53 60.27, 74.3 37.12 M-0.26 127.12 C28.89 97.25, 55.52 64.53, 73.49 42.02 M0.07 129.15 C18.83 106.78, 38.23 83.92, 73.23 42.97 M2.12 134.45 C23.98 108.72, 45.57 80.31, 72.31 49.42 M0.83 134.51 C17.65 113.54, 37.71 92.26, 72.92 48.68 M0.28 138.43 C13.52 124.03, 29.69 104.97, 73.52 54.66 M0.58 139.52 C26.88 110.8, 53.18 80.67, 73.11 55.56 M1.19 145.37 C18.95 122.35, 41.59 100.02, 71.89 60.75 M0.49 146.55 C16.31 127.59, 30.34 110.69, 72.81 61.46 M-0.2 153.08 C15.96 136.05, 29.92 118.01, 74.05 69.67 M-0.05 151.58 C23.5 124.54, 47.17 99, 74.23 68.2 M0.93 160.36 C28.27 128.08, 56.97 96.33, 73.77 75.38 M0.6 159.49 C26.68 128.28, 54.87 97.33, 74.2 74.39 M-0.15 162.48 C20.03 140.62, 36.07 123.43, 75.2 80.88 M0.99 163.49 C16.05 144.83, 30.9 128.33, 73.59 80.36 M6.19 163.45 C29.22 138.68, 49.24 116.39, 74.8 83.61 M6.67 163.22 C32.43 133.05, 58.64 102.81, 73.27 85.47 M10.67 162.34 C35.75 135.45, 57 111.01, 73.24 92.28 M12.99 162.95 C33.95 136.02, 57.55 110.37, 74.2 92.81 M18.79 161.64 C39.44 137.87, 58.59 112.99, 73.33 100.34 M16.97 161.82 C29.97 147.86, 41.76 133.7, 73.47 98.51 M23.57 163.89 C35.62 146.91, 48.53 133.65, 75.23 102.97 M22.12 162.33 C36.64 147.41, 50.66 131.86, 73.63 104.64 M28.03 164.32 C43.26 148.79, 56.92 131.2, 71.78 110.11 M29.07 162.89 C45.43 145.34, 61.17 126.03, 74.16 110.12 M33.18 163.69 C46.9 148.64, 58.27 131.69, 74.34 115.92 M33.69 162.5 C44.13 149.23, 56.79 137.45, 73.4 116.02 M40.57 160.96 C52.63 149.27, 63.26 134.53, 72.76 123.57 M39.73 163.33 C50.43 148.99, 62.76 135.17, 74.68 122.25 M44.24 162.13 C49.9 155.78, 55.68 148.66, 73.24 130.73 M44.93 163.4 C52.77 152.95, 60.34 144.21, 74.31 128.9 M49.23 160.9 C53.59 155.57, 59.95 147.75, 73.62 134.53 M49.66 163.13 C55.41 154.82, 61.75 147.9, 72.96 135.13 M55.61 163.5 C61.53 155.86, 69.92 144.77, 74.66 140.63 M55.03 162.03 C59.03 157.71, 63.73 151.74, 73.07 140.06 M60.28 162.13 C61.07 159.84, 67.69 154.76, 73.86 144.64 M58.85 164.05 C64.07 158.56, 69 152.55, 74.84 146.09 M64.63 163.54 C66.08 159.25, 69.4 158, 73.6 152.94 M65.14 162.54 C67.08 160.91, 69.86 157.23, 74.15 153.36 M70.7 163.37 C71.51 161.59, 72.48 160.59, 73.75 159.53 M70.47 162.98 C71.15 161.65, 72.45 160.28, 73.51 159.54 M0.11 161.45 C0.11 161.45, 0.11 161.45, 0.11 161.45 M0.11 161.45 C0.11 161.45, 0.11 161.45, 0.11 161.45 M5.08 161.81 C3.98 159.09, 1.42 156.67, -0.77 156.5 M5.62 161 C3.63 159.32, 0.66 156.74, -0.18 155.87 M13.49 160.98 C7.94 156.9, 5.92 153.8, -1.31 152.18 M12.7 160.93 C9.09 157.31, 4.16 155.16, -0.39 150.39 M17.93 159.67 C14.54 156.21, 9.84 152.73, -1.07 147.16 M18.4 161.56 C12.46 156.06, 4.39 150.33, -0.9 144.96 M23.07 162.27 C18.76 154.01, 8.37 147.05, -0.11 139.84 M24.23 161.48 C17.16 156.08, 12.82 150.57, -0.47 140.94 M31.06 159.91 C21.49 150.68, 9.9 144.52, -2.03 133.32 M30.49 160.65 C23.76 154.61, 15.82 148.11, -1.36 133.87 M34.84 162.15 C28.28 151.2, 18.86 144.77, -1.67 130.73 M35.41 160.78 C25.67 153.22, 16.82 143.91, 0.79 129.96 M41.76 160.94 C31.6 152.83, 25.34 144.55, -1.51 125.73 M42.77 161.19 C28.18 148.59, 12.54 133.83, 0.93 124 M49.53 160.72 C33.3 144.71, 17.4 133.57, -0.15 119.19 M49.93 160.76 C31.77 146.13, 14.97 130.95, 0.28 117.99 M53.73 159.21 C37.36 145.13, 19.17 130.72, -0.78 111.97 M55.51 160.58 C37.49 145.55, 18.56 129.41, -0.07 113.7 M59.36 160.08 C38.76 144.67, 19.58 123.81, 0.77 107.05 M61.02 160.53 C46.02 146.23, 29.55 132.65, -1.04 108.75 M64.77 159.09 C44.77 140.35, 20.89 119.94, -0.7 101.51 M66.92 161.3 C47.49 145.87, 28.99 128.65, -0.16 102.4 M72.96 160.16 C54.11 146.8, 37.01 131.43, -0.5 96.05 M74.1 162.26 C44.62 135.98, 15.46 111.07, -0.26 97.02 M73.53 156.21 C52.05 139.14, 32.18 118.5, -0.79 90.99 M73.86 156.27 C53.61 140.43, 34.99 123.95, 0 91.89 M72.25 149.65 C55.68 136.87, 39.51 119.49, 0.62 87.78 M73.72 150 C50.5 132.48, 27.57 112.44, -0.57 86.64 M72.55 145.35 C47.34 124.18, 21.7 102.31, 1.57 80.96 M72.9 144.78 C46.6 120.55, 17.01 97.38, -0.27 81.06 M73.42 138.06 C54.49 123.48, 34.29 103.62, -1.21 75.71 M72.49 139.88 C57.54 125.48, 40.25 111.41, 0.82 76.51 M72.81 136.39 C45.25 110.6, 15.23 86.81, -0.87 71.82 M72.85 134.38 C50.35 115.39, 27.27 95.01, 0.26 71.82 M74.72 128.31 C47.54 108.83, 23.16 89.15, -1.17 65.2 M72.92 128.57 C48.45 107.92, 24.65 88.5, 0.59 66.61 M72.61 125.18 C44.79 101.26, 19.13 76.98, -1.24 59.87 M73.66 123.79 C57.87 110.95, 44 99.21, 0.75 61.19 M72.52 119.2 C47.06 95, 23.58 73.6, -0.34 53.47 M73.41 117.83 C56.41 102.03, 38.55 86.91, -0.6 55.95 M72.39 115.45 C48.14 90.2, 23.39 69.33, 1.44 49.27 M73.24 114.79 C51.27 94.46, 28.75 72.82, 0.34 49.21 M73.3 109.38 C49.87 88.66, 30.09 67.54, -1.65 45.62 M72.34 108.46 C47.8 85.44, 23.2 64.32, -0.16 44.62 M74.71 102.79 C52.66 84.71, 29.66 66.06, -1.69 40.04 M73.41 102.21 C45.33 78.27, 15.88 53.2, 0.06 39.02 M73.7 97.38 C50.62 77.06, 24.88 57.76, -1.92 34.63 M72 98.34 C51.03 77.8, 28.71 58.56, 0.41 33.79 M72.24 90.69 C56.32 79.28, 44.66 64.95, -1.4 28.12 M73.93 91.97 C49.04 70.47, 24.2 50.72, 0.9 28.79 M72.44 85.63 C45.77 65.88, 23.04 42.6, 0.15 21.35 M72.63 86.4 C51.96 69.42, 31.54 49.95, -0.43 23.67 M71.8 82.48 C56.21 64.95, 36.02 47.99, 1.68 17.28 M72.52 81.02 C49.66 63.92, 28.34 43.01, -0.2 17.78 M74.41 76.4 C47.16 54.07, 23.47 34.09, -0.01 14.49 M72.41 76.65 C44.76 51.92, 17.36 28.01, -0.28 13.54 M74.31 69.4 C54.04 55.9, 33.75 38.19, 1.05 7.18 M72.83 71.4 C43.84 46.86, 15.22 21.07, -0.4 8.29 M74.6 63.87 C47.24 42.21, 19.82 21.79, -0.08 3.31 M73.44 66.12 C46.09 43.66, 18.08 20, -0.06 2.38 M74.82 62.55 C47.24 36.12, 23.29 15.76, 1.83 -1.33 M72.42 60.2 C45.74 36.06, 19.31 13.59, 0.62 -0.99 M74.12 54.06 C46.64 31.81, 23.14 11.2, 9.65 -2.45 M71.78 54.96 C49.79 36.5, 26.18 16.74, 8.54 -1.14 M74.54 48.89 C51.99 33.61, 32.94 16.84, 14.83 -0.95 M72.82 49.57 C50.67 31.57, 28.58 11.44, 12.65 -1.76 M72.98 45.55 C56.91 28.02, 38.96 15.55, 20.73 -0.43 M74.17 45 C56.85 29.35, 38.5 14.85, 19.46 -2.53 M72.75 39.28 C57.86 24.39, 41.43 11.19, 25.35 -1.6 M73.48 38.72 C56.17 24.58, 38.78 10.27, 25.81 -1.69 M75.03 34.81 C61.4 22.73, 51.82 15.75, 32.57 -2.32 M73.03 35.18 C56.99 19.87, 42.2 5.94, 32.31 -2.19 M74.89 28.45 C59.55 20.69, 50.74 8.58, 40.14 0.56 M73.81 27.93 C62.99 19.8, 54.65 11.99, 37.45 -1.59 M72.52 24.15 C61.51 14.73, 54.48 4.93, 43.21 -0.04 M72.97 23.46 C62.88 14.49, 52.11 5.11, 43.19 -1.54 M72.51 18.99 C67.88 12.43, 60.14 5.91, 49.8 -0.76 M73.12 18.55 C65.73 12.37, 58.65 6.41, 50.62 -1.13 M75.08 15.12 C68.72 8.49, 66.04 8.56, 56.83 -1.61 M73.79 12.21 C67.62 6.82, 61.34 2.37, 56.1 -2.92 M71.81 8.81 C70.53 4.75, 66.45 3.53, 61.67 -1.9 M72.78 7.14 C68.68 3.57, 64.99 -0.09, 62.52 -1.2 M73.67 2.1 C71.09 0.65, 70.01 -0.57, 68.72 -1.75 M73.31 2.62 C72.52 1.9, 71.28 0.64, 69.1 -1.29\" stroke=\"#000000\" stroke-width=\"0.5\" fill=\"none\"></path><path d=\"M1.09 -1 C20.66 -1.42, 45.82 -0.71, 71.45 1.71 M-0.61 0.36 C15.94 -1.22, 33.02 -1.23, 72.92 0.41 M72.11 1.15 C75.62 50.09, 75.11 102.57, 74.81 161.12 M73.38 -0.97 C72.95 50.09, 73.96 102.54, 72.64 160.87 M72.81 161.42 C45.29 163.94, 19.76 163.97, 0.26 160.41 M72.96 160.6 C50.17 160.07, 26.09 161.22, 0.42 160.84 M1.26 162.38 C-0.03 97.24, 3.24 33.46, 1.22 -0.23 M-0.91 161.2 C0.41 106.2, -0.94 49.38, 0.44 -0.96\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g><g stroke-linecap=\"round\"><g transform=\"translate(236.7121677824274 60.66246974002388) rotate(89.99999999999994 5.644356315727521 -0.5741556693510574)\"><path d=\"M-1.17 -0.7 C5.75 1.19, 11.09 -0.43, 12.46 -1.38 M0.45 -0.02 C2.08 -0.32, 5.59 -0.04, 12.3 0.24\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(73.58107107830352 60.38861816802455) rotate(89.99999999999994 6.0056060940783595 -0.07226701323725138)\"><path d=\"M0.64 1.19 C3.65 -0.31, 5.13 -1.15, 11.68 -1.34 M-0.56 -0.24 C4.34 0.01, 7.45 0.35, 12.57 -0.81\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g transform=\"translate(126.7343002896763 46.97398464313483) rotate(0 36.2548828125 4.954826242058516)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"8.258043736764487px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">smemMinorStride</text></g><g stroke-linecap=\"round\"><g transform=\"translate(80.6797166166408 59.91543008838744) rotate(0 80.71455032326509 -0.6337505858391523)\"><path d=\"M1.22 -0.14 C45.76 0.21, 92.43 0.04, 160.55 -1.75 M0.55 0.48 C35.91 0.1, 71.04 -1.16, 160.88 0.18\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(198.77298521288378 240.16303881692693) rotate(89.99999999999994 -0.7733357358877271 40.76112670388193)\"><path d=\"M-1.86 -1.49 C-1.44 20.12, 2.24 41.08, -1.02 83.02 M-0.85 -0.34 C0.05 25.78, 0.9 52.34, -0.99 82.45\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(234.7791007141388 281.41364192000947) rotate(89.99999999999994 5.917166964948777 -0.15094759153544146)\"><path d=\"M-1.21 -0.77 C4.65 -0.99, 6.29 -0.25, 13.04 0.51 M-0.3 -0.03 C4.47 0.38, 7.81 -0.7, 12.61 -0.11\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(150.98984181694522 282.46241518421266) rotate(89.99999999999994 6.752748591846498 -0.4719803035031873)\"><path d=\"M1.17 -1.01 C2.26 -0.18, 5.95 0.74, 13.26 -1.38 M0.25 0.43 C2.8 -0.63, 6.58 0.03, 12.27 0.04\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g transform=\"translate(165.37803274491205 288.88128456543564) rotate(0 48.33984375 4.954826242058516)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"8.258043736764487px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">tileNumMatsMajorAxis</text></g><g stroke-linecap=\"round\"><g transform=\"translate(172.06961653977285 75.14645915545407) rotate(89.99999999999994 0.5833314675998906 20.02335274184952)\"><path d=\"M1.77 0.15 C0.28 9.57, -0.76 15.77, -0.58 39.89 M0.58 0.32 C0.27 8.4, 0 17.84, 0.26 38.31\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(187.41700099544835 95.28745750066264) rotate(89.99999999999994 6.612802408049063 -0.4202400686144756)\"><path d=\"M0.21 0.56 C3.1 -1.15, 6.75 0.7, 11.99 -1.4 M0.39 -0.28 C4.11 -0.02, 7.96 -0.37, 13.01 -0.79\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(146.63065818521693 95.10165048136696) rotate(89.99999999999994 6.515335117495155 -0.3013869968854124)\"><path d=\"M-0.46 -1.06 C3.59 0.72, 7.03 -1.34, 12.93 0.46 M0.21 0.11 C4.46 -0.2, 8.67 -0.64, 13.49 0.32\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g transform=\"translate(157.0705400607477 75.79390156205773) rotate(0 36.2548828125 4.954826242058516)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"8.258043736764487px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">loadMajorStride</text></g></svg>"}, {"filename": "docs/backend/ldmatrixOperand1.svg", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "file_content_changes": "@@ -0,0 +1,16 @@\n+<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 425.6297693760329 355.0612023606518\" width=\"851.2595387520659\" height=\"710.1224047213036\">\n+  <!-- svg-source:excalidraw -->\n+  <!-- payload-type:application/vnd.excalidraw+json --><!-- payload-version:2 --><!-- payload-start --><!-- payload-end -->\n+  <defs>\n+    <style class=\"style-fonts\">\n+      @font-face {\n+        font-family: \"Virgil\";\n+        src: url(\"https://excalidraw.com/Virgil.woff2\");\n+      }\n+      @font-face {\n+        font-family: \"Cascadia\";\n+        src: url(\"https://excalidraw.com/Cascadia.woff2\");\n+      }\n+    </style>\n+  </defs>\n+  <rect x=\"0\" y=\"0\" width=\"425.6297693760329\" height=\"355.0612023606518\" fill=\"#ffffff\"></rect><g stroke-linecap=\"round\" transform=\"translate(81.18632482354525 110.55409273575788) rotate(0 80 80)\"><path d=\"M1.32 -0.04 C52.83 0.45, 101.13 0.75, 158.84 -1.98 M0.17 -0.29 C41.41 2.21, 80.57 0.68, 160.27 -0.41 M161.66 0.4 C157.78 44.75, 159.15 93.59, 158.08 161.91 M160.36 0.26 C158.85 44.86, 158.93 89.55, 159.09 159.85 M159.62 160.62 C103.84 159.07, 49.71 159.81, -0.82 160.81 M159.75 160.75 C110.95 160.63, 62.9 160.91, -0.92 159.55 M1.05 159.72 C0.45 124.73, 0.69 88.37, 1.45 0.5 M-0.68 160.18 C-0.44 100.01, 0.21 39.69, 0.18 -0.32\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g><g stroke-linecap=\"round\" transform=\"translate(83.42852838615386 192.3671116959431) rotate(0 20 20)\"><path d=\"M1.3 1.3 C12.2 1.61, 27.09 -1.97, 39.06 0.56 M0.95 0.75 C8 -0.67, 16.97 -0.29, 39.86 -0.25 M38.17 -1.08 C39.88 16.59, 38.41 31.2, 39.55 38.86 M39.76 0.44 C39.98 10.73, 39.24 19.9, 40.48 40.66 M39.46 39.89 C30.99 40.75, 19.28 40.94, 0.05 40.78 M39.38 40.67 C27.89 41.25, 15.3 39.85, -0.75 39.04 M-1.08 40.77 C-1.05 27.67, 1.24 14.95, 1.52 -0.18 M-0.59 40.16 C0.33 30.34, 0.45 20.37, -0.12 0.46\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g><g transform=\"translate(85.42852838615386 212.3671116959431) rotate(0 6.133514404296875 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">0</text></g><g transform=\"translate(109.0916502772476 191.2694622346462) rotate(0 2.4159622192382812 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">1</text></g><g transform=\"translate(109.0916502772476 211.2694622346462) rotate(0 2.4159622192382812 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">1</text></g><g transform=\"translate(127.44247327865861 191.39815378852654) rotate(0 6.34747314453125 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">2</text></g><g transform=\"translate(127.44247327865861 211.39815378852654) rotate(0 6.34747314453125 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">2</text></g><g transform=\"translate(145.01818232013653 191.7206238323888) rotate(0 6.071113586425781 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">3</text></g><g transform=\"translate(145.01818232013653 211.7206238323888) rotate(0 6.071113586425781 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">3</text></g><g transform=\"translate(58.0042610297931 250.94032410313048) rotate(0 36.4482421875 5.743276743836759)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"9.572127906394257px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">warpMatStride</text></g><g transform=\"translate(148.62664602385996 253.70941547967413) rotate(0 42.0556640625 5.743276743836759)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"9.572127906394257px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">inWarpMatStride</text></g><g transform=\"translate(94.81314197902805 325.8612023606511) rotate(0 60.9375 9.600000000000364)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"16px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">order = [1,0]</text></g><g transform=\"translate(157.6344922327524 298.5941642912567) rotate(0 4.6875 9.600000000000364)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"16px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">N</text></g><g transform=\"translate(49.211084797695094 181.40208978308146) rotate(0 4.6875 9.600000000000364)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"16px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">K</text></g><g stroke-linecap=\"round\"><g transform=\"translate(12.735923498819261 31.373799881934247) rotate(0 76.79950755376618 -0.4080429132536665)\"><path d=\"M-0.9 -1.5 C41.15 1.41, 87.18 0.34, 154.01 -0.68 M0.25 0.76 C39.9 -2.09, 79.3 -1.7, 154.5 -1.29\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g><g transform=\"translate(12.735923498819261 31.373799881934247) rotate(0 76.79950755376618 -0.4080429132536665)\"><path d=\"M125.36 7.34 C132.09 6.67, 142.9 3.19, 153.42 -0.52 M126.51 9.6 C133.43 5.43, 140.12 3.58, 153.91 -1.13\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g><g transform=\"translate(12.735923498819261 31.373799881934247) rotate(0 76.79950755376618 -0.4080429132536665)\"><path d=\"M125.46 -13.18 C132.36 -8.15, 143.14 -5.93, 153.42 -0.52 M126.61 -10.92 C133.54 -9.8, 140.21 -6.35, 153.91 -1.13\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g transform=\"translate(36.74760049878046 10) rotate(0 46.875 9.600000000000364)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"16px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">Major axis</text></g><g stroke-linecap=\"round\"><g transform=\"translate(11.544478572968387 28.099582860326336) rotate(0 -0.046042397649955547 78.99569169559527)\"><path d=\"M1.05 -0.28 C-2.59 36.31, -2.35 71.52, 1.45 158.27 M-0.68 0.18 C-0.73 59.48, -0.08 118.63, 0.18 157.45\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g><g transform=\"translate(11.544478572968387 28.099582860326336) rotate(0 -0.046042397649955547 78.99569169559527)\"><path d=\"M-9.25 129.06 C-9.28 136.42, -6.69 142.43, 1.63 157.95 M-10.98 129.52 C-6.97 140.14, -2.38 150.54, 0.36 157.13\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g><g transform=\"translate(11.544478572968387 28.099582860326336) rotate(0 -0.046042397649955547 78.99569169559527)\"><path d=\"M11.27 128.9 C6.61 136.34, 4.59 142.38, 1.63 157.95 M9.54 129.36 C5.83 139.91, 2.71 150.38, 0.36 157.13\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g transform=\"translate(-19.721924632694822 86.82111942361735) rotate(270 46.875 9.600000000000364)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"16px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">Minor axis</text></g><g stroke-linecap=\"round\" transform=\"translate(82.28868796283496 192.0758016531454) rotate(0 9.318317843373706 10.337138646445055)\"><path d=\"M0 0 C0 0, 0 0, 0 0 M0 0 C0 0, 0 0, 0 0 M-0.35 6.36 C2.33 4.19, 3.01 2.44, 5.06 0.02 M-0.36 6.43 C1.43 4.58, 3.08 2.56, 4.88 -0.03 M0.92 13.12 C3.79 9.06, 5.82 5.22, 9.54 0.08 M-0.26 11.92 C3.74 8.58, 6.17 5.04, 10.77 -0.6 M-1.02 19.72 C4.96 14.16, 8.28 6.17, 16.37 -1.56 M0.01 18.88 C5.12 13.85, 9.35 7.02, 15.44 0.97 M0.69 22.02 C5.16 19.92, 10.33 15.24, 18.38 -0.55 M1.27 22.49 C6.84 15.21, 13.32 8.79, 20.91 1.28 M8.33 21.76 C10.53 19.3, 14.11 13.69, 22.33 8.56 M8.06 21.33 C11.8 17.85, 15.79 11.13, 21.2 7.2 M13.15 22.62 C14.68 20.81, 17.11 16.81, 20.88 14.48 M12.37 22.81 C15.17 19.6, 17.5 16.52, 19.57 13.34\" stroke=\"#ffc9c9\" stroke-width=\"0.5\" fill=\"none\"></path><path d=\"M-0.79 0.41 C6.68 0.39, 12.07 -0.24, 17.54 -1.27 M0.06 0 C6.09 -0.33, 11.73 0.4, 19.18 0.67 M18.88 -1.81 C19.69 5.4, 20.14 8.78, 20.53 19.55 M19.53 -0.33 C18.93 6.3, 18.77 10.82, 19.1 20.27 M19.22 20.1 C12.39 20.01, 4.99 19.23, 0.95 19.21 M18.17 20.91 C11.2 20.85, 4.61 19.78, -0.93 21.04 M0.35 21.73 C1.1 14.56, -1.78 8.65, -1.05 -0.27 M-0.57 19.78 C0.03 12.15, 0.02 4.3, 0.12 -0.94\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g><g transform=\"translate(85.42175881271146 192.3310073042503) rotate(0 6.133514404296875 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">0</text></g><g stroke-linecap=\"round\" transform=\"translate(280.86520618300165 110.59336162086402) rotate(0 40 40)\"><path d=\"M0 0 C0 0, 0 0, 0 0 M0 0 C0 0, 0 0, 0 0 M-0.64 6.68 C1.3 4.28, 2.88 2.41, 4.86 0.16 M-0.23 6.33 C1.24 4.14, 2.64 2.63, 4.63 0.56 M1.18 10.44 C2.8 7.74, 7.26 2.59, 10.69 -0.82 M0.46 11.56 C3.15 8.07, 6.04 5.76, 10.37 -0.39 M-1.18 17.15 C6.32 9.87, 11.46 5.71, 15.12 0.6 M-0.3 18.14 C5.04 12.69, 9.7 4.88, 14.94 -0.12 M1.25 25.34 C4.47 15.35, 12.37 9.79, 22.7 -0.7 M-0.24 24.4 C7.58 16.92, 12.77 10.57, 20.97 0.48 M-0.93 31.05 C9.39 23.32, 15.68 13.24, 25.47 1.97 M-0.56 29.87 C6.51 23.87, 11.09 16.33, 25.93 1.08 M0.46 35.71 C10.88 26.98, 20.17 13.74, 33.22 0.44 M-0.31 37.13 C9.8 23.78, 21.5 10.77, 32.64 -0.78 M-1.24 42.72 C12.46 29.81, 26.42 11.14, 37.5 0.32 M1.05 42.57 C11.39 29.76, 23.08 15.79, 37.27 0.91 M-0.3 50.5 C10.85 36.56, 21.42 26.36, 42.13 1.69 M-0.89 49.32 C9.88 35.99, 21.33 24.57, 42 -0.78 M-0.72 53.94 C12.27 38.47, 29.91 23.39, 47.16 -0.12 M0.44 54.51 C16.2 35.9, 35.08 15.42, 47.12 0.9 M-0.25 61.19 C11.08 48.95, 19.97 37.59, 51.43 -1.8 M0.74 60.01 C15.84 42.08, 32.5 22.95, 53.66 -0.96 M-0.53 67.13 C10.5 53.61, 23.9 36.94, 56.51 0.74 M-1.19 67.74 C20.45 43.35, 43.03 18.47, 57.54 -0.35 M0.16 74.38 C21.34 44.74, 44.68 18.31, 65.24 1.02 M-0.07 72.55 C21.74 48.82, 42.7 24.62, 64.16 0.31 M-1.76 78.31 C28.35 46.81, 54.85 14.23, 69.71 -1.13 M-0.71 79.13 C14.17 62.14, 30.71 44.89, 68.55 0.8 M1.24 81.52 C23.25 61.54, 40.87 37.73, 73.79 1.06 M2.57 82.31 C21.43 59.74, 40.8 39.66, 74 -0.29 M6.57 80.6 C32.97 56.28, 57.53 26.04, 81.09 -1.87 M8.82 81.8 C35.54 50.39, 62.54 18.99, 80.13 1.07 M12.04 82.92 C30.78 60.62, 45.11 42.73, 82.85 4.12 M13.1 82.73 C35.49 57.91, 54.97 34.1, 82.97 2 M17.08 81.32 C38.12 60.87, 57.59 35.69, 83.86 6.54 M17.83 82.3 C42.78 55.41, 66.89 27.47, 82.93 8.54 M22.63 81.87 C37.78 68.54, 52.35 54.22, 81.65 14.9 M24.81 81.39 C35.37 67.57, 48.33 53.51, 82.18 14.04 M31.13 80.66 C40.81 71.39, 49.6 56.11, 84.5 19.18 M29.31 83.2 C40.21 69.04, 52.87 54.77, 82.73 19.53 M32.39 81.23 C51.3 65.2, 65.99 45.56, 82.68 26.89 M34.11 82.63 C44.03 70.75, 54.49 59.04, 81.82 26.64 M38.84 83.64 C53.08 67.72, 63.06 54.42, 82.32 32.5 M38.81 83.12 C51.99 68.07, 62.3 55.44, 81.93 32.92 M44.83 81.45 C57.14 70.59, 64.99 56.79, 84.69 38.49 M45.33 83.6 C53.4 72.4, 64.5 59.8, 82.12 38.73 M48.47 83.18 C59.32 74.48, 64.11 66.99, 81.46 44.34 M49.81 81.76 C63.6 68.69, 74.92 53.62, 83.53 46.16 M55.6 81.14 C64.6 71.78, 76.49 58.14, 84.55 52 M54.78 82.77 C65.2 70.29, 76.72 57.4, 83.25 50.32 M62.37 84.08 C67.5 74.16, 73.03 69.43, 82.16 58.68 M61.75 81.85 C68 75.1, 73.9 66.86, 82.53 58.04 M67.13 82.02 C73.34 75.3, 78.16 70.63, 80.59 62.33 M65.35 82.92 C72.79 75.64, 79.53 67.63, 82.67 63.21 M72.83 82.86 C74.13 77.5, 75.68 75.02, 83.41 70.43 M71.93 81.35 C75.11 78.81, 79.3 73.76, 82.55 69.6 M76.35 82.16 C78.58 80.95, 79.63 78.84, 82.87 74.96 M76.3 82.24 C78.88 80.27, 80.18 78.13, 82.19 75.87\" stroke=\"#ffc9c9\" stroke-width=\"0.5\" fill=\"none\"></path><path d=\"M1.52 -0.18 C24.61 -1.56, 51.91 -1.37, 80.33 0.12 M-0.12 0.46 C24.56 0.98, 47.09 0.11, 79.94 0.12 M81.54 -0.04 C82.33 15.62, 79.66 35.39, 79.1 81.8 M79.94 0.02 C80.55 20.95, 80.64 42.52, 80.01 80.31 M79.58 78.44 C59.49 78.14, 38.58 79.64, 0.08 78.99 M80.22 79.03 C52.95 80.53, 27.92 80.26, -0.38 80.18 M-1.75 80.5 C-1.49 51.49, 1.28 24.85, 0.07 -1.13 M0.15 79.61 C-0.02 62.21, 0.21 46.51, 0.79 0.19\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g><g transform=\"translate(266.51186654246624 144.74341840251145) rotate(0 4.6875 9.600000000000364)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"16px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">8</text></g><g transform=\"translate(313.5637596277213 91.17955435785188) rotate(0 4.6875 9.600000000000364)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"16px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">8</text></g><g transform=\"translate(314.6125876695693 139.86223699139373) rotate(0 6.133514404296875 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">0</text></g><g transform=\"translate(367.1763860059868 145.54750080521626) rotate(270 41.8564453125 6.5969380575452305)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"10.994896762575022px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">matMinorShape</text></g><g transform=\"translate(279.0792177168306 222.2457499968441) rotate(0 41.8564453125 6.5969380575452305)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"10.994896762575022px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">matMajorShape</text></g><g stroke-linecap=\"round\"><g transform=\"translate(190.0937853860105 203.3460857468017) rotate(89.99999999999994 0.4787712283782639 41.843465139614636)\"><path d=\"M0.92 1.17 C1.18 24.7, -0.56 52.75, 0.24 81.26 M-0.02 0.95 C-0.15 29.05, 1.36 58.42, 0.9 82.74\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(223.78108362292815 246.03461706002417) rotate(89.99999999999994 6.624241266101166 -0.3829116557199086)\"><path d=\"M0.93 -1.12 C3.53 -0.24, 7.6 -1.41, 13.61 0.35 M-0.36 -0.25 C5.48 -0.52, 10.31 -0.55, 12.97 0.29\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(142.8563069255008 245.4742464119172) rotate(89.99999999999994 6.856181393793577 -0.21391378346925194)\"><path d=\"M-0.19 -0.08 C4.78 -1.16, 9.96 0.54, 13.9 -0.31 M0.61 -0.29 C5.68 -0.28, 10.26 0.4, 12.87 -0.28\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(319.23819231110656 171.26968026541) rotate(89.99999999999994 1.0689758136868477 35.61397959786791)\"><path d=\"M0.24 -1.81 C0.98 16.67, 1.43 31.32, 1.89 72.33 M0.9 -0.33 C0.8 20.08, 0.63 38.4, 0.46 73.04\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(350.8036272895286 206.9333221641209) rotate(89.99999999999994 8.309770272736689 0.3241811620473527)\"><path d=\"M0.87 0.8 C5.97 0.01, 10.99 -0.97, 15.47 1.17 M0.08 0.72 C4.05 -0.02, 8.57 -0.46, 16.54 -0.52\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(274.82909733735244 208.84306456270497) rotate(89.99999999999994 8.024190445331598 0.344395136957246)\"><path d=\"M1.24 -0.03 C4.89 -1.06, 6.11 1.3, 15.37 1.09 M-0.05 0.01 C4.67 -0.57, 9.04 -0.5, 16.1 -0.11\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(382.62435910687 114.28623415645052) rotate(179.9999999999999 0.617379792034626 36.26610227424044)\"><path d=\"M1.89 -1.12 C-0.21 27.57, -0.34 53.13, -0.66 73.65 M0.46 -0.41 C0.51 28.4, -0.04 57.52, -0.31 73.65\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(375.2137451004602 190.4708238913081) rotate(179.9999999999999 8.45355971787382 0.5004660780796257)\"><path d=\"M-0.62 1.53 C4.06 1.43, 9.05 0.04, 17.53 -0.46 M0.45 -0.17 C4.86 0.21, 9.46 0.01, 15.81 -0.53\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(374.19433961218 113.48647828860703) rotate(179.9999999999999 7.6969199352880775 0.6737641045028795)\"><path d=\"M-0.73 1.45 C3.39 -0.08, 9.29 -0.43, 16.12 0.39 M0.01 0.25 C3.92 0.1, 8.05 -0.32, 15.47 0.05\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\" transform=\"translate(81.18998926141074 109.65473273013049) rotate(0 79.34831020627445 40.59646194148172)\"><path d=\"M0 0 C0 0, 0 0, 0 0 M0 0 C0 0, 0 0, 0 0 M-0.46 6.72 C0.58 4.97, 1.82 3.36, 5.56 0.1 M-0.02 6.19 C0.78 5, 2 3.34, 5.1 0.26 M1.66 11.76 C2.9 7.93, 7.69 2.92, 9.14 -1.11 M0.77 12.43 C3.35 8.35, 4.74 6.14, 10.25 0.54 M-0.62 17.42 C4.76 15.64, 8.03 8.88, 16.72 -0.26 M0.69 17.97 C5.79 13.04, 11.84 6.09, 15.53 -0.07 M2 22.96 C7.31 16.52, 16.83 5.1, 19.41 -0.7 M0.91 24.44 C7.62 15.57, 16.98 6.13, 21.15 0.59 M0.59 30.37 C8.96 18.77, 16.56 10.1, 25.26 1.79 M-0.88 29.79 C6.03 23.12, 13 16.58, 25.38 0.6 M-0.27 38.7 C9.53 24.32, 20.65 13.01, 32.44 0.69 M-0.95 36.79 C12.53 23.94, 22.85 10.77, 31.85 -0.3 M1.11 40.98 C15.55 25.1, 27.83 10.46, 36.86 -0.78 M0.09 42.03 C8.48 31.44, 17.51 23.24, 37.54 0.08 M-1.15 49.25 C11.52 33.16, 25.36 22.72, 42.72 -0.92 M0.63 48.79 C16.17 30.96, 32.14 11.96, 43.43 -1 M1.31 56.03 C8.69 41.27, 20.91 30.36, 46.45 1.23 M0.05 54.42 C11.06 41.6, 21.88 30.02, 46.64 -0.59 M-0.87 59.09 C17.82 39.79, 34.1 23.03, 51.25 -1.38 M0.87 60.97 C13.36 44.71, 25.35 29.64, 53.01 0.55 M-0.96 66.94 C19.71 43.72, 41.99 18.69, 59.08 0.94 M0.69 66.54 C19.08 44.17, 39.86 20.17, 57.26 0.66 M-0.86 71.82 C15.16 53.96, 31.05 38.87, 65.14 -0.63 M-0.4 72.17 C23.31 46.66, 47.42 19.14, 63.62 -0.52 M0.22 78.73 C25.92 50.52, 48.98 23.11, 69.93 -0.68 M-0.38 78.74 C19.03 56.93, 40.8 33.93, 67.93 1 M1.52 84.64 C14.86 65.87, 29.27 48.23, 73.65 1.22 M2.57 82.03 C31.7 49.89, 58.87 15.82, 74.27 -0.02 M6.15 82.28 C35.27 54.25, 60.22 20.25, 80.31 1.22 M7.65 82.42 C22.95 64.07, 40.61 45.1, 79.1 0.64 M11.64 81.37 C27.2 66.29, 42.46 49.6, 84.14 -0.04 M12.05 81.98 C36.28 57, 59.63 31.57, 85.87 -0.73 M17.78 84.39 C39.55 55.96, 62.22 31.92, 89.65 -0.65 M17.01 84.09 C34.15 64.7, 51.82 44.93, 89.16 0.86 M21.89 83.04 C43.11 61.66, 58.28 43.59, 94.1 -0.73 M23.13 81.84 C37.76 65.45, 53.98 47.37, 95.28 -0.31 M26.81 83.01 C51.03 57.46, 71.82 32.81, 99.51 -1.67 M28.53 82.6 C49.67 60.31, 68.9 35.96, 100.44 0 M35.35 80.74 C55.08 61.96, 71.54 37.18, 107.16 -1.34 M33.42 82.71 C53.2 61.25, 73.14 37.54, 105.31 0.59 M38.36 84.16 C61.74 57.73, 81.48 37.33, 109.57 -1.37 M38.27 82.06 C61.06 60.67, 81.13 35.89, 111.22 -0.53 M45.19 81.45 C61.24 63.26, 82.01 40.13, 116.39 2.32 M44.42 82.74 C71.25 49.58, 100.42 18.22, 116.04 1.18 M51.68 81.77 C74.92 51.61, 100.88 23.64, 121.64 0.59 M50.21 83.66 C68.55 63.55, 84.11 43.63, 121.69 -0.28 M54.05 84.78 C80.54 53.12, 109 20.86, 126.99 0.02 M54.93 83.91 C81.06 53.07, 107.93 21.64, 127.46 -0.58 M60.14 81.62 C77.06 65.02, 93.66 46.69, 131.65 0.44 M60.27 83.65 C79.35 62.57, 96.12 41.07, 132.01 0.29 M64.69 83.94 C89.6 53.4, 119.09 24.95, 136.29 -0.33 M65.67 82.98 C89.06 55.85, 113.61 27.81, 137.51 0.65 M71.22 81.37 C85.09 67.63, 100.69 47.92, 141.65 -1.72 M70.32 83.33 C94.22 55.07, 118.2 27.65, 142.25 -0.23 M76.01 82.29 C104.65 48.91, 131.64 19.49, 148.42 0.32 M75.3 84.05 C95.92 61.51, 115.9 38.89, 148.75 0.48 M82.56 82.55 C110.28 49.03, 138.35 17.78, 151.82 -1.92 M82.16 83.08 C109.17 49.69, 137.88 17.87, 154.43 -0.19 M85.68 82.29 C114.44 50.73, 143.42 19.16, 157.6 0.87 M87.09 83.53 C110.36 54.35, 134.7 27.16, 159.68 -0.4 M93.89 82.59 C111.32 61.2, 129.24 41.07, 159.24 5.74 M91.53 82.33 C109.64 63.81, 127.98 42.33, 159.26 5.17 M97.51 82.31 C115.97 63.97, 132.02 44.59, 157.72 12.19 M96.26 82.87 C117.84 60.46, 138.06 36.99, 158.2 11.83 M103.09 82.76 C120.19 65.04, 137.5 44.47, 159.66 17.73 M102.09 83.58 C119.37 64.56, 133.13 48.26, 157.98 18.38 M109.44 84.55 C121.13 69.65, 131.17 55.93, 157.77 24.86 M107.94 82.6 C128.41 60.13, 148.16 37.3, 159.19 23.9 M114.14 84.24 C121.67 72.97, 132.32 61.61, 158.21 30.1 M113.47 82.38 C126.2 69.75, 139.05 55.5, 158.98 30.72 M117.52 83.14 C133.39 69.34, 144.37 53.14, 158.37 37.43 M119.22 82.32 C132.76 65.64, 147.34 48.52, 158.95 35.69 M125.17 84.05 C130.51 72.87, 140.62 65.14, 158.91 43.09 M123.21 83.37 C138.45 68.02, 150.95 51.47, 159.36 42.87 M127.93 84.03 C136.32 74.74, 145.6 62.6, 157.6 49.05 M129.1 82.69 C141.89 68.37, 151.94 56.16, 159.05 48.88 M136.41 83.11 C139.18 77.24, 145.95 68.53, 160.57 56.03 M134.8 82.23 C140.7 75.12, 148.49 67.23, 158.85 55.78 M140.98 85.08 C143.58 75.98, 151.1 69.85, 157.64 60.51 M140.56 83.41 C145.93 75.13, 152.3 67.92, 158.99 61.97 M146.25 82.2 C147.12 79.72, 151.05 72.95, 159.47 68.92 M145.66 81.69 C148.51 78.37, 152.53 73.48, 158.42 68.25 M150.86 83.67 C152.61 79.6, 155.51 75.51, 160.18 74.2 M150.46 83.18 C153.48 79.47, 157.06 76.61, 158.47 72.93 M155.88 82.52 C156.77 81.96, 156.87 81.57, 158.94 79.58 M155.87 82.84 C156.92 81.92, 157.62 80.88, 158.73 79.68 M-0.2 81.02 C-0.2 81.02, -0.2 81.02, -0.2 81.02 M-0.2 81.02 C-0.2 81.02, -0.2 81.02, -0.2 81.02 M5.84 81.44 C5.15 79.59, 3.25 78.93, 0.08 75.77 M6.16 81.33 C4.83 80.27, 2.89 78.93, 0.38 75.95 M11.23 79.93 C8.36 78.24, 3.74 74.57, -0.15 68.87 M11.29 80.73 C7.53 76.47, 3.54 72.49, -0.67 70.14 M19.79 80.26 C9.9 75.75, 3.7 71.12, -0.15 64.51 M18.13 81.73 C12.6 77.46, 9.55 72.48, 0.22 66.04 M26.42 81.93 C20.13 74.06, 11.07 72.11, -0.42 60.01 M25.36 81.8 C19.55 76.32, 14.46 71.85, 0.19 60.31 M31.59 80.77 C24.38 76.02, 15.17 68.43, -1.38 56.46 M30.5 80.27 C22.12 74.65, 14.84 67.04, 0.42 53.79 M37.06 83.04 C27.15 73.81, 18.58 66.48, -0.33 49.68 M36.23 81.13 C28.44 73.17, 18.95 66.34, 0.28 49.1 M41.7 79.37 C27.53 69, 15.28 55.75, -0.19 45.86 M42.33 81.09 C26.72 66.78, 10.72 52.98, 0.65 44.41 M48.8 80.78 C31.89 67.09, 19.05 53.03, -2.24 39.04 M49.1 81.41 C32.57 67.84, 18.85 53.95, -0.72 38.84 M53.99 80.77 C38.91 67.99, 21.47 53.36, 1.11 35.16 M55.43 81.97 C33.85 64.14, 13.31 46, 0.16 34.31 M60.82 80.12 C46.84 68.79, 36.9 59.18, 1.59 29.5 M60.48 81.82 C45.39 68.2, 30.32 55.57, -1.08 26.95 M68.21 79.56 C44.66 59.53, 17.32 41, -1.67 22.73 M67.27 81.79 C43.29 59.22, 17.56 37.74, 0.18 22.95 M74.44 81.92 C47.33 59.77, 21.64 37.96, 1.8 19.01 M72.82 80.55 C49.04 60.05, 25.16 40.58, -0.35 18.6 M80.46 80.17 C55.1 59.77, 31.57 42.28, 1.38 10.77 M79.53 80.45 C49.57 55.42, 18.85 28.21, -0.17 12.86 M85.83 79.55 C51.78 53.22, 19.29 22.26, 0.85 7.41 M85.28 81.56 C52.72 51.98, 20.77 24.14, -0.44 8.02 M92.25 82.29 C62.45 57.32, 36.44 30.29, -1.66 1.4 M91.08 80.26 C63.55 57.01, 37.44 35.73, 0.2 1.64 M99.06 80.31 C76.98 62.31, 57.91 48.67, 3.14 -2.3 M96.68 81.85 C65.06 54.89, 34.83 26.5, 2.47 -2.2 M103.2 81.43 C63.57 47.03, 27.69 13.29, 7.68 -0.19 M102.71 80.59 C70.94 53.46, 39.82 26.4, 8.61 -0.86 M110.54 81.32 C90.53 64.83, 67.39 44.83, 13.97 -1.32 M110.04 81.51 C73.59 49.37, 38.59 17.86, 12.92 -2.48 M115.8 81.68 C83.08 49.36, 46.73 20.75, 21.19 -0.09 M115.92 80.52 C93.49 61.69, 70.45 42.49, 19.49 -2.84 M122.09 82.94 C97.54 58.81, 72.53 37.57, 25.14 -2.05 M121.57 80.98 C98.44 58.28, 72.6 38.29, 25.76 -3.28 M128.42 81 C92.82 48.48, 53.61 17.99, 33.51 -3.87 M127.87 82.26 C106.69 62.51, 85.54 44.2, 31.95 -2.82 M133.65 81.38 C96.99 47.7, 61.91 18.94, 37.89 -3.18 M133.41 81.8 C115.12 64.24, 94.48 49.15, 39.13 -2.13 M139.8 79.21 C119.25 62.66, 94.02 42.43, 45.22 -1.91 M139.93 81 C117.41 61.74, 95.12 43.43, 44.84 -2.94 M148.01 81.41 C109.12 47.63, 71.99 17.8, 49.34 -1.49 M146.39 81.22 C112.22 52.18, 77.33 23.33, 50.8 -1.46 M154.06 79.36 C124 55.93, 96.28 32.02, 54.98 -0.74 M152.65 80.38 C122.81 54.08, 93.61 28.36, 56.92 -2.31 M159.86 81.68 C132.31 56.01, 100.53 29.66, 60.99 -3.89 M159.03 81.58 C124.31 50.83, 88.45 21.54, 62.76 -2.69 M162.43 77.72 C135.85 52.99, 107.04 32.89, 68.37 -2.36 M161.49 78.46 C142.65 62.61, 122.91 46.7, 69.64 -2.31 M163.2 74.83 C134.03 47.57, 105.68 20.85, 75.71 -2.11 M160.99 72.37 C127.8 45.47, 95.3 17.27, 74.21 -2.82 M159.24 67.84 C144.58 52.96, 126.64 36.75, 82.79 -2.86 M160.85 67.72 C130.38 41.81, 101.81 17.15, 82.14 -1.22 M160.5 61.83 C138.79 42.24, 115.92 23.84, 86.49 -3.98 M162.18 62.63 C142.66 45.45, 122.93 29.5, 86.23 -1.79 M160.04 56.25 C145 43.1, 128.61 26.22, 92.07 -0.48 M162.15 56.87 C136.1 34.8, 110.83 12.13, 93.77 -2.28 M161.34 52.91 C140.24 33.45, 117.29 13.13, 101.2 -0.82 M161.46 51.81 C138.26 31.64, 114.58 12.39, 98.65 -1.82 M161.45 45.49 C144.55 31.77, 128.31 19.48, 103.39 -2.24 M161.67 45.75 C144.36 33.05, 128.16 19.7, 105.03 -2.36 M162.38 39.54 C145.03 24.91, 123.01 7.75, 111.58 -2.01 M160.61 41.82 C142 25.6, 122.47 8.81, 110.94 -2.04 M162.22 33.97 C151.23 26.05, 139.34 15.36, 118.05 -3.29 M161.67 35.32 C150.24 24.46, 137.14 15.17, 116.38 -3.22 M162.45 29.07 C153.3 23.22, 143.1 11.11, 121.75 -3.12 M161.31 31.63 C150.5 20.52, 141.15 11.89, 122.77 -2.55 M159.2 23.98 C150.31 17.74, 139.72 5.77, 128.24 -2.27 M160.32 25.57 C153.7 19.54, 147.91 14.04, 130.98 -0.95 M162.48 20.72 C155.21 14.14, 147.74 8.67, 137.21 -0.49 M161.23 19.27 C152.05 12.05, 143.68 5.28, 135.02 -3.03 M159.4 13.68 C154.47 11.34, 152.43 7.08, 142 -3.86 M161.72 13.56 C155.98 8.68, 149.72 5.09, 141.64 -2.51 M161.5 9.59 C156.25 7.51, 153.76 3.99, 149.4 -2.55 M161.88 9.79 C157.27 5.12, 151.98 1.57, 148.4 -2.14 M160.51 4.4 C159.46 1.23, 156.31 1.1, 154.9 -2.47 M161.4 3.64 C159.56 2.56, 157.99 0.96, 153.82 -1.97\" stroke=\"#000000\" stroke-width=\"0.5\" fill=\"none\"></path><path d=\"M1.79 -0.13 C61.9 0.77, 122.91 0.95, 158.29 0.02 M-0.36 -0.21 C51.78 0.19, 104.32 0.49, 158.66 0.04 M159.06 0.43 C156.96 18.27, 159.68 40.59, 158.92 80.43 M158.77 -0.88 C159.38 25.28, 158.99 52.46, 159.36 81.23 M157.62 81.5 C119.3 81.69, 79.58 82.14, 0.41 82.77 M158.1 81.46 C107.13 81.73, 57.59 83.21, 0.89 80.94 M0.46 79.54 C-0.73 56.24, 2.35 32.93, 1.32 -0.18 M-0.12 80.72 C0.38 57.86, -0.39 34.48, -0.53 -0.16\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g><g stroke-linecap=\"round\"><g transform=\"translate(236.33797791652 91.15489927095587) rotate(89.99999999999994 6.404542569099007 -0.042439816807927855)\"><path d=\"M0.02 0.6 C3.47 0.64, 7.74 -0.16, 13.31 -0.69 M-0.5 0.33 C3.63 0.46, 8.25 -0.13, 12.58 -0.12\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(73.20688121239607 90.88104769895835) rotate(89.99999999999994 6.322398120230048 -0.015279910105164163)\"><path d=\"M-0.53 0.72 C3.53 -0.13, 7.98 -0.63, 13.17 -0.75 M-0.51 0.53 C3.58 -0.12, 6.88 -0.06, 12.69 -0.17\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g transform=\"translate(126.3601104237689 77.46641417406681) rotate(0 36.2548828125 4.954826242058516)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"8.258043736764487px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">smemMinorStride</text></g><g stroke-linecap=\"round\"><g transform=\"translate(80.3055267507334 90.40785961931942) rotate(0 80.40463361650933 -0.5932375211268663)\"><path d=\"M0.62 -0.62 C57.39 -0.73, 113.54 -1.57, 161.31 -1.58 M-0.5 0.26 C60.84 0.12, 122.59 -1.03, 159.3 0.39\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(158.11039074325384 -12.591462188544028) rotate(89.99999999999994 0.335018597270448 79.50160417042935)\"><path d=\"M0.41 -0.71 C0.07 46.48, 1.52 94.5, 1.63 159.52 M-0.34 0.18 C-0.59 47.53, -1.8 97.39, 0.03 159.72\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(233.8208071141392 67.28564222441128) rotate(89.99999999999994 6.342868463551284 -0.5515136239391722)\"><path d=\"M-0.27 -1 C4.13 -1.05, 8 -0.16, 12.96 -0.94 M0.14 -0.63 C3.56 0.13, 8.43 -0.14, 12.66 -0.17\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(72.04677905527018 67.98838247078857) rotate(89.99999999999994 6.303369519856801 -0.3830021288631542)\"><path d=\"M0.66 -1.02 C4.47 -0.03, 6.88 -0.7, 13.24 -0.73 M-0.64 0.25 C4.12 0.11, 7.97 0.06, 13.25 0.07\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g transform=\"translate(115.91421483797001 51.524780449135505) rotate(0 48.33984375 4.954826242058516)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"8.258043736764487px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">tileNumMatsMajorAxis</text></g><g stroke-linecap=\"round\"><g transform=\"translate(92.09902900216116 233.7934076837373) rotate(90.90647774714418 -0.7847358369911888 9.531670418513386)\"><path d=\"M0.08 -1.01 C0.68 3.87, 0.53 9.54, -1.94 18.6 M-0.38 0.18 C0.54 7.54, 0.08 13.08, 0.25 20.07\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(95.98906695056871 245.1585099178301) rotate(89.99999999999994 6.871586024428723 -0.1520279873002437)\"><path d=\"M0.33 -0.44 C4.06 0.26, 6.39 -1.39, 13.41 -0.25 M0.34 0.36 C4.07 -0.68, 8.2 -0.54, 12.82 0.27\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(75.59375781485727 244.81491184240258) rotate(89.99999999999994 6.691613682715797 -0.24961091281420522)\"><path d=\"M0.23 0.28 C1.97 -1.32, 6.95 -0.06, 13.06 -0.78 M0.05 -0.57 C4.26 -0.5, 8.12 0.3, 13.34 -0.27\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g transform=\"translate(88.77422119157927 284.1528387844446) rotate(0 36.2548828125 4.954826242058516)\"><text x=\"0\" y=\"0\" font-family=\"Cascadia, Segoe UI Emoji\" font-size=\"8.258043736764487px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">loadMajorStride</text></g><g stroke-linecap=\"round\" transform=\"translate(121.33148446774328 192.6616363522171) rotate(0 20 20)\"><path d=\"M1.85 0.76 C13.97 -0.87, 27.62 -0.9, 40.39 -0.34 M0.55 -0.88 C10.61 -0.97, 22.69 -0.06, 39.79 -0.13 M39.14 -1.06 C41.32 14.56, 41.32 28.76, 38.53 41.71 M40.39 0.72 C39.52 14.2, 40.13 27.87, 40.78 40.37 M39.57 38.19 C25.03 39.72, 8.84 38.27, 0.71 41.24 M40.7 40.97 C28.65 39.31, 17.91 40.57, 0.67 40.71 M1.65 39.36 C-0.83 27.02, 0.74 10.86, 1.1 1.33 M0.53 40.16 C0.18 26.29, 0.41 11.06, -0.02 -0.23\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g><g stroke-linecap=\"round\" transform=\"translate(161.3814042306251 192.4484800132377) rotate(0 20 20)\"><path d=\"M1.93 -1.89 C11.43 -0.02, 24.29 1.51, 40.17 1.79 M-0.06 0.21 C9.06 0.65, 16.91 0.92, 39.88 -0.57 M39.5 -1.53 C41.68 15.14, 37.88 25.15, 40.69 38.72 M39.05 -0.87 C40.52 8.12, 40.78 15.27, 39.32 40.71 M39.23 38.67 C24.41 38.42, 8.82 41.62, -0.62 41.19 M39.22 39.27 C31.08 39.07, 19.74 40.57, 0.26 39.12 M0.13 40.89 C1.27 33.03, 1.3 25.08, -0.79 -0.41 M0.22 40.71 C0.45 26.1, -0.35 10.42, 0.22 -0.06\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g><g transform=\"translate(163.3814042306251 212.4484800132377) rotate(0 6.133514404296875 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">0</text></g><g transform=\"translate(187.04452612171872 191.35083055194264) rotate(0 2.4159622192382812 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">1</text></g><g transform=\"translate(187.04452612171872 211.35083055194264) rotate(0 2.4159622192382812 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">1</text></g><g transform=\"translate(207.84526288934626 191.96950485906564) rotate(0 6.34747314453125 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">2</text></g><g transform=\"translate(207.84526288934626 211.96950485906564) rotate(0 6.34747314453125 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">2</text></g><g transform=\"translate(225.42097193082418 192.29197490292427) rotate(0 6.071113586425781 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">3</text></g><g transform=\"translate(225.42097193082418 212.29197490292427) rotate(0 6.071113586425781 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">3</text></g><g transform=\"translate(163.3746346571827 192.41237562154492) rotate(0 6.133514404296875 11.14386119255505)\"><text x=\"0\" y=\"0\" font-family=\"Virgil, Segoe UI Emoji\" font-size=\"17.830177908088363px\" fill=\"#1e1e1e\" text-anchor=\"start\" style=\"white-space: pre;\" direction=\"ltr\" dominant-baseline=\"text-before-edge\">0</text></g><g stroke-linecap=\"round\" transform=\"translate(201.73427407843087 193.23298742275438) rotate(0 20 20)\"><path d=\"M-1.61 -1.33 C11.03 -1.68, 25.05 1.43, 38.2 -1.96 M-0.19 -0.69 C12.43 -0.48, 27.35 0.42, 40.85 -0.92 M41.23 1.73 C39.52 7.95, 39.36 16.65, 38.15 41.28 M39.3 -0.99 C39.45 10.04, 41.21 21.01, 39.53 40.97 M38.31 41.39 C27.07 40.54, 14.81 41.11, 0.96 41.96 M39.09 39.33 C29.8 40.95, 19.25 40.72, -0.72 39.18 M0.85 41.36 C1.34 25.48, 1.89 13.44, -0.69 -1.5 M0.47 39.97 C-0.04 31.86, 0.81 21.83, 0.37 -0.63\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g><g stroke-linecap=\"round\"><g transform=\"translate(123.68642450129289 236.68672000806873) rotate(89.99999999999994 -0.4032124299556301 41.66588734213383)\"><path d=\"M-1.34 1.82 C0.42 31.4, 1.09 63.65, -0.29 83.27 M-0.76 0.06 C-0.46 22.28, -0.18 46.88, 0.53 82.57\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(159.69254000254796 277.9373231111549) rotate(89.99999999999994 6.764755702299254 -0.6985622456486453)\"><path d=\"M0.1 -0.34 C3.87 -0.33, 6.5 -0.3, 12.59 -1.34 M0.15 -0.44 C3.4 0.54, 6.5 -0.63, 13.43 -0.93\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask><g stroke-linecap=\"round\"><g transform=\"translate(75.90328110535438 278.98609637535446) rotate(89.99999999999994 6.514287768457876 -0.3276911292159639)\"><path d=\"M0.53 -0.13 C4.86 -0.11, 9.78 -1.24, 12.11 -1.27 M0.32 0.62 C4.3 -0.48, 8.43 -0.73, 12.71 -0.47\" stroke=\"#1e1e1e\" stroke-width=\"1\" fill=\"none\"></path></g></g><mask></mask></svg>"}, {"filename": "lib/Conversion/TritonGPUToLLVM/ConvertLayoutOpToLLVM/SharedToDotOperandMMAv1.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "file_content_changes": "@@ -107,7 +107,7 @@ static Value loadA(Value tensor, const SharedMemoryObject &smemObj,\n   auto order = sharedLayout.getOrder();\n \n   Value cSwizzleOffset = smemObj.getCSwizzleOffset(order[0]);\n-  Value smemBase = smemObj.getBaseBeforeSwizzle(order[0], loc, rewriter);\n+  Value smemBase = smemObj.getBaseBeforeSlice(order[0], loc, rewriter);\n \n   bool isARow = order[0] != 0;\n   auto resultEncoding = resultTy.cast<RankedTensorType>()\n@@ -232,7 +232,7 @@ static Value loadB(Value tensor, const SharedMemoryObject &smemObj,\n   auto shape = tensorTy.getShape();\n   auto order = sharedLayout.getOrder();\n \n-  Value smem = smemObj.getBaseBeforeSwizzle(order[0], loc, rewriter);\n+  Value smem = smemObj.getBaseBeforeSlice(order[0], loc, rewriter);\n   bool isBRow = order[0] != 0; // is row-major in shared memory layout\n   // isBRow_ indicates whether B is row-major in DotOperand layout\n   auto resultEncoding = resultTy.cast<RankedTensorType>()"}, {"filename": "lib/Conversion/TritonGPUToLLVM/ConvertLayoutOpToLLVM/SharedToDotOperandMMAv2.cpp", "status": "modified", "additions": 107, "deletions": 101, "changes": 208, "file_content_changes": "@@ -18,16 +18,16 @@ using ::mlir::triton::gpu::SharedEncodingAttr;\n // Data loader for mma.16816 instruction.\n class MMA16816SmemLoader {\n public:\n-  MMA16816SmemLoader(int wpt, ArrayRef<uint32_t> order, uint32_t kOrder,\n-                     int kWidth, ArrayRef<Value> smemStrides,\n+  MMA16816SmemLoader(int warpsPerTile, ArrayRef<uint32_t> order,\n+                     uint32_t kOrder, int kWidth, ArrayRef<Value> smemStrides,\n                      ArrayRef<int64_t> tileShape, ArrayRef<int> instrShape,\n                      ArrayRef<int> matShape, int perPhase, int maxPhase,\n                      int elemBytes, ConversionPatternRewriter &rewriter,\n                      TritonGPUToLLVMTypeConverter *typeConverter,\n                      const Location &loc);\n \n   // lane = thread % 32\n-  // warpOff = (thread/32) % wpt(0)\n+  // warpOff = (thread/32) % warpsPerTile(0)\n   llvm::SmallVector<Value> computeOffsets(Value warpOff, Value lane,\n                                           Value cSwizzleOffset) {\n     if (canUseLdmatrix)\n@@ -48,9 +48,10 @@ class MMA16816SmemLoader {\n                                        Value cSwizzleOffset);\n \n   // Load 4 matrices and returns 4 vec<2> elements.\n-  std::tuple<Value, Value, Value, Value>\n-  loadX4(int mat0, int mat1, ArrayRef<Value> offs, ArrayRef<Value> ptrs,\n-         Type matTy, Type shemPtrTy) const;\n+  std::tuple<Value, Value, Value, Value> loadX4(int mat0, int mat1,\n+                                                ArrayRef<Value> ptrs,\n+                                                Type matTy,\n+                                                Type shemPtrTy) const;\n \n private:\n   SmallVector<uint32_t> order;\n@@ -66,42 +67,43 @@ class MMA16816SmemLoader {\n   const Location &loc;\n   MLIRContext *ctx{};\n \n-  int cMatShape;\n-  int sMatShape;\n+  int matMajorShape;\n+  int matMinorShape;\n \n-  Value sStride;\n+  Value smemMinorStride;\n \n   bool needTrans;\n   bool canUseLdmatrix;\n \n   int numPtrs;\n \n-  int pLoadStrideInMat;\n-  int sMatStride;\n+  int loadMajorStride;\n+  int minorMatStride;\n \n-  int matArrStride;\n-  int warpOffStride;\n+  int inWarpMatStride;\n+  int warpMatStride;\n };\n \n SmallVector<Value>\n MMA16816SmemLoader::computeLdmatrixMatOffs(Value warpId, Value lane,\n                                            Value cSwizzleOffset) {\n   // 4x4 matrices\n-  Value c = urem(lane, i32_val(8));\n-  Value s = udiv(lane, i32_val(8)); // sub-warp-id\n+  Value rowInMat = urem(lane, i32_val(8)); // row in the 8x8 matrix\n+  Value matIndex =\n+      udiv(lane, i32_val(8)); // linear index of the matrix in the 2x2 matrices\n \n-  // Decompose s => s_0, s_1, that is the coordinate in 2x2 matrices in a\n+  // Decompose matIndex => s_0, s_1, that is the coordinate in 2x2 matrices in a\n   // warp\n-  Value s0 = urem(s, i32_val(2));\n-  Value s1 = udiv(s, i32_val(2));\n+  Value s0 = urem(matIndex, i32_val(2));\n+  Value s1 = udiv(matIndex, i32_val(2));\n \n   // We use different orders for a and b for better performance.\n-  Value kMatArr = kOrder == 1 ? s1 : s0;\n-  Value nkMatArr = kOrder == 1 ? s0 : s1;\n+  Value kMatArr = kOrder == 1 ? s1 : s0;  // index of matrix on the k dim\n+  Value nkMatArr = kOrder == 1 ? s0 : s1; // index of matrix on the non-k dim\n \n   // Matrix coordinates inside a CTA,\n-  // the matrix layout is [2wpt[0], 2] for A and [2, 2wpt[1]] for B.\n-  // e.g., Setting wpt=4, the data layout for A(kOrder=1) is\n+  // the matrix layout is [2warpsPerTile[0], 2] for A and [2, 2warpsPerTile[1]]\n+  // for B. e.g., Setting warpsPerTile=4, the data layout for A(kOrder=1) is\n   //   |0 0|  -> 0,1,2,3 are the warpids\n   //   |0 0|\n   //   |1 1|\n@@ -118,37 +120,37 @@ MMA16816SmemLoader::computeLdmatrixMatOffs(Value warpId, Value lane,\n   // address (s0,s1) annotates.\n \n   Value matOff[2];\n-  matOff[kOrder ^ 1] =\n-      add(mul(warpId, i32_val(warpOffStride)), // warp offset (kOrder=1)\n-          mul(nkMatArr,\n-              i32_val(matArrStride))); // matrix offset inside a warp (kOrder=1)\n+  matOff[kOrder ^ 1] = add(\n+      mul(warpId, i32_val(warpMatStride)), // warp offset (kOrder=1)\n+      mul(nkMatArr,\n+          i32_val(inWarpMatStride))); // matrix offset inside a warp (kOrder=1)\n   matOff[kOrder] = kMatArr;\n \n   // Physical offset (before swizzling)\n-  Value cMatOff = matOff[order[0]];\n-  Value sMatOff = matOff[order[1]];\n-  Value cSwizzleMatOff = udiv(cSwizzleOffset, i32_val(cMatShape));\n-\n-  // row offset inside a matrix, each matrix has 8 rows.\n-  Value sOffInMat = c;\n+  Value matMajorIndex = matOff[order[0]];\n+  Value matMinorIndex = matOff[order[1]];\n+  // Add the offset of the slice\n+  Value sliceMajorMatOffset = udiv(cSwizzleOffset, i32_val(matMajorShape));\n \n   SmallVector<Value> offs(numPtrs);\n-  Value phase = urem(udiv(sOffInMat, i32_val(perPhase)), i32_val(maxPhase));\n-  // To prevent out-of-bound access of B when wpt * 16 > tile_size.\n+  Value phase = urem(udiv(rowInMat, i32_val(perPhase)), i32_val(maxPhase));\n+  // To prevent out-of-bound access of B when warpsPerTile * 16 > tile_size.\n   // In such a case, we need to wrap around the offset of B.\n   // |0 1 2 3 0 1 2 3| -> | 0(0) 1(1) 2(2) 3(3) |\n   // |0 1 2 3 0 1 2 3|    | 0(0) 1(1) 2(2) 3(3) |\n   //          ~~~~~~~ out-of-bound access\n-  Value sOff = urem(add(sOffInMat, mul(sMatOff, i32_val(sMatShape))),\n-                    i32_val(tileShape[order[1]]));\n-  auto totalNumMats = i32_val(tileShape[order[0]] / matShape[order[0]]);\n-\n+  Value rowOffset =\n+      urem(add(rowInMat, mul(matMinorIndex, i32_val(matMinorShape))),\n+           i32_val(tileShape[order[1]]));\n+  Value tileNumMatsMajorAxis =\n+      i32_val(tileShape[order[0]] / matShape[order[0]]);\n   for (int i = 0; i < numPtrs; ++i) {\n-    Value cMatOffI = add(cMatOff, i32_val(i * pLoadStrideInMat));\n-    cMatOffI = urem(cMatOffI, totalNumMats);\n-    cMatOffI = add(cMatOffI, cSwizzleMatOff);\n-    cMatOffI = xor_(cMatOffI, phase);\n-    offs[i] = add(mul(cMatOffI, i32_val(cMatShape)), mul(sOff, sStride));\n+    Value majorIndex = add(matMajorIndex, i32_val(i * loadMajorStride));\n+    majorIndex = urem(majorIndex, tileNumMatsMajorAxis);\n+    majorIndex = add(majorIndex, sliceMajorMatOffset);\n+    Value majorIndexSwizzled = xor_(majorIndex, phase);\n+    offs[i] = add(mul(majorIndexSwizzled, i32_val(matMajorShape)),\n+                  mul(rowOffset, smemMinorStride));\n   }\n \n   return offs;\n@@ -211,14 +213,14 @@ SmallVector<Value> MMA16816SmemLoader::computeLdsMatOffs(Value warpOff,\n         Value jOff = i32_val(0);\n         if (!needTrans) {\n           jOff = add(jOff, i32_val(quadId));\n-          jOff = add(jOff, i32_val(rep * pLoadStrideInMat));\n+          jOff = add(jOff, i32_val(rep * loadMajorStride));\n         }\n         // outer index offset\n-        Value iOff = mul(warpOff, i32_val(warpOffStride));\n+        Value iOff = mul(warpOff, i32_val(warpMatStride));\n         if (needTrans) {\n           int pStride = kOrder == 1 ? 1 : 2;\n-          iOff = add(iOff, i32_val(quadId * matArrStride));\n-          iOff = add(iOff, i32_val(rep * pLoadStrideInMat * pStride));\n+          iOff = add(iOff, i32_val(quadId * inWarpMatStride));\n+          iOff = add(iOff, i32_val(rep * loadMajorStride * pStride));\n         }\n         // swizzle\n         if (!needTrans) {\n@@ -237,18 +239,17 @@ SmallVector<Value> MMA16816SmemLoader::computeLdsMatOffs(Value warpOff,\n         // i = urem(i, i32_val(cTileShape));\n         // j = urem(j, i32_val(sTileShape));\n         if (needTrans) {\n-          offs[idx] = add(i, mul(j, sStride));\n+          offs[idx] = add(i, mul(j, smemMinorStride));\n         } else {\n-          offs[idx] = add(mul(i, sStride), j);\n+          offs[idx] = add(mul(i, smemMinorStride), j);\n         }\n       }\n \n   return offs;\n }\n \n std::tuple<Value, Value, Value, Value>\n-MMA16816SmemLoader::loadX4(int mat0, int mat1, ArrayRef<Value> offs,\n-                           ArrayRef<Value> ptrs, Type matTy,\n+MMA16816SmemLoader::loadX4(int mat0, int mat1, ArrayRef<Value> ptrs, Type matTy,\n                            Type shemPtrTy) const {\n   assert(mat0 % 2 == 0 && mat1 % 2 == 0 && \"smem matrix load must be aligned\");\n   int matIdx[2] = {mat0, mat1};\n@@ -285,15 +286,16 @@ MMA16816SmemLoader::loadX4(int mat0, int mat1, ArrayRef<Value> offs,\n   }\n \n   if (canUseLdmatrix) {\n-    Value sOffset =\n-        mul(i32_val(matIdx[order[1]] * sMatStride * sMatShape), sStride);\n-    Value sOffsetPtr = gep(shemPtrTy, ptr, sOffset);\n+    Value minorOffset =\n+        mul(i32_val(matIdx[order[1]] * minorMatStride * matMinorShape),\n+            smemMinorStride);\n+    Value readPtr = gep(shemPtrTy, ptr, minorOffset);\n \n     PTXBuilder builder;\n     // ldmatrix.m8n8.x4 returns 4x2xfp16(that is 4xb32) elements for a\n     // thread.\n     auto resArgs = builder.newListOperand(4, \"=r\");\n-    auto addrArg = builder.newAddrOperand(sOffsetPtr, \"r\");\n+    auto addrArg = builder.newAddrOperand(readPtr, \"r\");\n \n     auto ldmatrix = builder.create(\"ldmatrix.sync.aligned.m8n8.x4\")\n                         ->o(\"trans\", needTrans /*predicate*/)\n@@ -316,14 +318,14 @@ MMA16816SmemLoader::loadX4(int mat0, int mat1, ArrayRef<Value> offs,\n     for (int i = 0; i < vecWidth; i++)\n       ptrs[1][i] = getPtr(ptrIdx + i + vecWidth);\n     // static offsets along outer dimension\n-    int _i0 = matIdx[order[1]] * (sMatStride * sMatShape);\n+    int _i0 = matIdx[order[1]] * (minorMatStride * matMinorShape);\n     int _i1 = _i0;\n     if (needTrans)\n-      _i1 += sMatStride * sMatShape;\n+      _i1 += minorMatStride * matMinorShape;\n     else\n-      _i1 += (kOrder == 1 ? 1 : sMatStride) * sMatShape;\n-    Value i0 = mul(i32_val(_i0), sStride);\n-    Value i1 = mul(i32_val(_i1), sStride);\n+      _i1 += (kOrder == 1 ? 1 : minorMatStride) * matMinorShape;\n+    Value i0 = mul(i32_val(_i0), smemMinorStride);\n+    Value i1 = mul(i32_val(_i1), smemMinorStride);\n     std::array<Value, 2> ii = {i0, i1};\n     // load 4 32-bit values from shared memory\n     // (equivalent to ldmatrix.x4)\n@@ -366,7 +368,7 @@ MMA16816SmemLoader::loadX4(int mat0, int mat1, ArrayRef<Value> offs,\n }\n \n MMA16816SmemLoader::MMA16816SmemLoader(\n-    int wpt, ArrayRef<uint32_t> order, uint32_t kOrder, int kWidth,\n+    int warpsPerTile, ArrayRef<uint32_t> order, uint32_t kOrder, int kWidth,\n     ArrayRef<Value> smemStrides, ArrayRef<int64_t> tileShape,\n     ArrayRef<int> instrShape, ArrayRef<int> matShape, int perPhase,\n     int maxPhase, int elemBytes, ConversionPatternRewriter &rewriter,\n@@ -377,23 +379,24 @@ MMA16816SmemLoader::MMA16816SmemLoader(\n       matShape(matShape.begin(), matShape.end()), perPhase(perPhase),\n       maxPhase(maxPhase), elemBytes(elemBytes), rewriter(rewriter), loc(loc),\n       ctx(rewriter.getContext()) {\n-  cMatShape = matShape[order[0]];\n-  sMatShape = matShape[order[1]];\n+  matMajorShape = matShape[order[0]];\n+  matMinorShape = matShape[order[1]];\n \n-  sStride = smemStrides[order[1]];\n+  smemMinorStride = smemStrides[order[1]];\n \n   // rule: k must be the fast-changing axis.\n   needTrans = kOrder != order[0];\n   canUseLdmatrix = elemBytes == 2 || (!needTrans);\n   canUseLdmatrix = canUseLdmatrix && (kWidth == 4 / elemBytes);\n \n   if (canUseLdmatrix) {\n-    // Each CTA, the warps is arranged as [1xwpt] if not transposed,\n-    // otherwise [wptx1], and each warp will perform a mma.\n-    numPtrs =\n-        tileShape[order[0]] / (needTrans ? wpt : 1) / instrShape[order[0]];\n+    // Each CTA, the warps is arranged as [1xwarpsPerTile] if not transposed,\n+    // otherwise [warpsPerTilex1], and each warp will perform a mma.\n+    numPtrs = tileShape[order[0]] / (needTrans ? warpsPerTile : 1) /\n+              instrShape[order[0]];\n   } else {\n-    numPtrs = tileShape[order[0]] / (needTrans ? wpt : 1) / matShape[order[0]];\n+    numPtrs = tileShape[order[0]] / (needTrans ? warpsPerTile : 1) /\n+              matShape[order[0]];\n     numPtrs *= 4 / elemBytes;\n   }\n   numPtrs = std::max<int>(numPtrs, 2);\n@@ -405,19 +408,20 @@ MMA16816SmemLoader::MMA16816SmemLoader(\n   loadStrideInMat[kOrder] =\n       2; // instrShape[kOrder] / matShape[kOrder], always 2\n   loadStrideInMat[kOrder ^ 1] =\n-      wpt * (instrShape[kOrder ^ 1] / matShape[kOrder ^ 1]);\n+      warpsPerTile * (instrShape[kOrder ^ 1] / matShape[kOrder ^ 1]);\n \n-  pLoadStrideInMat = loadStrideInMat[order[0]];\n+  loadMajorStride = loadStrideInMat[order[0]];\n \n-  sMatStride =\n+  minorMatStride =\n       loadStrideInMat[order[1]] / (instrShape[order[1]] / matShape[order[1]]);\n \n-  // Each matArr contains warpOffStride matrices.\n-  matArrStride = kOrder == 1 ? 1 : wpt;\n-  warpOffStride = instrShape[kOrder ^ 1] / matShape[kOrder ^ 1];\n+  // The stride (in number of matrices) within warp\n+  inWarpMatStride = kOrder == 1 ? 1 : warpsPerTile;\n+  // The stride (in number of matrices) of each warp\n+  warpMatStride = instrShape[kOrder ^ 1] / matShape[kOrder ^ 1];\n }\n \n-Type getShemPtrTy(Type argType) {\n+Type getSharedMemPtrTy(Type argType) {\n   MLIRContext *ctx = argType.getContext();\n   if (argType.isF16())\n     return ptr_ty(type::f16Ty(ctx), 3);\n@@ -454,13 +458,12 @@ Value composeValuesToDotOperandLayoutStruct(\n   return result;\n }\n \n-std::function<void(int, int)>\n-getLoadMatrixFn(Value tensor, const SharedMemoryObject &smemObj,\n-                MmaEncodingAttr mmaLayout, int wpt, uint32_t kOrder, int kWidth,\n-                SmallVector<int> instrShape, SmallVector<int> matShape,\n-                Value warpId, Value lane, ValueTable &vals, bool isA,\n-                TritonGPUToLLVMTypeConverter *typeConverter,\n-                ConversionPatternRewriter &rewriter, Location loc) {\n+std::function<void(int, int)> getLoadMatrixFn(\n+    Value tensor, const SharedMemoryObject &smemObj, MmaEncodingAttr mmaLayout,\n+    int warpsPerTile, uint32_t kOrder, int kWidth, SmallVector<int> instrShape,\n+    SmallVector<int> matShape, Value warpId, Value lane, ValueTable &vals,\n+    bool isA, TritonGPUToLLVMTypeConverter *typeConverter,\n+    ConversionPatternRewriter &rewriter, Location loc) {\n   auto tensorTy = tensor.getType().cast<RankedTensorType>();\n   Type eltTy = tensorTy.getElementType();\n   // We assumes that the input operand of Dot should be from shared layout.\n@@ -474,25 +477,26 @@ getLoadMatrixFn(Value tensor, const SharedMemoryObject &smemObj,\n   // (a, b) is the coordinate.\n   auto load = [=, &rewriter, &vals](int a, int b) {\n     MMA16816SmemLoader loader(\n-        wpt, sharedLayout.getOrder(), kOrder, kWidth, smemObj.strides,\n+        warpsPerTile, sharedLayout.getOrder(), kOrder, kWidth, smemObj.strides,\n         tensorTy.getShape() /*tileShape*/, instrShape, matShape, perPhase,\n         maxPhase, elemBytes, rewriter, typeConverter, loc);\n+    // Offset of a slice within the original tensor in shared memory\n     Value cSwizzleOffset = smemObj.getCSwizzleOffset(order[0]);\n     SmallVector<Value> offs =\n         loader.computeOffsets(warpId, lane, cSwizzleOffset);\n     // initialize pointers\n     const int numPtrs = loader.getNumPtrs();\n     SmallVector<Value> ptrs(numPtrs);\n-    Value smemBase = smemObj.getBaseBeforeSwizzle(order[0], loc, rewriter);\n-    Type smemPtrTy = getShemPtrTy(eltTy);\n+    Value smemBase = smemObj.getBaseBeforeSlice(order[0], loc, rewriter);\n+    Type smemPtrTy = getSharedMemPtrTy(eltTy);\n     for (int i = 0; i < numPtrs; ++i)\n       ptrs[i] = bitcast(gep(smemPtrTy, smemBase, offs[i]), smemPtrTy);\n     // actually load from shared memory\n     auto matTy = LLVM::LLVMStructType::getLiteral(eltTy.getContext(),\n                                                   SmallVector<Type>(4, i32_ty));\n     auto [ha0, ha1, ha2, ha3] = loader.loadX4(\n-        (kOrder == 1) ? a : b /*mat0*/, (kOrder == 1) ? b : a /*mat1*/, offs,\n-        ptrs, matTy, getShemPtrTy(eltTy));\n+        (kOrder == 1) ? a : b /*mat0*/, (kOrder == 1) ? b : a /*mat1*/, ptrs,\n+        matTy, getSharedMemPtrTy(eltTy));\n     if (!isA)\n       std::swap(ha1, ha2);\n     // the following is incorrect\n@@ -530,32 +534,34 @@ Value loadArg(ConversionPatternRewriter &rewriter, Location loc, Value tensor,\n   auto numRep = encoding.getMMAv2Rep(tensorTy.getShape(), bitwidth);\n   int kWidth = encoding.getMMAv2kWidth();\n \n-  int wpt0 = mmaLayout.getWarpsPerCTA()[0];\n-  int wpt1 = mmaLayout.getWarpsPerCTA()[1];\n+  auto warpsPerCTA = mmaLayout.getWarpsPerCTA();\n   Value warp = udiv(thread, i32_val(32));\n   Value lane = urem(thread, i32_val(32));\n-  Value warpM = urem(urem(warp, i32_val(wpt0)), i32_val(shape[0] / 16));\n-  Value warpMN = udiv(warp, i32_val(wpt0));\n-  Value warpN = urem(urem(warpMN, i32_val(wpt1)), i32_val(shape[1] / 8));\n-\n-  int wpt;\n+  // Note: warps are currently column major in MMA layout\n+  Value warpRowIndex = urem(warp, i32_val(warpsPerCTA[0]));\n+  Value warpColIndex =\n+      urem(udiv(warp, i32_val(warpsPerCTA[0])), i32_val(warpsPerCTA[1]));\n+  Value warpM = urem(warpRowIndex, i32_val(shape[0] / 16));\n+  Value warpN = urem(warpColIndex, i32_val(shape[1] / 8));\n+\n+  int warpsPerTile;\n   if (isA)\n-    wpt = std::min<int>(wpt0, shape[0] / 16);\n+    warpsPerTile = std::min<int>(warpsPerCTA[0], shape[0] / 16);\n   else\n-    wpt = std::min<int>(wpt1, shape[1] / 16);\n+    warpsPerTile = std::min<int>(warpsPerCTA[1], shape[1] / 16);\n \n   std::function<void(int, int)> loadFn;\n   if (isA)\n     loadFn = getLoadMatrixFn(\n-        tensor, smemObj, mmaLayout, wpt /*wpt*/, 1 /*kOrder*/, kWidth,\n-        {mmaInstrM, mmaInstrK} /*instrShape*/,\n+        tensor, smemObj, mmaLayout, warpsPerTile /*warpsPerTile*/, 1 /*kOrder*/,\n+        kWidth, {mmaInstrM, mmaInstrK} /*instrShape*/,\n         {matShapeM, matShapeK} /*matShape*/, warpM /*warpId*/, lane /*laneId*/,\n         vals /*vals*/, isA /*isA*/, typeConverter /* typeConverter */,\n         rewriter /*rewriter*/, loc /*loc*/);\n   else\n     loadFn = getLoadMatrixFn(\n-        tensor, smemObj, mmaLayout, wpt /*wpt*/, 0 /*kOrder*/, kWidth,\n-        {mmaInstrK, mmaInstrN} /*instrShape*/,\n+        tensor, smemObj, mmaLayout, warpsPerTile /*warpsPerTile*/, 0 /*kOrder*/,\n+        kWidth, {mmaInstrK, mmaInstrN} /*instrShape*/,\n         {matShapeK, matShapeN} /*matShape*/, warpN /*warpId*/, lane /*laneId*/,\n         vals /*vals*/, isA /*isA*/, typeConverter /* typeConverter */,\n         rewriter /*rewriter*/, loc /*loc*/);"}, {"filename": "lib/Conversion/TritonGPUToLLVM/Utility.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "file_content_changes": "@@ -245,8 +245,8 @@ struct SharedMemoryObject {\n     return offsets[order];\n   }\n \n-  Value getBaseBeforeSwizzle(int order, Location loc,\n-                             ConversionPatternRewriter &rewriter) const {\n+  Value getBaseBeforeSlice(int order, Location loc,\n+                           ConversionPatternRewriter &rewriter) const {\n     Value cSwizzleOffset = getCSwizzleOffset(order);\n     Value offset = sub(i32_val(0), cSwizzleOffset);\n     Type type = base.getType();"}]