[{"filename": "lib/Dialect/TritonGPU/Transforms/Coalesce.cpp", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "file_content_changes": "@@ -63,9 +63,13 @@ struct CoalescePass : public TritonGPUCoalesceBase<CoalescePass> {\n     auto convertType = getTypeConverter(axisInfo, ptr, numWarps);\n     // convert operands\n     SmallVector<Value, 4> newArgs;\n-    for (auto v : op->getOperands())\n-      newArgs.push_back(builder.create<triton::gpu::ConvertLayoutOp>(\n-          op->getLoc(), convertType(v.getType()), v));\n+    for (auto v : op->getOperands()) {\n+      if (v.getType().isa<RankedTensorType>())\n+        newArgs.push_back(builder.create<triton::gpu::ConvertLayoutOp>(\n+            op->getLoc(), convertType(v.getType()), v));\n+      else\n+        newArgs.push_back(v);\n+    }\n     // convert output types\n     SmallVector<Type, 4> newTypes;\n     for (auto t : op->getResultTypes()) {"}]