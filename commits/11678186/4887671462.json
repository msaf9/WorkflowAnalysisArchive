[{"filename": "lib/Conversion/TritonGPUToLLVM/LoadStoreOpToLLVM.cpp", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "file_content_changes": "@@ -483,10 +483,11 @@ struct AtomicRMWOpConversion\n       maskElements = getTypeConverter()->unpackLLElements(\n           loc, llMask, rewriter, op.getMask().getType());\n \n-    auto tensorTy = op.getResult().getType().dyn_cast<RankedTensorType>();\n+    auto valueTy = op.getResult().getType();\n+    auto tensorTy = valueTy.dyn_cast<RankedTensorType>();\n     Type valueElemTy =\n         tensorTy ? getTypeConverter()->convertType(tensorTy.getElementType())\n-                 : op.getResult().getType();\n+                 : valueTy;\n     const size_t valueElemNBits = valueElemTy.getIntOrFloatBitWidth();\n     auto elemsPerThread = getTotalElemsPerThread(val.getType());\n     // vec = 1, numElements = 1 for scalar"}]