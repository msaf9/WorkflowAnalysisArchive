[{"filename": "python/setup.py", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "file_content_changes": "@@ -161,6 +161,14 @@ def run(self):\n         for ext in self.extensions:\n             self.build_extension(ext)\n \n+    def get_cmake_dir(self):\n+        plat_name = sysconfig.get_platform()\n+        python_version = sysconfig.get_python_version()\n+        dir_name = f\"cmake.{plat_name}-{sys.implementation.name}-{python_version}\"\n+        cmake_dir = Path(self.base_dir) / \"python\" / \"build\" / dir_name\n+        cmake_dir.mkdir(parents=True, exist_ok=True)\n+        return cmake_dir\n+\n     def build_extension(self, ext):\n         lit_dir = shutil.which('lit')\n         user_home = os.getenv(\"HOME\") or os.getenv(\"USERPROFILE\") or \\\n@@ -204,8 +212,9 @@ def build_extension(self, ext):\n             build_args += ['-j' + max_jobs]\n \n         env = os.environ.copy()\n-        subprocess.check_call([\"cmake\", self.base_dir] + cmake_args, cwd=self.build_temp, env=env)\n-        subprocess.check_call([\"cmake\", \"--build\", \".\"] + build_args, cwd=self.build_temp)\n+        cmake_dir = self.get_cmake_dir()\n+        subprocess.check_call([\"cmake\", self.base_dir] + cmake_args, cwd=cmake_dir, env=env)\n+        subprocess.check_call([\"cmake\", \"--build\", \".\"] + build_args, cwd=cmake_dir)\n \n \n download_and_copy_ptxas()\n@@ -228,6 +237,10 @@ def build_extension(self, ext):\n         \"triton/ops\",\n         \"triton/ops/blocksparse\",\n         \"triton/runtime\",\n+        \"triton/runtime/backends\",\n+        \"triton/third_party/cuda/bin\",\n+        \"triton/third_party/cuda/include\",\n+        \"triton/third_party/cuda/lib\",\n         \"triton/tools\",\n     ],\n     install_requires=["}]