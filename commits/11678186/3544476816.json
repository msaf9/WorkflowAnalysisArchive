[{"filename": "python/triton/compiler.py", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "file_content_changes": "@@ -713,7 +713,8 @@ def visit_Call(self, node):\n                 for i in range(call_op.get_num_results()):\n                     results.append(triton.language.tensor(call_op.get_result(i), callee_ret_type[i]))\n                 return tuple(results)\n-        if impl.is_builtin(fn):\n+        if (hasattr(fn, '__self__') and self.is_triton_tensor(fn.__self__)) \\\n+                or impl.is_builtin(fn):\n             return fn(*args, _builder=self.builder, **kws)\n         if fn in self.builtins.values():\n             args = [arg.value if isinstance(arg, triton.language.constexpr) else arg"}]