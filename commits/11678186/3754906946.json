[{"filename": "python/test/unit/language/test_core.py", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "file_content_changes": "@@ -491,10 +491,9 @@ def make_ptr_str(name, shape):\n # TODO: handle `%4 = triton_gpu.convert_layout %3 : (tensor<32xi32, #blocked0>) -> tensor<32xi32, #triton_gpu.slice<{dim = 0, parent = #blocked1}>>``\n @pytest.mark.parametrize(\"expr, dtype_str\", [\n     (f'x[{s}]', d)\n-    for s in ['None, :', ':, None']\n-    # FIXME: 3d indexing doesn't work\n-    #'None, :, :',\n-    # ':, :, None']\n+    for s in ['None, :', ':, None',\n+              'None, :, :',\n+              ':, :, None']\n     for d in ['int32', 'uint32', 'uint16']\n ])\n def test_index1d(expr, dtype_str, device='cuda'):"}, {"filename": "python/triton/language/__init__.py", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "file_content_changes": "@@ -20,6 +20,8 @@\n     atomic_xor,\n     bfloat16,\n     block_type,\n+    broadcast,\n+    broadcast_to,\n     cat,\n     cdiv,\n     constexpr,\n@@ -105,6 +107,8 @@\n     \"atomic_xor\",\n     \"bfloat16\",\n     \"block_type\",\n+    \"broadcast\",\n+    \"broadcast_to\",\n     \"builtin\",\n     \"cat\",\n     \"cdiv\","}, {"filename": "python/triton/language/core.py", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "file_content_changes": "@@ -596,11 +596,9 @@ def __getitem__(self, slices, _builder=None):\n         if isinstance(slices, slice):\n             slices = [slices]\n         ret = self\n-        n_inserted = 0\n         for dim, sl in enumerate(slices):\n             if isinstance(sl, constexpr) and sl.value is None:\n-                ret = semantic.expand_dims(ret, dim + n_inserted, _builder)\n-                n_inserted += 1\n+                ret = semantic.expand_dims(ret, dim, _builder)\n             elif sl == slice(None, None, None):\n                 pass\n             else:"}]