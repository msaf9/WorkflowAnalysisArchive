[{"filename": "python/triton/language/core.py", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "file_content_changes": "@@ -1213,11 +1213,11 @@ def __init__(self, fn, args, constants, grid, num_warps) -> None:\n         self.fn = fn\n \n \n-@builtin\n-def launch(fn, args, grid, num_warps=None, _builder=None):\n-    constants = {i: x for i, x in enumerate(args) if isinstance(x, constexpr)}\n-    args = [_to_ir(x, builder=_builder) for x in args if not isinstance(x, constexpr)]\n-    grid = [_to_ir(x, builder=_builder) for x in grid]\n-    if num_warps is None:\n-        num_warps = _to_ir(4, builder=_builder)\n-    return LaunchProxy(fn, args, constants, grid, num_warps)\n+# @builtin\n+# def launch(fn, args, grid, num_warps=None, _builder=None):\n+#     constants = {i: x for i, x in enumerate(args) if isinstance(x, constexpr)}\n+#     args = [_to_ir(x, builder=_builder) for x in args if not isinstance(x, constexpr)]\n+#     grid = [_to_ir(x, builder=_builder) for x in grid]\n+#     if num_warps is None:\n+#         num_warps = _to_ir(4, builder=_builder)\n+#     return LaunchProxy(fn, args, constants, grid, num_warps)"}]