[{"filename": "lib/Conversion/NVGPUToLLVM/NVGPUToLLVMPass.cpp", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "file_content_changes": "@@ -862,17 +862,16 @@ class WGMMAOpPattern : public mlir::RewritePattern {\n       // both input and outputs\n       PTXBuilder::Operand *opr;\n       if (structTypeC.getBody().front().isF32())\n-        opr = ptxBuilder.newOperand(\n-            extract_val(structTypeC.getBody()[i], opC, i), \"=f\");\n+        opr = ptxBuilder.newOperand(\"=f\");\n       else\n-        opr = ptxBuilder.newOperand(\n-            extract_val(structTypeC.getBody()[i], opC, i), \"=r\");\n+        opr = ptxBuilder.newOperand(\"=r\");\n       oprs.push_back(opr);\n     }\n     args += \"}, \";\n \n     for (uint32_t i = asmOpIdx - numCRegs; i < asmOpIdx; ++i) {\n-      auto *opr = ptxBuilder.newOperand(i);\n+      auto *opr = ptxBuilder.newOperand(\n+          extract_val(structTypeC.getBody()[i], opC, i), std::to_string(i));\n       oprs.push_back(opr);\n     }\n "}]