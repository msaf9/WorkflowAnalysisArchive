[{"filename": "python/test/unit/language/test_core.py", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "file_content_changes": "@@ -889,9 +889,9 @@ def kernel(X, stride_xm, stride_xk,\n         tl.store(Zs, z)\n     # input\n     rs = RandomState(17)\n-    x = numpy_random((K, M) if trans_a else (M, K), dtype_str=dtype, rs=rs)*.1\n-    y = numpy_random((N, K) if trans_b else (K, N), dtype_str=dtype, rs=rs)*.1\n-    w = numpy_random((N, N), dtype_str=dtype, rs=rs)*.1\n+    x = numpy_random((K, M) if trans_a else (M, K), dtype_str=dtype, rs=rs) * .1\n+    y = numpy_random((N, K) if trans_b else (K, N), dtype_str=dtype, rs=rs) * .1\n+    w = numpy_random((N, N), dtype_str=dtype, rs=rs) * .1\n     if allow_tf32:\n         x = (x.view('uint32') & np.uint32(0xffffe000)).view('float32')\n         y = (y.view('uint32') & np.uint32(0xffffe000)).view('float32')\n@@ -900,7 +900,7 @@ def kernel(X, stride_xm, stride_xk,\n     y_tri = to_triton(y, device=device)\n     w_tri = to_triton(w, device=device)\n     # triton result\n-    z = 1 + numpy_random((M, N), dtype_str=dtype, rs=rs)*.1\n+    z = 1 + numpy_random((M, N), dtype_str=dtype, rs=rs) * .1\n     z_tri = to_triton(z, device=device)\n     if epilogue == 'trans':\n         z_tri = torch.as_strided(z_tri, (M, N), z_tri.stride()[::-1])"}]