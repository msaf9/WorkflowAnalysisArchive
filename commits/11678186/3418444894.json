[{"filename": "lib/Dialect/TritonGPU/Transforms/Combine.cpp", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "file_content_changes": "@@ -122,7 +122,8 @@ class SimplifyConversion : public mlir::RewritePattern {\n       rewriter.replaceOpWithNewOp<triton::gpu::InsertSliceAsyncOp>(\n           op, newType, insert_slice.src(), newArg.getResult(),\n           insert_slice.index(), insert_slice.mask(), insert_slice.other(),\n-          insert_slice.cache(), insert_slice.evict(), insert_slice.axis());\n+          insert_slice.cache(), insert_slice.evict(),\n+          insert_slice.isVolatile(), insert_slice.axis());\n       return mlir::success();\n     }\n     // cvt(extract_slice(x), type2) -> extract_slice(cvt(x, type2))\n@@ -628,4 +629,4 @@ class TritonGPUCombineOpsPass\n \n std::unique_ptr<Pass> mlir::createTritonGPUCombineOpsPass() {\n   return std::make_unique<TritonGPUCombineOpsPass>();\n-}\n+}\n\\ No newline at end of file"}]