[{"filename": ".github/workflows/compare-artifacts.yml", "status": "modified", "additions": 27, "deletions": 32, "changes": 59, "file_content_changes": "@@ -21,37 +21,32 @@ jobs:\n                repo: context.repo.repo,\n                run_id: context.payload.workflow_run.id,\n             });\n-            echo \"Step 1 done\"\n-            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {\n-              return artifact.name == \"pr_number\"\n-            })[0];\n-            echo \"Step 2 done\"\n-            let download = await github.rest.actions.downloadArtifact({\n-               owner: context.repo.owner,\n-               repo: context.repo.repo,\n-               artifact_id: matchArtifact.id,\n-               archive_format: 'zip',\n-            });\n-            echo \"Step 3 done\"\n-            let fs = require('fs');\n-            echo \"Step 4 done\"\n-            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/pr_number.zip`, Buffer.from(download.data));\n-            echo \"Step 5 done\"\n+            # let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {\n+            #   return artifact.name == \"pr_number\"\n+            # })[0];\n+            # let download = await github.rest.actions.downloadArtifact({\n+            #    owner: context.repo.owner,\n+            #    repo: context.repo.repo,\n+            #    artifact_id: matchArtifact.id,\n+            #    archive_format: 'zip',\n+            # });\n+            # let fs = require('fs');\n+            # fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/pr_number.zip`, Buffer.from(download.data));\n \n-      - name: 'Unzip artifact'\n-        run: unzip pr_number.zip\n+      # - name: 'Unzip artifact'\n+      #   run: unzip pr_number.zip\n \n-      - name: 'Comment on PR'\n-        uses: actions/github-script@v6\n-        with:\n-          github-token: ${{ secrets.GITHUB_TOKEN }}\n-          script: |\n-            let fs = require('fs');\n-            let issue_number = Number(fs.readFileSync('./pr_number'));\n-            echo $issue_number\n-            await github.rest.issues.createComment({\n-              owner: context.repo.owner,\n-              repo: context.repo.repo,\n-              issue_number: issue_number,\n-              body: 'Thank you for the PR!'\n-            });\n+      # - name: 'Comment on PR'\n+      #   uses: actions/github-script@v6\n+      #   with:\n+      #     github-token: ${{ secrets.GITHUB_TOKEN }}\n+      #     script: |\n+      #       let fs = require('fs');\n+      #       let issue_number = Number(fs.readFileSync('./pr_number'));\n+      #       echo $issue_number\n+      #       await github.rest.issues.createComment({\n+      #         owner: context.repo.owner,\n+      #         repo: context.repo.repo,\n+      #         issue_number: issue_number,\n+      #         body: 'Thank you for the PR!'\n+      #       });"}]