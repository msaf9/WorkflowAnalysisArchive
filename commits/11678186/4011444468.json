[{"filename": "python/setup.py", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "file_content_changes": "@@ -168,6 +168,22 @@ def build_extension(self, ext):\n         subprocess.check_call([\"cmake\", \"--build\", \".\"] + build_args, cwd=self.build_temp)\n \n \n+package_data = {\n+    \"triton/ops\": [\"*.c\"],\n+    \"triton/ops/blocksparse\": [\"*.c\"],\n+    \"triton/language\": [\"*.bc\"],\n+}\n+\n+if os.getenv(\"TRITION_PACKAGE_CUDA_DEPS\"):\n+    base_dir = os.path.dirname(__file__)\n+    cuda_dir = os.getenv(\"CUDA_HOME\", \"/usr/local/cuda\")\n+    triton_dir = os.path.join(base_dir, \"triton\")\n+    os.makedirs(os.path.join(triton_dir, \"include\"), exist_ok=True)\n+    os.makedirs(os.path.join(triton_dir, \"bin\"), exist_ok=True)\n+    shutil.copy(os.path.join(cuda_dir, \"include\", \"cuda.h\"), os.path.join(triton_dir, \"include\"))\n+    shutil.copy(os.path.join(cuda_dir, \"bin\", \"ptxas\"), os.path.join(triton_dir, \"bin\"))\n+    package_data[\"triton\"] = [\"include/cuda.h\", \"bin/ptxas\"]\n+\n setup(\n     name=\"triton\",\n     version=\"2.0.0\",\n@@ -182,11 +198,7 @@ def build_extension(self, ext):\n         \"torch\",\n         \"lit\",\n     ],\n-    package_data={\n-        \"triton/ops\": [\"*.c\"],\n-        \"triton/ops/blocksparse\": [\"*.c\"],\n-        \"triton/language\": [\"*.bc\"]\n-    },\n+    package_data=package_data,\n     include_package_data=True,\n     ext_modules=[CMakeExtension(\"triton\", \"triton/_C/\")],\n     cmdclass={\"build_ext\": CMakeBuild},"}, {"filename": "python/triton/compiler.py", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "file_content_changes": "@@ -987,6 +987,9 @@ def path_to_ptxas():\n         \"/usr\",\n         os.environ.get('CUDA_PATH', default_cuda_dir())\n     ]\n+    if not os.getenv(\"TRITON_IGNORE_BUNDLED_PTXAS\"):\n+        prefixes.insert(0, os.path.dirname(__file__))\n+\n     for prefix in prefixes:\n         ptxas = os.path.join(prefix, \"bin\", \"ptxas\")\n         if os.path.exists(ptxas):\n@@ -1287,6 +1290,11 @@ def _build(name, src, srcdir):\n     cuda_lib_dirs = libcuda_dirs()\n     cuda_path = os.environ.get('CUDA_PATH', default_cuda_dir())\n     cu_include_dir = os.path.join(cuda_path, \"include\")\n+    triton_include_dir = os.path.join(os.path.dirname(__file__), \"include\")\n+    cuda_header = os.path.join(cu_include_dir, \"cuda.h\")\n+    triton_cuda_header = os.path.join(triton_include_dir, \"cuda.h\")\n+    if not os.path.exists(cuda_header) and os.path.exists(triton_cuda_header):\n+        cu_include_dir = triton_include_dir\n     suffix = sysconfig.get_config_var('EXT_SUFFIX')\n     so = os.path.join(srcdir, '{name}{suffix}'.format(name=name, suffix=suffix))\n     # try to avoid setuptools if possible"}]