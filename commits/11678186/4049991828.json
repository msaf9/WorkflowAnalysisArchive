[{"filename": "python/triton/language/core.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -31,7 +31,7 @@ def _to_tensor(x, builder):\n         return _to_tensor(x.value, builder)\n     elif isinstance(x, tensor):\n         return x\n-    assert False, f'cannot convert {x} to tensor'\n+    assert False, f\"cannot convert {x} of type {type(x)} to tensor\"\n \n \n class dtype:"}, {"filename": "python/triton/language/semantic.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -809,7 +809,7 @@ def store(ptr: tl.tensor,\n         raise ValueError(\"Pointer argument of store instruction is \" + ptr.type.__repr__())\n     if ptr.type.is_block():\n         val = broadcast_impl_shape(val, ptr.type.get_block_shapes(), builder)\n-    if mask:\n+    if mask and ptr.type.is_block():\n         mask = broadcast_impl_shape(mask, ptr.type.get_block_shapes(), builder)\n     ptr_ty = ptr.type.scalar\n     elt_ty = ptr_ty.element_ty"}]