[{"filename": ".github/workflows/integration-tests.yml", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "file_content_changes": "@@ -32,9 +32,9 @@ jobs:\n         runner: ${{fromJson(needs.Runner-Preparation.outputs.matrix)}}\n \n     env:\n-      IS_MACOS: contains(matrix.runner, 'macos')\n-      IS_LINUX: contains(matrix.runner, 'ubuntu')\n-      IS_SELF_HOSTED: matrix.runner[0] == 'self-hosted'\n+      IS_MACOS: ${{contains(matrix.runner, 'macos')}}\n+      IS_LINUX: ${contains(matrix.runner, 'ubuntu')}}\n+      IS_SELF_HOSTED: ${{matrix.runner[0] == 'self-hosted'}}\n \n     steps:\n       - name: Checkout\n@@ -45,19 +45,19 @@ jobs:\n           rm -rf ~/.triton/cache/\n \n       - name: Check imports\n-        if: ${{env.IS_LINUX}}\n+        if: env.IS_LINUX\n         run: |\n           pip install isort\n           isort -c ./python || ( echo '::error title=Imports not sorted::Please run \\\"isort ./python\\\"' ; exit 1 )\n \n       - name: Check python style\n-        if: ${{env.IS_LINUX}}\n+        if: env.IS_LINUX\n         run: |\n           pip install autopep8\n           autopep8 -a -r -d --exit-code ./python || ( echo '::error title=Style issues::Please run \\\"autopep8 -a -r -i ./python\\\"' ; exit 1 )\n \n       - name: Check cpp style\n-        if: ${{env.IS_LINUX}}\n+        if: env.IS_LINUX\n         run: |\n           pip install clang-format\n           find . -regex '.*\\.\\(cpp\\|hpp\\|h\\|cc\\)' -not -path \"./python/build/*\" -not -path \"./include/triton/external/*\" -print0 | xargs -0 -n1 clang-format -style=file --dry-run -Werror -i ||"}]