[{"filename": "lib/codegen/analysis/align.cc", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "file_content_changes": "@@ -103,15 +103,15 @@ std::vector<align::cst_info> align::populate_is_constant_reshape(ir::reshape_ins\n     cst_info ax ;\n     if(x_shapes[d] == 1)\n       ax = {1, op_cst[current].value};\n-    else if(!is_skewed\n-            && x_shapes[d] == op_shapes[current])\n+    else if (!is_skewed && current < op_shapes.size() &&\n+             x_shapes[d] == op_shapes[current]) {\n       ax = {x_shapes[d], op_cst[current++].value};\n-    else {\n+    } else {\n       is_skewed = true;\n       ax = {x_shapes[d], 0};\n     }\n     result.push_back(ax);\n-  }\n+    }\n   return add_to_cache(x, result, is_constant_);\n }\n \n@@ -268,10 +268,10 @@ std::vector<unsigned> align::populate_max_contiguous_reshape(ir::reshape_inst* x\n   for(size_t d = 0; d < shapes.size(); d ++){\n     if(shapes[d] == 1)\n       result.push_back(1);\n-    else if(!is_skewed\n-            && shapes[d] == op_shapes[current])\n+    else if (!is_skewed && current < op_shapes.size() &&\n+             shapes[d] == op_shapes[current]) {\n       result.push_back(op_mc[current++]);\n-    else {\n+    } else {\n       is_skewed = true;\n       result.push_back(1);\n     }\n@@ -409,10 +409,10 @@ std::vector<unsigned> align::populate_starting_multiple_reshape(ir::reshape_inst\n   for(size_t d = 0; d < shapes.size(); d ++){\n     if(shapes[d] == 1)\n       result[d] = 1;\n-    else if(!is_skewed\n-            && shapes[d] == op_shapes[current])\n+    else if (!is_skewed && current < op_shapes.size() &&\n+             op_shapes[current] == shapes[d]) {\n       result[d] = op[current++];\n-    else {\n+    } else {\n       is_skewed = true;\n       result[d] = 1;\n     }"}]