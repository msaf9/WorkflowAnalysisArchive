[{"filename": "lib/Conversion/TritonGPUToLLVM/TritonGPUToLLVM.cpp", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "file_content_changes": "@@ -4155,9 +4155,6 @@ struct MMA16816ConversionHelper {\n     Value _32 = i32_val(32);\n     lane = urem(thread, _32);\n     warp = udiv(thread, _32);\n-    // warpMN = udiv(warp, i32_val(wpt[0]));\n-    // warpM = urem(warp, i32_val(wpt[0]));\n-    // warpN = urem(warpMN, i32_val(wpt[1]));\n   }\n \n   // Get a warpId for M axis."}, {"filename": "python/tests/test_gemm.py", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "file_content_changes": "@@ -27,8 +27,6 @@ def matmul_no_scf_kernel(\n     c_ptrs = c_ptr + offs_m[:, None] * stride_cm + offs_n[None, :] * stride_cn\n     tl.store(c_ptrs, c)\n \n-# TODO: num_warps could only be 4 for now\n-\n \n @pytest.mark.parametrize('SHAPE,NUM_WARPS,TRANS_A,TRANS_B', [\n     (shape, num_warps, trans_a, trans_b)\n@@ -172,6 +170,7 @@ def get_proper_err(a, b, golden):\n     # Non-forloop\n     [64, 32, 64, 4, 64, 32, 64, False, False],\n     [128, 64, 128, 4, 128, 64, 128, False, False],\n+    [16, 16, 16, 16, 16, 16, 16, False, False],  # wpt overflow issue\n     # K-Forloop\n     [64, 32, 128, 4, 64, 32, 64, False, False],\n     [128, 16, 128, 4, 128, 16, 32, False, False],\n@@ -186,6 +185,7 @@ def get_proper_err(a, b, golden):\n     [128, 256, 128, 4, 128, 256, 32, False, False],\n     [256, 128, 64, 4, 256, 128, 16, False, False],\n     [128, 64, 128, 4, 128, 64, 32, False, False],\n+    [128, 64, 128, 4, 16, 16, 16, False, False],  # wpt overflow issue\n     # trans\n     [128, 64, 128, 4, 128, 64, 32, True, False],\n     [128, 64, 128, 4, 128, 64, 32, False, True],"}]