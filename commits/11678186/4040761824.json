[{"filename": "test/TritonGPU/combine.mlir", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "file_content_changes": "@@ -87,11 +87,12 @@ func @if_convert_else_not(%arg0: i32, %arg1: !tt.ptr<i32> {tt.divisibility = 16\n   } else {\n     scf.yield %9 : tensor<1024xi32, #layout1>\n   }\n+  // CHECK-NOT: triton_gpu.convert_layout\n   tt.store %5, %8 : tensor<1024xi32, #layout1>\n   return\n }\n \n-// CHECK-LABEL: if_convert_else_not\n+// CHECK-LABEL: if_not_else_convert\n func @if_not_else_convert(%arg0: i32, %arg1: !tt.ptr<i32> {tt.divisibility = 16 : i32}) {\n   %c32_i32 = arith.constant dense<32> : tensor<1024xi32, #layout0>\n   %0 = tt.get_program_id {axis = 0 : i32} : i32\n@@ -107,6 +108,7 @@ func @if_not_else_convert(%arg0: i32, %arg1: !tt.ptr<i32> {tt.divisibility = 16\n     %7 = triton_gpu.convert_layout %3 : (tensor<1024xi32, #layout0>) -> tensor<1024xi32, #layout1>\n     scf.yield %7 : tensor<1024xi32, #layout1>\n   }\n+  // CHECK-NOT: triton_gpu.convert_layout\n   tt.store %5, %8 : tensor<1024xi32, #layout1>\n   return\n }"}]