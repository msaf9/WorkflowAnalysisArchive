[{"filename": ".github/workflows/integration-tests.yml", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "file_content_changes": "@@ -92,17 +92,21 @@ jobs:\n         if: ${{ env.BACKEND == 'CUDA' && env.ENABLE_TMA == '1' && env.ENABLE_MMA_V3 == '1'}}\n         run: |\n           cd python/test/unit\n-          python3 -m pytest -n 8 --ignore=runtime\n+          python3 -m pytest -n 8 --ignore=runtime --ignore=language/test_line_info.py\n           # run runtime tests serially to avoid race condition with cache handling.\n           python3 -m pytest runtime/\n+          # run test_line_info.py separately with TRITON_DISABLE_LINE_INFO=0\n+          TRITON_DISABLE_LINE_INFO=0 python3 -m pytest language/test_line_info.py\n \n       - name: Run python tests on CUDA with ENABLE_TMA=0 and ENABLE_MMA_V3=0\n         if: ${{ env.BACKEND == 'CUDA' && env.ENABLE_TMA == '0' && env.ENABLE_MMA_V3 == '0'}}\n         run: |\n           cd python/test/unit\n-          python3 -m pytest -n 8 --ignore=runtime --ignore=hopper\n+          python3 -m pytest -n 8 --ignore=runtime --ignore=hopper --ignore=language/test_line_info.py\n           # run runtime tests serially to avoid race condition with cache handling.\n           python3 -m pytest runtime/\n+          # run test_line_info.py separately with TRITON_DISABLE_LINE_INFO=0\n+          TRITON_DISABLE_LINE_INFO=0 python3 -m pytest language/test_line_info.py\n \n       - name: Create artifacts archive\n         if: ${{(matrix.runner[0] == 'self-hosted') && (matrix.runner[1] == 'V100' || matrix.runner[1] == 'A100' || matrix.runner[1] == 'H100')}}"}]