[{"filename": "python/triton/language/core.py", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "file_content_changes": "@@ -341,22 +341,22 @@ def __repr__(self) -> str:\n \n     def __bool__(self):\n         return bool(self.value)\n-    \n+\n     def __ge__(self, other):\n         other = other.value if isinstance(other, constexpr) else other\n         return self.value >= other\n-    \n+\n     def __gt__(self, other):\n         other = other.value if isinstance(other, constexpr) else other\n-        return self.value >  other\n+        return self.value > other\n \n     def __le__(self, other):\n         other = other.value if isinstance(other, constexpr) else other\n         return self.value <= other\n-    \n+\n     def __lt__(self, other):\n         other = other.value if isinstance(other, constexpr) else other\n-        return self.value <  other\n+        return self.value < other\n \n     def __eq__(self, other):\n         other = other.value if isinstance(other, constexpr) else other"}, {"filename": "python/triton/language/semantic.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -908,7 +908,7 @@ def dot(lhs: tl.tensor,\n     assert len(lhs.shape) == 2 and len(rhs.shape) == 2\n     assert lhs.shape[-1] == rhs.shape[0]\n     assert lhs.shape[0] >= 16 and lhs.shape[1] >= 16 and rhs.shape[1] >= 16,\\\n-           \"small blocks not supported!\"\n+        \"small blocks not supported!\"\n     if lhs.type.scalar.is_int():\n         _0 = builder.get_int32(0)\n         ret_scalar_ty = tl.int32"}]