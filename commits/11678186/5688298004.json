[{"filename": "python/test/unit/language/test_core.py", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "file_content_changes": "@@ -1676,16 +1676,18 @@ def test_reduce_layouts(M, N, src_layout, axis, device):\n     if is_hip():\n         pytest.skip(\"test_reduce_layouts is not supported in HIP\")\n         gpu_dialect = \"triton_gpu_rocm\"\n+        threads_per_warp = 64\n     else:\n         gpu_dialect = \"triton_gpu\"\n+        threads_per_warp = 32\n \n     rdims_2d = f\"1x{N}\" if axis == 0 else f\"{M}x1\"\n     rdims_1d = f\"{N}\" if axis == 0 else f\"{M}\"\n     store_range = \"%7\" if axis == 0 else \"%1\"\n     ir = f\"\"\"\n     #blocked = #{gpu_dialect}.blocked<{{sizePerThread = [1, 1], threadsPerWarp = [32, 1], warpsPerCTA = [4, 1], order = [0, 1]}}>\n     #src = {src_layout}\n-    module attributes {{\"{gpu_dialect}.num-warps\" = 4 : i32, \"{gpu_dialect}.threads-per-warp\" = 64 : i32}} {{\n+    module attributes {{\"{gpu_dialect}.num-warps\" = 4 : i32, \"{gpu_dialect}.threads-per-warp\" = {threads_per_warp} : i32}} {{\n     tt.func public @kernel_0d1d2c3d4c(%arg0: !tt.ptr<i32> {{tt.divisibility = 16 : i32}}, %arg1: i32 {{tt.divisibility = 16 : i32}}, %arg2: !tt.ptr<i32> {{tt.divisibility = 16 : i32}}) {{\n         %0 = tt.make_range {{end = {M} : i32, start = 0 : i32}} : tensor<{M}xi32, #{gpu_dialect}.slice<{{dim = 1, parent = #blocked}}>>\n         %1 = tt.expand_dims %0 {{axis = 1 : i32}} : (tensor<{M}xi32, #{gpu_dialect}.slice<{{dim = 1, parent = #blocked}}>>) -> tensor<{M}x1xi32, #blocked>\n@@ -1804,7 +1806,7 @@ def test_store_op(M, src_layout, device):\n @pytest.mark.parametrize(\"dst_dim\", [0, 1])\n def test_convert1d(M, src_layout, dst_layout, src_dim, dst_dim, device):\n     if is_hip():\n-        pytest.skip(\"test_reduce_layouts is not supported in HIP\")\n+        pytest.skip(\"test_convert1d is not supported in HIP\")\n         gpu_dialect = \"triton_gpu_rocm\"\n     else:\n         gpu_dialect = \"triton_gpu\""}, {"filename": "python/triton/compiler/compiler.py", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "file_content_changes": "@@ -272,6 +272,10 @@ def compile(fn, **kwargs):\n \n     if device_type == \"cuda\":\n         arch = get_architecture_descriptor(kwargs.get(\"cc\", None))\n+    elif device_type == \"hip\":\n+        _device_backend = get_backend(device_type)\n+        assert _device_backend\n+        arch = _device_backend.get_architecture_descriptor(**kwargs)\n     else:\n         _device_backend = get_backend(device_type)\n         assert _device_backend"}]