[{"filename": "lib/Conversion/TritonGPUToLLVM/TritonGPUToLLVMBase.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "file_content_changes": "@@ -291,10 +291,10 @@ class ConvertTritonGPUOpToLLVMPatternBase {\n     for (unsigned elemIdx = 0; elemIdx < numElems; elemIdx += minVec) {\n       // extract multi dimensional index for current element\n       auto idx = srcIndices[elemIdx];\n-      Value idxCol = idx[inOrder[0]]; // contiguous dimension\n-      Value idxRow = idx[inOrder[1]]; // discontiguous dimension\n-      Value strideCol = srcStrides[inOrder[0]];\n-      Value strideRow = srcStrides[inOrder[1]];\n+      Value idxCol = idx[outOrder[0]]; // contiguous dimension\n+      Value idxRow = idx[outOrder[1]]; // discontiguous dimension\n+      Value strideCol = srcStrides[outOrder[0]];\n+      Value strideRow = srcStrides[outOrder[1]];\n       // extract dynamic/static offset for immediate offseting\n       unsigned immedateOffCol = 0;\n       if (auto add = dyn_cast_or_null<LLVM::AddOp>(idxCol.getDefiningOp()))\n@@ -338,7 +338,7 @@ class ConvertTritonGPUOpToLLVMPatternBase {\n       Value currPtr = gep(dstPtrTy, dstPtrBase, offset);\n       // compute immediate offset\n       Value immedateOff =\n-          add(mul(i32_val(immedateOffRow), srcStrides[inOrder[1]]),\n+          add(mul(i32_val(immedateOffRow), srcStrides[outOrder[1]]),\n               i32_val(immedateOffCol));\n       ret[elemIdx] = gep(dstPtrTy, currPtr, immedateOff);\n     }"}]