[{"filename": "include/triton/Analysis/Utility.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "file_content_changes": "@@ -1,8 +1,8 @@\n #ifndef TRITON_ANALYSIS_UTILITY_H\n #define TRITON_ANALYSIS_UTILITY_H\n \n-#include \"triton/Dialect/TritonGPU/IR/Dialect.h\"\n #include \"mlir/Analysis/SliceAnalysis.h\"\n+#include \"triton/Dialect/TritonGPU/IR/Dialect.h\"\n #include <algorithm>\n #include <numeric>\n #include <string>\n@@ -99,9 +99,9 @@ SetVector<Operation *>\n multiRootTopologicalSort(const SetVector<Operation *> &toSort);\n \n // This uses the toplogicalSort above\n-SetVector<Operation *> multiRootGetSlice(Operation *op,\n-                                        TransitiveFilter backwardFilter = nullptr,\n-                                        TransitiveFilter forwardFilter = nullptr);\n+SetVector<Operation *>\n+multiRootGetSlice(Operation *op, TransitiveFilter backwardFilter = nullptr,\n+                  TransitiveFilter forwardFilter = nullptr);\n \n } // namespace mlir\n "}, {"filename": "lib/Analysis/Utility.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "file_content_changes": "@@ -301,8 +301,8 @@ multiRootTopologicalSort(const SetVector<Operation *> &toSort) {\n }\n \n SetVector<Operation *> multiRootGetSlice(Operation *op,\n-                                        TransitiveFilter backwardFilter,\n-                                        TransitiveFilter forwardFilter) {\n+                                         TransitiveFilter backwardFilter,\n+                                         TransitiveFilter forwardFilter) {\n   SetVector<Operation *> slice;\n   slice.insert(op);\n "}]