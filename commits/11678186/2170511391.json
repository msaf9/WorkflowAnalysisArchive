[{"filename": "python/triton/language/core.py", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "file_content_changes": "@@ -2,6 +2,7 @@\n \n from enum import Enum\n from functools import wraps\n+from multiprocessing.sharedctypes import Value\n from typing import List\n \n import triton\n@@ -380,6 +381,9 @@ def __init__(self, handle, type: dtype):\n         self.numel = 1\n         for s in self.shape:\n             self.numel *= s\n+        is_pow2 = (self.numel and (not(self.numel & (self.numel - 1))) )\n+        if not is_pow2:\n+            raise ValueError(\"Triton tensors must have a power-of-two number of elements\")\n         self.numel = constexpr(self.numel)\n         self.type = type  # Tensor type (can be block_type)\n         # Following the practice in pytorch, dtype is scalar type"}]