[{"filename": "python/test/unit/tools/test_aot.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -153,7 +153,7 @@ def test_compile_link_matmul():\n             for hb in hints:\n                 sig = f'*fp32:16, *{dtype}:16, *{dtype}:16, i32{ha}, 1, i32{hb}, 1, i32:16, 1, {BM}, {BN}, {BK}'\n                 name = f\"matmul_{dtype}x{dtype}_{BM}x{BN}x{BK}\"\n-                subprocess.run([sys.executable, compiler_path, \"-n\", \"kernel\", \"--signature\", sig, \"--out-name\", name, \"-o\", name, kernel_path], check=True, cwd=tmp_dir)\n+                subprocess.run([sys.executable, compiler_path, \"-n\", \"kernel\", \"--signature\", sig, \"--out-name\", name, \"-o\", name, \"-w\", 1, kernel_path], check=True, cwd=tmp_dir)\n \n         # link all desired configs\n         h_files = glob.glob(os.path.join(tmp_dir, \"*.h\"))"}, {"filename": "python/triton/tools/compile.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "file_content_changes": "@@ -54,11 +54,11 @@ void load_{kernel_name}() {{\n /*\n {kernel_docstring}\n */\n-CUresult {kernel_name}(CUstream stream, unsigned int gX,unsigned int gY,unsigned int gZ,unsigned int numWarps, {signature}) {{\n+CUresult {kernel_name}(CUstream stream, unsigned int gX, unsigned int gY, unsigned int gZ, {signature}) {{\n     if ({kernel_name}_func == NULL)\n        load_{kernel_name}();\n     void *args[{num_args}] = {{ {arg_pointers} }};\n     // TODO: shared memory\n     if(gX * gY * gZ > 0)\n-      return cuLaunchKernel({kernel_name}_func, gX, gY, gZ, numWarps * 32, 1, 1, {shared}, stream, args, NULL);\n+      return cuLaunchKernel({kernel_name}_func, gX, gY, gZ, {num_warps} * 32, 1, 1, {shared}, stream, args, NULL);\n }}"}, {"filename": "python/triton/tools/compile.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -12,4 +12,4 @@ void unload_{kernel_name}(void);\n void load_{kernel_name}(void);\n // tt-linker: {kernel_name}:{signature}\n CUresult{kernel_name}(CUstream stream, unsigned int gX, unsigned int gY,\n-                      unsigned int gZ, unsigned int numWarps, {signature});\n+                      unsigned int gZ, {signature});"}, {"filename": "python/triton/tools/compile.py", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "file_content_changes": "@@ -107,6 +107,7 @@ def hash_signature(signature: List[str]):\n         \"num_args\": len(arg_names),\n         \"kernel_docstring\": \"\",\n         \"shared\": ccinfo.shared,\n+        \"num_warps\": args.num_warps,\n     }\n     for ext in ['h', 'c']:\n         template_path = Path(__file__).parent / f\"compile.{ext}\""}]