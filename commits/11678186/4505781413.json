[{"filename": ".pre-commit-config.yaml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -13,7 +13,7 @@ repos:\n       - id: autopep8\n         name: autopep8\n         entry: autopep8\n-        args: [\"-a\", \"-r\", \"-i\", \"./python/triton/\"]\n+        args: [\"-a\", \"-r\", \"-i\", \"./python/\"]\n         language: python\n         types: [python]\n         additional_dependencies:"}, {"filename": "python/test/unit/operators/test_blocksparse.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "file_content_changes": "@@ -10,6 +10,7 @@ def sparsify_tensor(x, mask, block):\n         ret[:, idx, :, :] = x[:, h, i * block:(i + 1) * block, j * block:(j + 1) * block]\n     return ret\n \n+\n def make_pair(shape, device=\"cuda\", alpha=1e-2, beta=0., trans=False, data=None, dtype=torch.float32):\n     if data is None:\n         data = torch.randn(shape, dtype=torch.float32, requires_grad=True, device=device)\n@@ -22,6 +23,7 @@ def make_pair(shape, device=\"cuda\", alpha=1e-2, beta=0., trans=False, data=None,\n     tri_ret = ref_ret.clone().detach().requires_grad_()\n     return ref_ret, tri_ret\n \n+\n def mask_tensor(x, mask, block, value=0):\n     ret = x.clone()\n     for h, i, j in zip(*(mask == 0).nonzero(as_tuple=True)):"}]