[{"filename": "lib/Dialect/TritonGPU/Transforms/Combine.cpp", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "file_content_changes": "@@ -884,8 +884,11 @@ int computeCapabilityToMMAVersion(int computeCapability) {\n     return 1;\n   } else if (computeCapability < 90) {\n     return 2;\n+  } else if (computeCapability < 100) {\n+    // FIXME: temporarily add this to pass unis tests\n+    return 2;\n   } else {\n-    assert(false && \"computeCapability > 90 not supported\");\n+    assert(false && \"computeCapability > 100 not supported\");\n     return 3;\n   }\n }"}, {"filename": "lib/Target/PTX/PTXTranslation.cpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "file_content_changes": "@@ -34,15 +34,15 @@ std::string translateLLVMIRToPTX(llvm::Module &module, int cc, int version) {\n   // LLVM version in use may not officially support target hardware.\n   // Supported versions for LLVM 14 are here:\n   // https://github.com/llvm/llvm-project/blob/f28c006a5895fc0e329fe15fead81e37457cb1d1/clang/include/clang/Basic/BuiltinsNVPTX.def\n-  int maxPTX = std::min(75, version);\n-  int maxCC = std::min(86, cc);\n+  int maxPTX = std::min(80, version);\n+  int maxCC = std::min(90, cc);\n   // options\n   auto options = llvm::cl::getRegisteredOptions();\n   auto *shortPtr =\n       static_cast<llvm::cl::opt<bool> *>(options[\"nvptx-short-ptr\"]);\n   assert(shortPtr);\n   shortPtr->setValue(true);\n-  std::string sm = \"sm_\" + std::to_string(maxCC);\n+  std::string sm = cc == 90 ? \"sm_90a\" : \"sm_\" + std::to_string(cc);\n   // max PTX version\n   int ptxMajor = maxPTX / 10;\n   int ptxMinor = maxPTX % 10;"}, {"filename": "python/src/triton.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "file_content_changes": "@@ -1493,7 +1493,9 @@ void init_triton_translation(py::module &m) {\n           std::string cmd;\n           int err;\n           cmd = ptxasPath + \" -v --gpu-name=sm_\" + std::to_string(capability) +\n-                \" \" + _fsrc + \" -o \" + _fsrc + \".o 2> \" + _flog;\n+                (capability == 90 ? \"a \" : \" \") + _fsrc + \" -o \" + _fsrc +\n+                \".o 2> \" + _flog;\n+\n           err = system(cmd.c_str());\n           if (err != 0) {\n             std::ifstream _log(_flog);"}]