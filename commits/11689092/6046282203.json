[{"filename": ".github/workflows/wheels.yml", "status": "modified", "additions": 13, "deletions": 32, "changes": 45, "file_content_changes": "@@ -33,9 +33,6 @@ jobs:\n       - name: Patch setup.py\n         if: ${{ steps.check-version.outputs.new_commit == 'true' }}\n         run: |\n-          sed -i 's/name\\=\\\"triton\\\"/name=\"triton-nightly\"/g' python/setup.py\n-          export LATEST_DATE=$(TZ=UTC0 git show --quiet --date='format-local:%Y%m%d%H%M%S' --format=\"%cd\")\n-          sed -i -r \"s/version\\=\\\"(.*)\\\"/version=\\\"\\1-dev\"$LATEST_DATE\"\\\"/g\" python/setup.py\n           echo \"\" >> python/setup.cfg\n           echo \"[build_ext]\" >> python/setup.cfg\n           echo \"base-dir=/project\" >> python/setup.cfg\n@@ -50,35 +47,19 @@ jobs:\n           export CIBW_BUILD=\"{cp,pp}3*-manylinux_x86_64\"\n           python3 -m cibuildwheel python --output-dir wheelhouse\n \n-      - name: Install Azure CLI\n-        if: ${{ steps.check-version.outputs.new_commit == 'true' }}\n-        run: |\n-          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash\n-\n-      - name: Azure login\n-        if: ${{ steps.check-version.outputs.new_commit == 'true' }}\n-        uses: azure/login@v1\n-        with:\n-          client-id: ${{ secrets.AZURE_CLIENT_ID }}\n-          tenant-id: ${{ secrets.AZURE_TENANT_ID }}\n-          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}\n-\n-      - id: generate-token\n-        name: Generate token\n-        if: ${{ steps.check-version.outputs.new_commit == 'true' }}\n-        run: |\n-          AZ_TOKEN=$(az account get-access-token --query accessToken)\n-          echo \"::add-mask::$AZ_TOKEN\"\n-          echo \"access_token=$AZ_TOKEN\" >> \"$GITHUB_OUTPUT\"\n-\n-      - name: Publish wheels to Azure DevOps\n-        if: ${{ steps.check-version.outputs.new_commit == 'true' }}\n+      - name: Append build number\n+        shell: bash\n         run: |\n-          python3 -m twine upload -r Triton-Nightly -u TritonArtifactsSP -p ${{ steps.generate-token.outputs.access_token }} --config-file utils/nightly.pypirc --non-interactive --verbose wheelhouse/*\n+          set -ex\n+          mkdir -p wheelhouse-1\n+          find wheelhouse -type f\n+          for i in $(find wheelhouse -type f); do\n+            echo \"Patching $i\"\n+            python3 -mwheel unpack \"$i\"\n+            python3 -mwheel pack triton-2.1.0 --build-number 0 --dest-dir wheelhouse-1\n+            rm -rf triton-2.1.0\n+          done\n \n-      - name: Azure Logout\n-        if: ${{ steps.check-version.outputs.new_commit == 'true' && (success() || failure()) }}\n+      - name: Upload wheels to PyPI\n         run: |\n-          az logout\n-          az cache purge\n-          az account clear\n+          python3 -m twine upload wheelhouse-1/* -u __token__ -p ${{ secrets.PYPY_API_TOKEN }}"}]