[{"filename": "python/triton/runtime/jit.py", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "file_content_changes": "@@ -122,6 +122,14 @@ def version_key():\n     return '-'.join(TRITON_VERSION) + '-' + ptxas_version + '-' + '-'.join(contents)\n \n \n+def _normalize_ty(ty) -> str:\n+    if isinstance(ty, type):\n+        return ty.__name__\n+    elif isinstance(ty, str):\n+        return ty\n+    return repr(ty)\n+\n+\n class KernelInterface(Generic[T]):\n     run: T\n \n@@ -425,8 +433,7 @@ def __init__(self, fn, version=None, do_not_specialize=None, debug=None, noinlin\n         self.debug = True if os.environ.get(\"TRITON_DEBUG\", \"0\") == \"1\" else debug\n         self.noinline = noinline\n         # annotations\n-        normalize_ty = lambda ty: ty.__name__ if isinstance(ty, type) else ty\n-        self.__annotations__ = {name: normalize_ty(ty) for name, ty in fn.__annotations__.items()}\n+        self.__annotations__ = {name: _normalize_ty(ty) for name, ty in fn.__annotations__.items()}\n         # index of constexprs\n         self.constexprs = [self.arg_names.index(name) for name, ty in self.__annotations__.items() if 'constexpr' in ty]\n         # launcher"}]