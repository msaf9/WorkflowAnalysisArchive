[{"filename": ".github/workflows/wheels.yml", "status": "modified", "additions": 42, "deletions": 17, "changes": 59, "file_content_changes": "@@ -2,7 +2,7 @@ name: Wheels\n on:\n   workflow_dispatch:\n   schedule:\n-    - cron: \"0 2 * * *\"\n+    - cron: \"20 2 * * *\"\n \n jobs:\n \n@@ -18,25 +18,20 @@ jobs:\n       - name: Checkout\n         uses: actions/checkout@v3\n \n-      - name: Install Azure CLI\n+      # The LATEST_DATE here should be kept in sync with the one in Patch setup.py\n+      - id: check-version\n+        name: Check latest version\n         run: |\n-          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash\n-\n-      - name: Azure login\n-        uses: azure/login@v1\n-        with:\n-          client-id: ${{ secrets.AZURE_CLIENT_ID }}\n-          tenant-id: ${{ secrets.AZURE_TENANT_ID }}\n-          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}\n-\n-      - id: generate-token\n-        name: Generate token\n-        run: |\n-          AZ_TOKEN=$(az account get-access-token --query accessToken)\n-          echo \"::add-mask::$AZ_TOKEN\"\n-          echo \"access_token=$AZ_TOKEN\" >> \"$GITHUB_OUTPUT\"\n+          export PACKAGE_DATE=$(python3 -m pip install --user --index-url https://aiinfra.pkgs.visualstudio.com/PublicPackages/_packaging/Triton-Nightly/pypi/simple/ --dry-run triton-nightly== |& grep -oP '(?<=, )[0-9\\.]+dev[0-9]+(?=\\))' | grep -oP '(?<=dev)[0-9]+')\n+          export LATEST_DATE=$(TZ=UTC0 git show --quiet --date='format-local:%Y%m%d%H%M%S' --format=\"%cd\")\n+          if cmp -s <(echo $PACKAGE_DATE) <(echo $LATEST_DATE); then\n+            echo \"new_commit=false\" >> \"$GITHUB_OUTPUT\"\n+          else\n+            echo \"new_commit=true\" >> \"$GITHUB_OUTPUT\"\n+          fi\n \n       - name: Patch setup.py\n+        if: ${{ steps.check-version.outputs.new_commit == 'true' }}\n         run: |\n           sed -i 's/name\\=\\\"triton\\\"/name=\"triton-nightly\"/g' python/setup.py\n           export LATEST_DATE=$(TZ=UTC0 git show --quiet --date='format-local:%Y%m%d%H%M%S' --format=\"%cd\")\n@@ -46,6 +41,7 @@ jobs:\n           echo \"base-dir=/project\" >> python/setup.cfg\n \n       - name: Build wheels\n+        if: ${{ steps.check-version.outputs.new_commit == 'true' }}\n         run: |\n           export CIBW_MANYLINUX_X86_64_IMAGE=\"quay.io/pypa/manylinux2014_x86_64:latest\"\n           #export CIBW_MANYLINUX_PYPY_X86_64_IMAGE=\"quay.io/pypa/manylinux2014_x86_64:latest\"\n@@ -54,6 +50,35 @@ jobs:\n           export CIBW_BUILD=\"{cp,pp}3*-manylinux_x86_64\"\n           python3 -m cibuildwheel python --output-dir wheelhouse\n \n+      - name: Install Azure CLI\n+        if: ${{ steps.check-version.outputs.new_commit == 'true' }}\n+        run: |\n+          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash\n+\n+      - name: Azure login\n+        if: ${{ steps.check-version.outputs.new_commit == 'true' }}\n+        uses: azure/login@v1\n+        with:\n+          client-id: ${{ secrets.AZURE_CLIENT_ID }}\n+          tenant-id: ${{ secrets.AZURE_TENANT_ID }}\n+          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}\n+\n+      - id: generate-token\n+        name: Generate token\n+        if: ${{ steps.check-version.outputs.new_commit == 'true' }}\n+        run: |\n+          AZ_TOKEN=$(az account get-access-token --query accessToken)\n+          echo \"::add-mask::$AZ_TOKEN\"\n+          echo \"access_token=$AZ_TOKEN\" >> \"$GITHUB_OUTPUT\"\n+\n       - name: Publish wheels to Azure DevOps\n+        if: ${{ steps.check-version.outputs.new_commit == 'true' }}\n         run: |\n           python3 -m twine upload -r Triton-Nightly -u TritonArtifactsSP -p ${{ steps.generate-token.outputs.access_token }} --config-file utils/nightly.pypirc --non-interactive --verbose wheelhouse/*\n+\n+      - name: Azure Logout\n+        if: ${{ steps.check-version.outputs.new_commit == 'true' && (success() || failure()) }}\n+        run: |\n+          az logout\n+          az cache purge\n+          az account clear"}, {"filename": "README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -25,7 +25,7 @@ You can install the latest stable release of Triton from pip:\n ```bash\n pip install triton\n ```\n-Binary wheels are available for CPython 3.8-3.11 and PyPy 3.8-3.9.\n+Binary wheels are available for CPython 3.7-3.11 and PyPy 3.8-3.9.\n \n And the latest nightly release:\n "}, {"filename": "docs/getting-started/installation.rst", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "file_content_changes": "@@ -12,7 +12,7 @@ You can install the latest stable release of Triton from pip:\n \n       pip install triton\n \n-Binary wheels are available for CPython 3.8-3.11 and PyPy 3.8-3.9.\n+Binary wheels are available for CPython 3.7-3.11 and PyPy 3.8-3.9.\n \n And the latest nightly release:\n "}]