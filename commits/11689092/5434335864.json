[{"filename": ".github/workflows/integration-tests.yml", "status": "modified", "additions": 85, "deletions": 61, "changes": 146, "file_content_changes": "@@ -19,25 +19,28 @@ jobs:\n   Runner-Preparation:\n     runs-on: ubuntu-latest\n     outputs:\n-      matrix: ${{ steps.set-matrix.outputs.matrix }}\n+      matrix-required: ${{ steps.set-matrix.outputs.matrix-required }}\n+      matrix-optional: ${{ steps.set-matrix.outputs.matrix-optional }}\n     steps:\n       - name: Prepare runner matrix\n         id: set-matrix\n         run: |\n           if [ x\"${{ github.repository }}\" == x\"openai/triton\" ]; then\n-            echo '::set-output name=matrix::[[\"self-hosted\", \"A100\"], [\"self-hosted\", \"H100\"], [\"self-hosted\", \"gfx908\"], [\"self-hosted\", \"arc770\"]]'\n+            echo '::set-output name=matrix-required::[[\"self-hosted\", \"A100\"], [\"self-hosted\", \"H100\"]]'\n+            echo '::set-output name=matrix-optional::[[\"self-hosted\", \"gfx908\"], [\"self-hosted\", \"arc770\"]]'\n           else\n-            echo '::set-output name=matrix::[\"ubuntu-latest\"]'\n+            echo '::set-output name=matrix-required::[\"ubuntu-latest\"]'\n+            echo '::set-output name=matrix-optional::[\"ubuntu-latest\"]'\n           fi\n \n-  Integration-Tests:\n+  Integration-Tests-Nvidia:\n     needs: Runner-Preparation\n \n     runs-on: ${{ matrix.runner }}\n \n     strategy:\n       matrix:\n-        runner: ${{fromJson(needs.Runner-Preparation.outputs.matrix)}}\n+        runner: ${{fromJson(needs.Runner-Preparation.outputs.matrix-required)}}\n \n     steps:\n       - name: Checkout\n@@ -48,6 +51,81 @@ jobs:\n         run: |\n           echo \"BACKEND=CUDA\" >> \"${GITHUB_ENV}\"\n \n+      - name: Clear cache\n+        run: |\n+          rm -rf ~/.triton\n+\n+      - name: Update PATH\n+        run: |\n+          echo \"PATH=${HOME}/.local/bin:${PATH}\" >> \"${GITHUB_ENV}\"\n+\n+      - name: Install Triton\n+        if: ${{ env.BACKEND == 'CUDA'}}\n+        run: |\n+          cd python\n+          python3 -m pip install --upgrade pip\n+          python3 -m pip install cmake==3.24\n+          python3 -m pip install --no-build-isolation -vvv '.[tests]'\n+\n+      - name: Run lit tests\n+        if: ${{ env.BACKEND == 'CUDA'}}\n+        run: |\n+          python3 -m pip install lit\n+          cd python\n+          LIT_TEST_DIR=\"build/$(ls build | grep -i cmake)/test\"\n+          if [ ! -d \"${LIT_TEST_DIR}\" ]; then\n+            echo \"Coult not find '${LIT_TEST_DIR}'\" ; exit -1\n+          fi\n+          lit -v \"${LIT_TEST_DIR}\"\n+\n+      - name: Run python tests on CUDA\n+        if: ${{ env.BACKEND == 'CUDA'}}\n+        run: |\n+          cd python/test/unit\n+          python3 -m pytest\n+\n+      - name: Create artifacts archive\n+        if: ${{(matrix.runner[0] == 'self-hosted') && (matrix.runner[1] == 'V100' || matrix.runner[1] == 'A100' || matrix.runner[1] == 'H100')}}\n+        run: |\n+          cd ~/.triton\n+          tar -czvf artifacts.tar.gz cache\n+\n+      - name: Upload artifacts archive\n+        if: ${{(matrix.runner[0] == 'self-hosted') && (matrix.runner[1] == 'V100' || matrix.runner[1] == 'A100' || matrix.runner[1] == 'H100')}}\n+        uses: actions/upload-artifact@v2\n+        with:\n+          name: artifacts ${{ matrix.runner[1] }}\n+          path: ~/.triton/artifacts.tar.gz\n+\n+      - name: Run CXX unittests\n+        if: ${{ env.BACKEND == 'CUDA'}}\n+        run: |\n+          cd python\n+          cd \"build/$(ls build | grep -i cmake)\"\n+          ctest\n+\n+      - name: Regression tests\n+        if: ${{ contains(matrix.runner, 'A100') }}\n+        run: |\n+          cd python/test/regression\n+          sudo nvidia-smi -i 0 -pm 1\n+          sudo nvidia-smi -i 0 --lock-gpu-clocks=1350,1350\n+          python3 -m pytest -vs .\n+          sudo nvidia-smi -i 0 -rgc\n+\n+  Integration-Tests-Third-Party:\n+    needs: Runner-Preparation\n+\n+    runs-on: ${{ matrix.runner }}\n+\n+    strategy:\n+      matrix:\n+        runner: ${{fromJson(needs.Runner-Preparation.outputs.matrix-optional)}}\n+\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v2\n+\n       - name: Set ROCM ENV\n         if: ${{(matrix.runner[0] == 'self-hosted') && (matrix.runner[1] == 'gfx908')}}\n         run: |\n@@ -81,14 +159,6 @@ jobs:\n           python3 -m pip install --upgrade pre-commit\n           python3 -m pre_commit run --all-files\n \n-      - name: Install Triton\n-        if: ${{ env.BACKEND == 'CUDA'}}\n-        run: |\n-          cd python\n-          python3 -m pip install --upgrade pip\n-          python3 -m pip install cmake==3.24\n-          python3 -m pip install --no-build-isolation -vvv '.[tests]'\n-\n       - name: Install Triton on ROCM\n         if: ${{ env.BACKEND == 'ROCM'}}\n         run: |\n@@ -113,43 +183,6 @@ jobs:\n           python3 setup.py build\n           python3 -m pip install --no-build-isolation -vvv '.[tests]'\n \n-      - name: Run lit tests\n-        if: ${{ env.BACKEND == 'CUDA'}}\n-        run: |\n-          python3 -m pip install lit\n-          cd python\n-          LIT_TEST_DIR=\"build/$(ls build | grep -i cmake)/test\"\n-          if [ ! -d \"${LIT_TEST_DIR}\" ]; then\n-            echo \"Coult not find '${LIT_TEST_DIR}'\" ; exit -1\n-          fi\n-          lit -v \"${LIT_TEST_DIR}\"\n-\n-      - name: Run python tests on CUDA\n-        if: ${{ env.BACKEND == 'CUDA'}}\n-        run: |\n-          cd python/test/unit\n-          python3 -m pytest\n-\n-      - name: Create artifacts archive\n-        if: ${{(matrix.runner[0] == 'self-hosted') && (matrix.runner[1] == 'V100' || matrix.runner[1] == 'A100' || matrix.runner[1] == 'H100')}}\n-        run: |\n-          cd ~/.triton\n-          tar -czvf artifacts.tar.gz cache\n-\n-      - name: Upload artifacts archive\n-        if: ${{(matrix.runner[0] == 'self-hosted') && (matrix.runner[1] == 'V100' || matrix.runner[1] == 'A100' || matrix.runner[1] == 'H100')}}\n-        uses: actions/upload-artifact@v2\n-        with:\n-          name: artifacts ${{ matrix.runner[1] }}\n-          path: ~/.triton/artifacts.tar.gz\n-\n-      - name: Run CXX unittests\n-        if: ${{ env.BACKEND == 'CUDA'}}\n-        run: |\n-          cd python\n-          cd \"build/$(ls build | grep -i cmake)\"\n-          ctest\n-\n       - name: Run python tests on ROCM\n         if: ${{ env.BACKEND == 'ROCM'}}\n         run: |\n@@ -165,17 +198,8 @@ jobs:\n           cd python/test/backend/third_party_backends\n           python3 -m pytest --capture=tee-sys -rfs --verbose --backend xpu\n \n-      - name: Regression tests\n-        if: ${{ contains(matrix.runner, 'A100') }}\n-        run: |\n-          cd python/test/regression\n-          sudo nvidia-smi -i 0 -pm 1\n-          sudo nvidia-smi -i 0 --lock-gpu-clocks=1350,1350\n-          python3 -m pytest -vs .\n-          sudo nvidia-smi -i 0 -rgc\n-\n   Compare-artifacts:\n-    needs: Integration-Tests\n+    needs: Integration-Tests-Nvidia\n \n     runs-on: ubuntu-latest\n \n@@ -193,7 +217,7 @@ jobs:\n       - name: Download latest main artifacts\n         env:\n           ARTIFACT_NAME: artifacts A100\n-          ARTIFACT_JOB_NAME: Integration-Tests\n+          ARTIFACT_JOB_NAME: Integration-Tests-Nvidia\n           GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n         run: |\n           OWNER_REPO=\"${{ github.repository }}\""}]